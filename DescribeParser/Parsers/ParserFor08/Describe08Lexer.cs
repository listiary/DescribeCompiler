//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Describe08.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class Describe08Lexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		PROTO_SLASHES=1, LINE_COMMENT=2, BLOCK_COMMENT=3, TAG=4, LINK=5, HYPHEN=6, 
		RIGHT_ARROW=7, LEFT_ARROW=8, RIGHT_SQUARE=9, SEPARATOR=10, TERMINATOR=11, 
		COLON=12, FORWARD_SLASH=13, STAR=14, ESCAPE_ESCAPE=15, ESCAPE_HYPHEN=16, 
		ESCAPE_RIGHT_ARROW=17, ESCAPE_LEFT_ARROW=18, ESCAPE_RIGHT_SQUARE=19, ESCAPE_LEFT_SQUARE=20, 
		ESCAPE_SEPARATOR=21, ESCAPE_TERMINATOR=22, ESCAPE_COLON=23, ESCAPE_LCOMMENT=24, 
		ESCAPE_BCOMMENT=25, ESCAPE=26, DATA=27;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"WHITESPACE", "LINESPACE", "PROTO_SLASHES", "LINE_COMMENT", "BLOCK_COMMENT", 
		"TAG", "LINK", "HYPHEN", "RIGHT_ARROW", "LEFT_ARROW", "RIGHT_SQUARE", 
		"SEPARATOR", "TERMINATOR", "COLON", "FORWARD_SLASH", "STAR", "ESCAPE_ESCAPE", 
		"ESCAPE_HYPHEN", "ESCAPE_RIGHT_ARROW", "ESCAPE_LEFT_ARROW", "ESCAPE_RIGHT_SQUARE", 
		"ESCAPE_LEFT_SQUARE", "ESCAPE_SEPARATOR", "ESCAPE_TERMINATOR", "ESCAPE_COLON", 
		"ESCAPE_LCOMMENT", "ESCAPE_BCOMMENT", "ESCAPE", "DATA_CHAR", "DATA"
	};


	public Describe08Lexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public Describe08Lexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'://'", null, null, null, null, "'-'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "PROTO_SLASHES", "LINE_COMMENT", "BLOCK_COMMENT", "TAG", "LINK", 
		"HYPHEN", "RIGHT_ARROW", "LEFT_ARROW", "RIGHT_SQUARE", "SEPARATOR", "TERMINATOR", 
		"COLON", "FORWARD_SLASH", "STAR", "ESCAPE_ESCAPE", "ESCAPE_HYPHEN", "ESCAPE_RIGHT_ARROW", 
		"ESCAPE_LEFT_ARROW", "ESCAPE_RIGHT_SQUARE", "ESCAPE_LEFT_SQUARE", "ESCAPE_SEPARATOR", 
		"ESCAPE_TERMINATOR", "ESCAPE_COLON", "ESCAPE_LCOMMENT", "ESCAPE_BCOMMENT", 
		"ESCAPE", "DATA"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Describe08.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static Describe08Lexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,27,316,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,1,0,1,0,1,1,1,1,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,5,3,74,
		8,3,10,3,12,3,77,9,3,1,3,3,3,80,8,3,1,3,1,3,5,3,84,8,3,10,3,12,3,87,9,
		3,1,3,3,3,90,8,3,1,3,1,3,1,4,1,4,1,4,1,4,5,4,98,8,4,10,4,12,4,101,9,4,
		1,4,1,4,1,4,1,4,5,4,107,8,4,10,4,12,4,110,9,4,1,4,3,4,113,8,4,1,4,1,4,
		1,5,1,5,4,5,119,8,5,11,5,12,5,120,1,5,1,5,5,5,125,8,5,10,5,12,5,128,9,
		5,1,6,1,6,5,6,132,8,6,10,6,12,6,135,9,6,1,6,1,6,5,6,139,8,6,10,6,12,6,
		142,9,6,1,7,1,7,1,8,1,8,5,8,148,8,8,10,8,12,8,151,9,8,1,9,1,9,5,9,155,
		8,9,10,9,12,9,158,9,9,1,10,1,10,5,10,162,8,10,10,10,12,10,165,9,10,1,11,
		1,11,5,11,169,8,11,10,11,12,11,172,9,11,1,12,1,12,5,12,176,8,12,10,12,
		12,12,179,9,12,1,13,1,13,5,13,183,8,13,10,13,12,13,186,9,13,1,14,1,14,
		5,14,190,8,14,10,14,12,14,193,9,14,1,15,1,15,5,15,197,8,15,10,15,12,15,
		200,9,15,1,16,1,16,1,16,1,16,5,16,206,8,16,10,16,12,16,209,9,16,1,17,1,
		17,1,17,1,17,5,17,215,8,17,10,17,12,17,218,9,17,1,18,1,18,1,18,1,18,5,
		18,224,8,18,10,18,12,18,227,9,18,1,19,1,19,1,19,1,19,5,19,233,8,19,10,
		19,12,19,236,9,19,1,20,1,20,1,20,1,20,5,20,242,8,20,10,20,12,20,245,9,
		20,1,21,1,21,1,21,1,21,5,21,251,8,21,10,21,12,21,254,9,21,1,22,1,22,1,
		22,1,22,5,22,260,8,22,10,22,12,22,263,9,22,1,23,1,23,1,23,1,23,5,23,269,
		8,23,10,23,12,23,272,9,23,1,24,1,24,1,24,1,24,5,24,278,8,24,10,24,12,24,
		281,9,24,1,25,1,25,1,25,1,25,1,25,5,25,288,8,25,10,25,12,25,291,9,25,1,
		26,1,26,1,26,1,26,1,26,5,26,298,8,26,10,26,12,26,301,9,26,1,27,1,27,5,
		27,305,8,27,10,27,12,27,308,9,27,1,28,1,28,1,29,4,29,313,8,29,11,29,12,
		29,314,4,75,99,120,133,0,30,1,0,3,0,5,1,7,2,9,3,11,4,13,5,15,6,17,7,19,
		8,21,9,23,10,25,11,27,12,29,13,31,14,33,15,35,16,37,17,39,18,41,19,43,
		20,45,21,47,22,49,23,51,24,53,25,55,26,57,0,59,27,1,0,3,11,0,9,9,11,13,
		32,32,133,133,160,160,5760,5760,8192,8202,8232,8233,8239,8239,8287,8287,
		12288,12288,10,0,9,13,32,32,133,133,160,160,5760,5760,8192,8202,8232,8233,
		8239,8239,8287,8287,12288,12288,6,0,42,42,44,45,47,47,58,60,62,62,91,93,
		344,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,
		1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,
		0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,
		1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,
		0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,59,1,0,0,0,1,61,
		1,0,0,0,3,63,1,0,0,0,5,65,1,0,0,0,7,69,1,0,0,0,9,93,1,0,0,0,11,116,1,0,
		0,0,13,129,1,0,0,0,15,143,1,0,0,0,17,145,1,0,0,0,19,152,1,0,0,0,21,159,
		1,0,0,0,23,166,1,0,0,0,25,173,1,0,0,0,27,180,1,0,0,0,29,187,1,0,0,0,31,
		194,1,0,0,0,33,201,1,0,0,0,35,210,1,0,0,0,37,219,1,0,0,0,39,228,1,0,0,
		0,41,237,1,0,0,0,43,246,1,0,0,0,45,255,1,0,0,0,47,264,1,0,0,0,49,273,1,
		0,0,0,51,282,1,0,0,0,53,292,1,0,0,0,55,302,1,0,0,0,57,309,1,0,0,0,59,312,
		1,0,0,0,61,62,7,0,0,0,62,2,1,0,0,0,63,64,7,1,0,0,64,4,1,0,0,0,65,66,5,
		58,0,0,66,67,5,47,0,0,67,68,5,47,0,0,68,6,1,0,0,0,69,70,5,47,0,0,70,71,
		5,47,0,0,71,75,1,0,0,0,72,74,9,0,0,0,73,72,1,0,0,0,74,77,1,0,0,0,75,76,
		1,0,0,0,75,73,1,0,0,0,76,89,1,0,0,0,77,75,1,0,0,0,78,80,5,13,0,0,79,78,
		1,0,0,0,79,80,1,0,0,0,80,81,1,0,0,0,81,85,5,10,0,0,82,84,3,3,1,0,83,82,
		1,0,0,0,84,87,1,0,0,0,85,83,1,0,0,0,85,86,1,0,0,0,86,90,1,0,0,0,87,85,
		1,0,0,0,88,90,5,0,0,1,89,79,1,0,0,0,89,88,1,0,0,0,90,91,1,0,0,0,91,92,
		6,3,0,0,92,8,1,0,0,0,93,94,5,47,0,0,94,95,5,42,0,0,95,99,1,0,0,0,96,98,
		9,0,0,0,97,96,1,0,0,0,98,101,1,0,0,0,99,100,1,0,0,0,99,97,1,0,0,0,100,
		112,1,0,0,0,101,99,1,0,0,0,102,103,5,42,0,0,103,104,5,47,0,0,104,108,1,
		0,0,0,105,107,3,3,1,0,106,105,1,0,0,0,107,110,1,0,0,0,108,106,1,0,0,0,
		108,109,1,0,0,0,109,113,1,0,0,0,110,108,1,0,0,0,111,113,5,0,0,1,112,102,
		1,0,0,0,112,111,1,0,0,0,113,114,1,0,0,0,114,115,6,4,0,0,115,10,1,0,0,0,
		116,118,5,60,0,0,117,119,9,0,0,0,118,117,1,0,0,0,119,120,1,0,0,0,120,121,
		1,0,0,0,120,118,1,0,0,0,121,122,1,0,0,0,122,126,5,62,0,0,123,125,3,3,1,
		0,124,123,1,0,0,0,125,128,1,0,0,0,126,124,1,0,0,0,126,127,1,0,0,0,127,
		12,1,0,0,0,128,126,1,0,0,0,129,133,5,91,0,0,130,132,9,0,0,0,131,130,1,
		0,0,0,132,135,1,0,0,0,133,134,1,0,0,0,133,131,1,0,0,0,134,136,1,0,0,0,
		135,133,1,0,0,0,136,140,5,93,0,0,137,139,3,3,1,0,138,137,1,0,0,0,139,142,
		1,0,0,0,140,138,1,0,0,0,140,141,1,0,0,0,141,14,1,0,0,0,142,140,1,0,0,0,
		143,144,5,45,0,0,144,16,1,0,0,0,145,149,5,62,0,0,146,148,3,3,1,0,147,146,
		1,0,0,0,148,151,1,0,0,0,149,147,1,0,0,0,149,150,1,0,0,0,150,18,1,0,0,0,
		151,149,1,0,0,0,152,156,5,60,0,0,153,155,3,3,1,0,154,153,1,0,0,0,155,158,
		1,0,0,0,156,154,1,0,0,0,156,157,1,0,0,0,157,20,1,0,0,0,158,156,1,0,0,0,
		159,163,5,93,0,0,160,162,3,3,1,0,161,160,1,0,0,0,162,165,1,0,0,0,163,161,
		1,0,0,0,163,164,1,0,0,0,164,22,1,0,0,0,165,163,1,0,0,0,166,170,5,44,0,
		0,167,169,3,3,1,0,168,167,1,0,0,0,169,172,1,0,0,0,170,168,1,0,0,0,170,
		171,1,0,0,0,171,24,1,0,0,0,172,170,1,0,0,0,173,177,5,59,0,0,174,176,3,
		3,1,0,175,174,1,0,0,0,176,179,1,0,0,0,177,175,1,0,0,0,177,178,1,0,0,0,
		178,26,1,0,0,0,179,177,1,0,0,0,180,184,5,58,0,0,181,183,3,3,1,0,182,181,
		1,0,0,0,183,186,1,0,0,0,184,182,1,0,0,0,184,185,1,0,0,0,185,28,1,0,0,0,
		186,184,1,0,0,0,187,191,5,47,0,0,188,190,3,3,1,0,189,188,1,0,0,0,190,193,
		1,0,0,0,191,189,1,0,0,0,191,192,1,0,0,0,192,30,1,0,0,0,193,191,1,0,0,0,
		194,198,5,42,0,0,195,197,3,3,1,0,196,195,1,0,0,0,197,200,1,0,0,0,198,196,
		1,0,0,0,198,199,1,0,0,0,199,32,1,0,0,0,200,198,1,0,0,0,201,202,5,92,0,
		0,202,203,5,92,0,0,203,207,1,0,0,0,204,206,3,3,1,0,205,204,1,0,0,0,206,
		209,1,0,0,0,207,205,1,0,0,0,207,208,1,0,0,0,208,34,1,0,0,0,209,207,1,0,
		0,0,210,211,5,92,0,0,211,212,5,45,0,0,212,216,1,0,0,0,213,215,3,3,1,0,
		214,213,1,0,0,0,215,218,1,0,0,0,216,214,1,0,0,0,216,217,1,0,0,0,217,36,
		1,0,0,0,218,216,1,0,0,0,219,220,5,92,0,0,220,221,5,62,0,0,221,225,1,0,
		0,0,222,224,3,3,1,0,223,222,1,0,0,0,224,227,1,0,0,0,225,223,1,0,0,0,225,
		226,1,0,0,0,226,38,1,0,0,0,227,225,1,0,0,0,228,229,5,92,0,0,229,230,5,
		60,0,0,230,234,1,0,0,0,231,233,3,3,1,0,232,231,1,0,0,0,233,236,1,0,0,0,
		234,232,1,0,0,0,234,235,1,0,0,0,235,40,1,0,0,0,236,234,1,0,0,0,237,238,
		5,92,0,0,238,239,5,93,0,0,239,243,1,0,0,0,240,242,3,3,1,0,241,240,1,0,
		0,0,242,245,1,0,0,0,243,241,1,0,0,0,243,244,1,0,0,0,244,42,1,0,0,0,245,
		243,1,0,0,0,246,247,5,92,0,0,247,248,5,91,0,0,248,252,1,0,0,0,249,251,
		3,3,1,0,250,249,1,0,0,0,251,254,1,0,0,0,252,250,1,0,0,0,252,253,1,0,0,
		0,253,44,1,0,0,0,254,252,1,0,0,0,255,256,5,92,0,0,256,257,5,44,0,0,257,
		261,1,0,0,0,258,260,3,3,1,0,259,258,1,0,0,0,260,263,1,0,0,0,261,259,1,
		0,0,0,261,262,1,0,0,0,262,46,1,0,0,0,263,261,1,0,0,0,264,265,5,92,0,0,
		265,266,5,59,0,0,266,270,1,0,0,0,267,269,3,3,1,0,268,267,1,0,0,0,269,272,
		1,0,0,0,270,268,1,0,0,0,270,271,1,0,0,0,271,48,1,0,0,0,272,270,1,0,0,0,
		273,274,5,92,0,0,274,275,5,58,0,0,275,279,1,0,0,0,276,278,3,3,1,0,277,
		276,1,0,0,0,278,281,1,0,0,0,279,277,1,0,0,0,279,280,1,0,0,0,280,50,1,0,
		0,0,281,279,1,0,0,0,282,283,5,92,0,0,283,284,5,47,0,0,284,285,5,47,0,0,
		285,289,1,0,0,0,286,288,3,3,1,0,287,286,1,0,0,0,288,291,1,0,0,0,289,287,
		1,0,0,0,289,290,1,0,0,0,290,52,1,0,0,0,291,289,1,0,0,0,292,293,5,92,0,
		0,293,294,5,47,0,0,294,295,5,42,0,0,295,299,1,0,0,0,296,298,3,3,1,0,297,
		296,1,0,0,0,298,301,1,0,0,0,299,297,1,0,0,0,299,300,1,0,0,0,300,54,1,0,
		0,0,301,299,1,0,0,0,302,306,5,92,0,0,303,305,3,3,1,0,304,303,1,0,0,0,305,
		308,1,0,0,0,306,304,1,0,0,0,306,307,1,0,0,0,307,56,1,0,0,0,308,306,1,0,
		0,0,309,310,8,2,0,0,310,58,1,0,0,0,311,313,3,57,28,0,312,311,1,0,0,0,313,
		314,1,0,0,0,314,312,1,0,0,0,314,315,1,0,0,0,315,60,1,0,0,0,33,0,75,79,
		85,89,99,108,112,120,126,133,140,149,156,163,170,177,184,191,198,207,216,
		225,234,243,252,261,270,279,289,299,306,314,1,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
