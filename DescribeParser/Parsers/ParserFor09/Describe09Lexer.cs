//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Describe09.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class Describe09Lexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		PROTO_SLASHES=1, LINE_COMMENT=2, BLOCK_COMMENT=3, TAG=4, LINK=5, DECORATOR=6, 
		HYPHEN=7, RIGHT_ARROW=8, LEFT_ARROW=9, RIGHT_SQUARE=10, RIGHT_CURL=11, 
		SEPARATOR=12, TERMINATOR=13, COLON=14, FORWARD_SLASH=15, STAR=16, ESCAPE_ESCAPE=17, 
		ESCAPE_HYPHEN=18, ESCAPE_RIGHT_ARROW=19, ESCAPE_LEFT_ARROW=20, ESCAPE_RIGHT_SQUARE=21, 
		ESCAPE_LEFT_SQUARE=22, ESCAPE_RIGHT_CURL=23, ESCAPE_LEFT_CURL=24, ESCAPE_SEPARATOR=25, 
		ESCAPE_TERMINATOR=26, ESCAPE_COLON=27, ESCAPE_LCOMMENT=28, ESCAPE_BCOMMENT=29, 
		ESCAPE=30, DATA=31;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"WHITESPACE", "LINESPACE", "PROTO_SLASHES", "LINE_COMMENT", "BLOCK_COMMENT", 
		"TAG", "LINK", "DECORATOR", "HYPHEN", "RIGHT_ARROW", "LEFT_ARROW", "RIGHT_SQUARE", 
		"RIGHT_CURL", "SEPARATOR", "TERMINATOR", "COLON", "FORWARD_SLASH", "STAR", 
		"ESCAPE_ESCAPE", "ESCAPE_HYPHEN", "ESCAPE_RIGHT_ARROW", "ESCAPE_LEFT_ARROW", 
		"ESCAPE_RIGHT_SQUARE", "ESCAPE_LEFT_SQUARE", "ESCAPE_RIGHT_CURL", "ESCAPE_LEFT_CURL", 
		"ESCAPE_SEPARATOR", "ESCAPE_TERMINATOR", "ESCAPE_COLON", "ESCAPE_LCOMMENT", 
		"ESCAPE_BCOMMENT", "ESCAPE", "DATA_CHAR", "DATA"
	};


	public Describe09Lexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public Describe09Lexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'://'", null, null, null, null, null, "'-'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "PROTO_SLASHES", "LINE_COMMENT", "BLOCK_COMMENT", "TAG", "LINK", 
		"DECORATOR", "HYPHEN", "RIGHT_ARROW", "LEFT_ARROW", "RIGHT_SQUARE", "RIGHT_CURL", 
		"SEPARATOR", "TERMINATOR", "COLON", "FORWARD_SLASH", "STAR", "ESCAPE_ESCAPE", 
		"ESCAPE_HYPHEN", "ESCAPE_RIGHT_ARROW", "ESCAPE_LEFT_ARROW", "ESCAPE_RIGHT_SQUARE", 
		"ESCAPE_LEFT_SQUARE", "ESCAPE_RIGHT_CURL", "ESCAPE_LEFT_CURL", "ESCAPE_SEPARATOR", 
		"ESCAPE_TERMINATOR", "ESCAPE_COLON", "ESCAPE_LCOMMENT", "ESCAPE_BCOMMENT", 
		"ESCAPE", "DATA"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Describe09.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static Describe09Lexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,31,363,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,1,0,1,0,1,1,1,1,
		1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,5,3,82,8,3,10,3,12,3,85,9,3,1,3,3,3,88,
		8,3,1,3,1,3,5,3,92,8,3,10,3,12,3,95,9,3,1,3,3,3,98,8,3,1,3,1,3,1,4,1,4,
		1,4,1,4,5,4,106,8,4,10,4,12,4,109,9,4,1,4,1,4,1,4,1,4,5,4,115,8,4,10,4,
		12,4,118,9,4,1,4,3,4,121,8,4,1,4,1,4,1,5,1,5,4,5,127,8,5,11,5,12,5,128,
		1,5,1,5,5,5,133,8,5,10,5,12,5,136,9,5,1,6,1,6,5,6,140,8,6,10,6,12,6,143,
		9,6,1,6,1,6,5,6,147,8,6,10,6,12,6,150,9,6,1,7,1,7,5,7,154,8,7,10,7,12,
		7,157,9,7,1,7,1,7,5,7,161,8,7,10,7,12,7,164,9,7,1,8,1,8,1,9,1,9,5,9,170,
		8,9,10,9,12,9,173,9,9,1,10,1,10,5,10,177,8,10,10,10,12,10,180,9,10,1,11,
		1,11,5,11,184,8,11,10,11,12,11,187,9,11,1,12,1,12,5,12,191,8,12,10,12,
		12,12,194,9,12,1,13,1,13,5,13,198,8,13,10,13,12,13,201,9,13,1,14,1,14,
		5,14,205,8,14,10,14,12,14,208,9,14,1,15,1,15,5,15,212,8,15,10,15,12,15,
		215,9,15,1,16,1,16,5,16,219,8,16,10,16,12,16,222,9,16,1,17,1,17,5,17,226,
		8,17,10,17,12,17,229,9,17,1,18,1,18,1,18,1,18,5,18,235,8,18,10,18,12,18,
		238,9,18,1,19,1,19,1,19,1,19,5,19,244,8,19,10,19,12,19,247,9,19,1,20,1,
		20,1,20,1,20,5,20,253,8,20,10,20,12,20,256,9,20,1,21,1,21,1,21,1,21,5,
		21,262,8,21,10,21,12,21,265,9,21,1,22,1,22,1,22,1,22,5,22,271,8,22,10,
		22,12,22,274,9,22,1,23,1,23,1,23,1,23,5,23,280,8,23,10,23,12,23,283,9,
		23,1,24,1,24,1,24,1,24,5,24,289,8,24,10,24,12,24,292,9,24,1,25,1,25,1,
		25,1,25,5,25,298,8,25,10,25,12,25,301,9,25,1,26,1,26,1,26,1,26,5,26,307,
		8,26,10,26,12,26,310,9,26,1,27,1,27,1,27,1,27,5,27,316,8,27,10,27,12,27,
		319,9,27,1,28,1,28,1,28,1,28,5,28,325,8,28,10,28,12,28,328,9,28,1,29,1,
		29,1,29,1,29,1,29,5,29,335,8,29,10,29,12,29,338,9,29,1,30,1,30,1,30,1,
		30,1,30,5,30,345,8,30,10,30,12,30,348,9,30,1,31,1,31,5,31,352,8,31,10,
		31,12,31,355,9,31,1,32,1,32,1,33,4,33,360,8,33,11,33,12,33,361,5,83,107,
		128,141,155,0,34,1,0,3,0,5,1,7,2,9,3,11,4,13,5,15,6,17,7,19,8,21,9,23,
		10,25,11,27,12,29,13,31,14,33,15,35,16,37,17,39,18,41,19,43,20,45,21,47,
		22,49,23,51,24,53,25,55,26,57,27,59,28,61,29,63,30,65,0,67,31,1,0,3,11,
		0,9,9,11,13,32,32,133,133,160,160,5760,5760,8192,8202,8232,8233,8239,8239,
		8287,8287,12288,12288,10,0,9,13,32,32,133,133,160,160,5760,5760,8192,8202,
		8232,8233,8239,8239,8287,8287,12288,12288,8,0,42,42,44,45,47,47,58,60,
		62,62,91,93,123,123,125,125,396,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,
		11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,
		0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,
		0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,
		1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,
		0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,67,
		1,0,0,0,1,69,1,0,0,0,3,71,1,0,0,0,5,73,1,0,0,0,7,77,1,0,0,0,9,101,1,0,
		0,0,11,124,1,0,0,0,13,137,1,0,0,0,15,151,1,0,0,0,17,165,1,0,0,0,19,167,
		1,0,0,0,21,174,1,0,0,0,23,181,1,0,0,0,25,188,1,0,0,0,27,195,1,0,0,0,29,
		202,1,0,0,0,31,209,1,0,0,0,33,216,1,0,0,0,35,223,1,0,0,0,37,230,1,0,0,
		0,39,239,1,0,0,0,41,248,1,0,0,0,43,257,1,0,0,0,45,266,1,0,0,0,47,275,1,
		0,0,0,49,284,1,0,0,0,51,293,1,0,0,0,53,302,1,0,0,0,55,311,1,0,0,0,57,320,
		1,0,0,0,59,329,1,0,0,0,61,339,1,0,0,0,63,349,1,0,0,0,65,356,1,0,0,0,67,
		359,1,0,0,0,69,70,7,0,0,0,70,2,1,0,0,0,71,72,7,1,0,0,72,4,1,0,0,0,73,74,
		5,58,0,0,74,75,5,47,0,0,75,76,5,47,0,0,76,6,1,0,0,0,77,78,5,47,0,0,78,
		79,5,47,0,0,79,83,1,0,0,0,80,82,9,0,0,0,81,80,1,0,0,0,82,85,1,0,0,0,83,
		84,1,0,0,0,83,81,1,0,0,0,84,97,1,0,0,0,85,83,1,0,0,0,86,88,5,13,0,0,87,
		86,1,0,0,0,87,88,1,0,0,0,88,89,1,0,0,0,89,93,5,10,0,0,90,92,3,3,1,0,91,
		90,1,0,0,0,92,95,1,0,0,0,93,91,1,0,0,0,93,94,1,0,0,0,94,98,1,0,0,0,95,
		93,1,0,0,0,96,98,5,0,0,1,97,87,1,0,0,0,97,96,1,0,0,0,98,99,1,0,0,0,99,
		100,6,3,0,0,100,8,1,0,0,0,101,102,5,47,0,0,102,103,5,42,0,0,103,107,1,
		0,0,0,104,106,9,0,0,0,105,104,1,0,0,0,106,109,1,0,0,0,107,108,1,0,0,0,
		107,105,1,0,0,0,108,120,1,0,0,0,109,107,1,0,0,0,110,111,5,42,0,0,111,112,
		5,47,0,0,112,116,1,0,0,0,113,115,3,3,1,0,114,113,1,0,0,0,115,118,1,0,0,
		0,116,114,1,0,0,0,116,117,1,0,0,0,117,121,1,0,0,0,118,116,1,0,0,0,119,
		121,5,0,0,1,120,110,1,0,0,0,120,119,1,0,0,0,121,122,1,0,0,0,122,123,6,
		4,0,0,123,10,1,0,0,0,124,126,5,60,0,0,125,127,9,0,0,0,126,125,1,0,0,0,
		127,128,1,0,0,0,128,129,1,0,0,0,128,126,1,0,0,0,129,130,1,0,0,0,130,134,
		5,62,0,0,131,133,3,3,1,0,132,131,1,0,0,0,133,136,1,0,0,0,134,132,1,0,0,
		0,134,135,1,0,0,0,135,12,1,0,0,0,136,134,1,0,0,0,137,141,5,91,0,0,138,
		140,9,0,0,0,139,138,1,0,0,0,140,143,1,0,0,0,141,142,1,0,0,0,141,139,1,
		0,0,0,142,144,1,0,0,0,143,141,1,0,0,0,144,148,5,93,0,0,145,147,3,3,1,0,
		146,145,1,0,0,0,147,150,1,0,0,0,148,146,1,0,0,0,148,149,1,0,0,0,149,14,
		1,0,0,0,150,148,1,0,0,0,151,155,5,123,0,0,152,154,9,0,0,0,153,152,1,0,
		0,0,154,157,1,0,0,0,155,156,1,0,0,0,155,153,1,0,0,0,156,158,1,0,0,0,157,
		155,1,0,0,0,158,162,5,125,0,0,159,161,3,3,1,0,160,159,1,0,0,0,161,164,
		1,0,0,0,162,160,1,0,0,0,162,163,1,0,0,0,163,16,1,0,0,0,164,162,1,0,0,0,
		165,166,5,45,0,0,166,18,1,0,0,0,167,171,5,62,0,0,168,170,3,3,1,0,169,168,
		1,0,0,0,170,173,1,0,0,0,171,169,1,0,0,0,171,172,1,0,0,0,172,20,1,0,0,0,
		173,171,1,0,0,0,174,178,5,60,0,0,175,177,3,3,1,0,176,175,1,0,0,0,177,180,
		1,0,0,0,178,176,1,0,0,0,178,179,1,0,0,0,179,22,1,0,0,0,180,178,1,0,0,0,
		181,185,5,93,0,0,182,184,3,3,1,0,183,182,1,0,0,0,184,187,1,0,0,0,185,183,
		1,0,0,0,185,186,1,0,0,0,186,24,1,0,0,0,187,185,1,0,0,0,188,192,5,125,0,
		0,189,191,3,3,1,0,190,189,1,0,0,0,191,194,1,0,0,0,192,190,1,0,0,0,192,
		193,1,0,0,0,193,26,1,0,0,0,194,192,1,0,0,0,195,199,5,44,0,0,196,198,3,
		3,1,0,197,196,1,0,0,0,198,201,1,0,0,0,199,197,1,0,0,0,199,200,1,0,0,0,
		200,28,1,0,0,0,201,199,1,0,0,0,202,206,5,59,0,0,203,205,3,3,1,0,204,203,
		1,0,0,0,205,208,1,0,0,0,206,204,1,0,0,0,206,207,1,0,0,0,207,30,1,0,0,0,
		208,206,1,0,0,0,209,213,5,58,0,0,210,212,3,3,1,0,211,210,1,0,0,0,212,215,
		1,0,0,0,213,211,1,0,0,0,213,214,1,0,0,0,214,32,1,0,0,0,215,213,1,0,0,0,
		216,220,5,47,0,0,217,219,3,3,1,0,218,217,1,0,0,0,219,222,1,0,0,0,220,218,
		1,0,0,0,220,221,1,0,0,0,221,34,1,0,0,0,222,220,1,0,0,0,223,227,5,42,0,
		0,224,226,3,3,1,0,225,224,1,0,0,0,226,229,1,0,0,0,227,225,1,0,0,0,227,
		228,1,0,0,0,228,36,1,0,0,0,229,227,1,0,0,0,230,231,5,92,0,0,231,232,5,
		92,0,0,232,236,1,0,0,0,233,235,3,3,1,0,234,233,1,0,0,0,235,238,1,0,0,0,
		236,234,1,0,0,0,236,237,1,0,0,0,237,38,1,0,0,0,238,236,1,0,0,0,239,240,
		5,92,0,0,240,241,5,45,0,0,241,245,1,0,0,0,242,244,3,3,1,0,243,242,1,0,
		0,0,244,247,1,0,0,0,245,243,1,0,0,0,245,246,1,0,0,0,246,40,1,0,0,0,247,
		245,1,0,0,0,248,249,5,92,0,0,249,250,5,62,0,0,250,254,1,0,0,0,251,253,
		3,3,1,0,252,251,1,0,0,0,253,256,1,0,0,0,254,252,1,0,0,0,254,255,1,0,0,
		0,255,42,1,0,0,0,256,254,1,0,0,0,257,258,5,92,0,0,258,259,5,60,0,0,259,
		263,1,0,0,0,260,262,3,3,1,0,261,260,1,0,0,0,262,265,1,0,0,0,263,261,1,
		0,0,0,263,264,1,0,0,0,264,44,1,0,0,0,265,263,1,0,0,0,266,267,5,92,0,0,
		267,268,5,93,0,0,268,272,1,0,0,0,269,271,3,3,1,0,270,269,1,0,0,0,271,274,
		1,0,0,0,272,270,1,0,0,0,272,273,1,0,0,0,273,46,1,0,0,0,274,272,1,0,0,0,
		275,276,5,92,0,0,276,277,5,91,0,0,277,281,1,0,0,0,278,280,3,3,1,0,279,
		278,1,0,0,0,280,283,1,0,0,0,281,279,1,0,0,0,281,282,1,0,0,0,282,48,1,0,
		0,0,283,281,1,0,0,0,284,285,5,92,0,0,285,286,5,125,0,0,286,290,1,0,0,0,
		287,289,3,3,1,0,288,287,1,0,0,0,289,292,1,0,0,0,290,288,1,0,0,0,290,291,
		1,0,0,0,291,50,1,0,0,0,292,290,1,0,0,0,293,294,5,92,0,0,294,295,5,123,
		0,0,295,299,1,0,0,0,296,298,3,3,1,0,297,296,1,0,0,0,298,301,1,0,0,0,299,
		297,1,0,0,0,299,300,1,0,0,0,300,52,1,0,0,0,301,299,1,0,0,0,302,303,5,92,
		0,0,303,304,5,44,0,0,304,308,1,0,0,0,305,307,3,3,1,0,306,305,1,0,0,0,307,
		310,1,0,0,0,308,306,1,0,0,0,308,309,1,0,0,0,309,54,1,0,0,0,310,308,1,0,
		0,0,311,312,5,92,0,0,312,313,5,59,0,0,313,317,1,0,0,0,314,316,3,3,1,0,
		315,314,1,0,0,0,316,319,1,0,0,0,317,315,1,0,0,0,317,318,1,0,0,0,318,56,
		1,0,0,0,319,317,1,0,0,0,320,321,5,92,0,0,321,322,5,58,0,0,322,326,1,0,
		0,0,323,325,3,3,1,0,324,323,1,0,0,0,325,328,1,0,0,0,326,324,1,0,0,0,326,
		327,1,0,0,0,327,58,1,0,0,0,328,326,1,0,0,0,329,330,5,92,0,0,330,331,5,
		47,0,0,331,332,5,47,0,0,332,336,1,0,0,0,333,335,3,3,1,0,334,333,1,0,0,
		0,335,338,1,0,0,0,336,334,1,0,0,0,336,337,1,0,0,0,337,60,1,0,0,0,338,336,
		1,0,0,0,339,340,5,92,0,0,340,341,5,47,0,0,341,342,5,42,0,0,342,346,1,0,
		0,0,343,345,3,3,1,0,344,343,1,0,0,0,345,348,1,0,0,0,346,344,1,0,0,0,346,
		347,1,0,0,0,347,62,1,0,0,0,348,346,1,0,0,0,349,353,5,92,0,0,350,352,3,
		3,1,0,351,350,1,0,0,0,352,355,1,0,0,0,353,351,1,0,0,0,353,354,1,0,0,0,
		354,64,1,0,0,0,355,353,1,0,0,0,356,357,8,2,0,0,357,66,1,0,0,0,358,360,
		3,65,32,0,359,358,1,0,0,0,360,361,1,0,0,0,361,359,1,0,0,0,361,362,1,0,
		0,0,362,68,1,0,0,0,38,0,83,87,93,97,107,116,120,128,134,141,148,155,162,
		171,178,185,192,199,206,213,220,227,236,245,254,263,272,281,290,299,308,
		317,326,336,346,353,361,1,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
