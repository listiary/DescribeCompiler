//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Describe10.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class Describe10Lexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		LINE_COMMENT=1, BLOCK_COMMENT=2, TAG=3, LINK=4, DECORATOR=5, HYPHEN=6, 
		TILDE=7, PRODUCTION_ARROW=8, SEPARATOR=9, TERMINATOR=10, FORWARD_SLASHES=11, 
		FORWARD_SLASH=12, COMMA=13, SEMICOLON=14, RIGHT_ARROW=15, RIGHT_SQUARE=16, 
		RIGHT_CURL=17, STAR=18, ESCAPE_ESCAPE=19, ESCAPE_HYPHEN=20, ESCAPE_TILDE=21, 
		ESCAPE_RIGHT_ARROW=22, ESCAPE_LEFT_ARROW=23, ESCAPE_RIGHT_SQUARE=24, ESCAPE_LEFT_SQUARE=25, 
		ESCAPE_RIGHT_CURL=26, ESCAPE_LEFT_CURL=27, ESCAPE_SEPARATOR=28, ESCAPE_TERMINATOR=29, 
		ESCAPE_LCOMMENT=30, ESCAPE_BCOMMENT=31, ESCAPE=32, DATA=33;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"WHITESPACE", "LINESPACE", "LINE_COMMENT", "BLOCK_COMMENT", "TAG", "LINK", 
		"DECORATOR", "HYPHEN", "TILDE", "PRODUCTION_ARROW", "SEPARATOR", "TERMINATOR", 
		"FORWARD_SLASHES", "FORWARD_SLASH", "COMMA", "SEMICOLON", "RIGHT_ARROW", 
		"RIGHT_SQUARE", "RIGHT_CURL", "STAR", "ESCAPE_ESCAPE", "ESCAPE_HYPHEN", 
		"ESCAPE_TILDE", "ESCAPE_RIGHT_ARROW", "ESCAPE_LEFT_ARROW", "ESCAPE_RIGHT_SQUARE", 
		"ESCAPE_LEFT_SQUARE", "ESCAPE_RIGHT_CURL", "ESCAPE_LEFT_CURL", "ESCAPE_SEPARATOR", 
		"ESCAPE_TERMINATOR", "ESCAPE_LCOMMENT", "ESCAPE_BCOMMENT", "ESCAPE", "DATA_CHAR", 
		"DATA"
	};


	public Describe10Lexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public Describe10Lexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, null, "'-'", "'~'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "LINE_COMMENT", "BLOCK_COMMENT", "TAG", "LINK", "DECORATOR", "HYPHEN", 
		"TILDE", "PRODUCTION_ARROW", "SEPARATOR", "TERMINATOR", "FORWARD_SLASHES", 
		"FORWARD_SLASH", "COMMA", "SEMICOLON", "RIGHT_ARROW", "RIGHT_SQUARE", 
		"RIGHT_CURL", "STAR", "ESCAPE_ESCAPE", "ESCAPE_HYPHEN", "ESCAPE_TILDE", 
		"ESCAPE_RIGHT_ARROW", "ESCAPE_LEFT_ARROW", "ESCAPE_RIGHT_SQUARE", "ESCAPE_LEFT_SQUARE", 
		"ESCAPE_RIGHT_CURL", "ESCAPE_LEFT_CURL", "ESCAPE_SEPARATOR", "ESCAPE_TERMINATOR", 
		"ESCAPE_LCOMMENT", "ESCAPE_BCOMMENT", "ESCAPE", "DATA"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Describe10.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static Describe10Lexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,33,498,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,1,0,1,0,1,1,1,1,1,2,1,2,1,2,1,2,1,2,5,2,83,8,2,10,2,12,2,86,9,2,1,
		2,3,2,89,8,2,1,2,1,2,5,2,93,8,2,10,2,12,2,96,9,2,1,2,3,2,99,8,2,1,2,1,
		2,1,3,1,3,1,3,1,3,5,3,107,8,3,10,3,12,3,110,9,3,1,3,1,3,1,3,1,3,5,3,116,
		8,3,10,3,12,3,119,9,3,1,3,3,3,122,8,3,1,3,1,3,1,4,1,4,4,4,128,8,4,11,4,
		12,4,129,1,4,1,4,5,4,134,8,4,10,4,12,4,137,9,4,1,5,1,5,5,5,141,8,5,10,
		5,12,5,144,9,5,1,5,1,5,5,5,148,8,5,10,5,12,5,151,9,5,1,6,1,6,5,6,155,8,
		6,10,6,12,6,158,9,6,1,6,1,6,5,6,162,8,6,10,6,12,6,165,9,6,1,7,1,7,1,8,
		1,8,1,9,1,9,5,9,173,8,9,10,9,12,9,176,9,9,1,9,5,9,179,8,9,10,9,12,9,182,
		9,9,1,9,1,9,5,9,186,8,9,10,9,12,9,189,9,9,1,9,1,9,5,9,193,8,9,10,9,12,
		9,196,9,9,1,9,5,9,199,8,9,10,9,12,9,202,9,9,1,9,1,9,1,9,1,9,1,9,5,9,209,
		8,9,10,9,12,9,212,9,9,3,9,214,8,9,1,10,1,10,5,10,218,8,10,10,10,12,10,
		221,9,10,1,10,5,10,224,8,10,10,10,12,10,227,9,10,1,10,1,10,5,10,231,8,
		10,10,10,12,10,234,9,10,1,10,1,10,5,10,238,8,10,10,10,12,10,241,9,10,1,
		10,5,10,244,8,10,10,10,12,10,247,9,10,1,10,1,10,1,10,1,10,1,10,5,10,254,
		8,10,10,10,12,10,257,9,10,3,10,259,8,10,1,11,1,11,5,11,263,8,11,10,11,
		12,11,266,9,11,1,11,5,11,269,8,11,10,11,12,11,272,9,11,1,11,3,11,275,8,
		11,1,11,5,11,278,8,11,10,11,12,11,281,9,11,1,11,1,11,5,11,285,8,11,10,
		11,12,11,288,9,11,1,11,5,11,291,8,11,10,11,12,11,294,9,11,1,11,1,11,1,
		11,1,11,1,11,5,11,301,8,11,10,11,12,11,304,9,11,3,11,306,8,11,1,12,1,12,
		1,12,1,12,5,12,312,8,12,10,12,12,12,315,9,12,1,13,1,13,5,13,319,8,13,10,
		13,12,13,322,9,13,1,14,1,14,5,14,326,8,14,10,14,12,14,329,9,14,1,15,1,
		15,5,15,333,8,15,10,15,12,15,336,9,15,1,16,1,16,5,16,340,8,16,10,16,12,
		16,343,9,16,1,17,1,17,5,17,347,8,17,10,17,12,17,350,9,17,1,18,1,18,5,18,
		354,8,18,10,18,12,18,357,9,18,1,19,1,19,5,19,361,8,19,10,19,12,19,364,
		9,19,1,20,1,20,1,20,1,20,5,20,370,8,20,10,20,12,20,373,9,20,1,21,1,21,
		1,21,1,21,5,21,379,8,21,10,21,12,21,382,9,21,1,22,1,22,1,22,1,22,5,22,
		388,8,22,10,22,12,22,391,9,22,1,23,1,23,1,23,1,23,5,23,397,8,23,10,23,
		12,23,400,9,23,1,24,1,24,1,24,1,24,5,24,406,8,24,10,24,12,24,409,9,24,
		1,25,1,25,1,25,1,25,5,25,415,8,25,10,25,12,25,418,9,25,1,26,1,26,1,26,
		1,26,5,26,424,8,26,10,26,12,26,427,9,26,1,27,1,27,1,27,1,27,5,27,433,8,
		27,10,27,12,27,436,9,27,1,28,1,28,1,28,1,28,5,28,442,8,28,10,28,12,28,
		445,9,28,1,29,1,29,1,29,1,29,5,29,451,8,29,10,29,12,29,454,9,29,1,30,1,
		30,1,30,1,30,5,30,460,8,30,10,30,12,30,463,9,30,1,31,1,31,1,31,1,31,1,
		31,5,31,470,8,31,10,31,12,31,473,9,31,1,32,1,32,1,32,1,32,1,32,5,32,480,
		8,32,10,32,12,32,483,9,32,1,33,1,33,5,33,487,8,33,10,33,12,33,490,9,33,
		1,34,1,34,1,35,4,35,495,8,35,11,35,12,35,496,5,84,108,129,142,156,0,36,
		1,0,3,0,5,1,7,2,9,3,11,4,13,5,15,6,17,7,19,8,21,9,23,10,25,11,27,12,29,
		13,31,14,33,15,35,16,37,17,39,18,41,19,43,20,45,21,47,22,49,23,51,24,53,
		25,55,26,57,27,59,28,61,29,63,30,65,31,67,32,69,0,71,33,1,0,4,11,0,9,9,
		11,13,32,32,133,133,160,160,5760,5760,8192,8202,8232,8233,8239,8239,8287,
		8287,12288,12288,10,0,9,13,32,32,133,133,160,160,5760,5760,8192,8202,8232,
		8233,8239,8239,8287,8287,12288,12288,1,1,10,10,8,0,42,42,44,45,47,47,59,
		60,62,62,91,93,123,123,125,126,554,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,
		0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,
		1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,
		0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,
		1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,
		0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,
		1,0,0,0,0,67,1,0,0,0,0,71,1,0,0,0,1,73,1,0,0,0,3,75,1,0,0,0,5,77,1,0,0,
		0,7,102,1,0,0,0,9,125,1,0,0,0,11,138,1,0,0,0,13,152,1,0,0,0,15,166,1,0,
		0,0,17,168,1,0,0,0,19,213,1,0,0,0,21,258,1,0,0,0,23,305,1,0,0,0,25,307,
		1,0,0,0,27,316,1,0,0,0,29,323,1,0,0,0,31,330,1,0,0,0,33,337,1,0,0,0,35,
		344,1,0,0,0,37,351,1,0,0,0,39,358,1,0,0,0,41,365,1,0,0,0,43,374,1,0,0,
		0,45,383,1,0,0,0,47,392,1,0,0,0,49,401,1,0,0,0,51,410,1,0,0,0,53,419,1,
		0,0,0,55,428,1,0,0,0,57,437,1,0,0,0,59,446,1,0,0,0,61,455,1,0,0,0,63,464,
		1,0,0,0,65,474,1,0,0,0,67,484,1,0,0,0,69,491,1,0,0,0,71,494,1,0,0,0,73,
		74,7,0,0,0,74,2,1,0,0,0,75,76,7,1,0,0,76,4,1,0,0,0,77,78,5,47,0,0,78,79,
		5,47,0,0,79,80,5,32,0,0,80,84,1,0,0,0,81,83,9,0,0,0,82,81,1,0,0,0,83,86,
		1,0,0,0,84,85,1,0,0,0,84,82,1,0,0,0,85,98,1,0,0,0,86,84,1,0,0,0,87,89,
		5,13,0,0,88,87,1,0,0,0,88,89,1,0,0,0,89,90,1,0,0,0,90,94,5,10,0,0,91,93,
		3,3,1,0,92,91,1,0,0,0,93,96,1,0,0,0,94,92,1,0,0,0,94,95,1,0,0,0,95,99,
		1,0,0,0,96,94,1,0,0,0,97,99,5,0,0,1,98,88,1,0,0,0,98,97,1,0,0,0,99,100,
		1,0,0,0,100,101,6,2,0,0,101,6,1,0,0,0,102,103,5,47,0,0,103,104,5,42,0,
		0,104,108,1,0,0,0,105,107,9,0,0,0,106,105,1,0,0,0,107,110,1,0,0,0,108,
		109,1,0,0,0,108,106,1,0,0,0,109,121,1,0,0,0,110,108,1,0,0,0,111,112,5,
		42,0,0,112,113,5,47,0,0,113,117,1,0,0,0,114,116,3,3,1,0,115,114,1,0,0,
		0,116,119,1,0,0,0,117,115,1,0,0,0,117,118,1,0,0,0,118,122,1,0,0,0,119,
		117,1,0,0,0,120,122,5,0,0,1,121,111,1,0,0,0,121,120,1,0,0,0,122,123,1,
		0,0,0,123,124,6,3,0,0,124,8,1,0,0,0,125,127,5,60,0,0,126,128,9,0,0,0,127,
		126,1,0,0,0,128,129,1,0,0,0,129,130,1,0,0,0,129,127,1,0,0,0,130,131,1,
		0,0,0,131,135,5,62,0,0,132,134,3,3,1,0,133,132,1,0,0,0,134,137,1,0,0,0,
		135,133,1,0,0,0,135,136,1,0,0,0,136,10,1,0,0,0,137,135,1,0,0,0,138,142,
		5,91,0,0,139,141,9,0,0,0,140,139,1,0,0,0,141,144,1,0,0,0,142,143,1,0,0,
		0,142,140,1,0,0,0,143,145,1,0,0,0,144,142,1,0,0,0,145,149,5,93,0,0,146,
		148,3,3,1,0,147,146,1,0,0,0,148,151,1,0,0,0,149,147,1,0,0,0,149,150,1,
		0,0,0,150,12,1,0,0,0,151,149,1,0,0,0,152,156,5,123,0,0,153,155,9,0,0,0,
		154,153,1,0,0,0,155,158,1,0,0,0,156,157,1,0,0,0,156,154,1,0,0,0,157,159,
		1,0,0,0,158,156,1,0,0,0,159,163,5,125,0,0,160,162,3,3,1,0,161,160,1,0,
		0,0,162,165,1,0,0,0,163,161,1,0,0,0,163,164,1,0,0,0,164,14,1,0,0,0,165,
		163,1,0,0,0,166,167,5,45,0,0,167,16,1,0,0,0,168,169,5,126,0,0,169,18,1,
		0,0,0,170,174,5,62,0,0,171,173,3,1,0,0,172,171,1,0,0,0,173,176,1,0,0,0,
		174,172,1,0,0,0,174,175,1,0,0,0,175,180,1,0,0,0,176,174,1,0,0,0,177,179,
		3,7,3,0,178,177,1,0,0,0,179,182,1,0,0,0,180,178,1,0,0,0,180,181,1,0,0,
		0,181,183,1,0,0,0,182,180,1,0,0,0,183,187,5,10,0,0,184,186,3,3,1,0,185,
		184,1,0,0,0,186,189,1,0,0,0,187,185,1,0,0,0,187,188,1,0,0,0,188,214,1,
		0,0,0,189,187,1,0,0,0,190,194,5,62,0,0,191,193,3,1,0,0,192,191,1,0,0,0,
		193,196,1,0,0,0,194,192,1,0,0,0,194,195,1,0,0,0,195,200,1,0,0,0,196,194,
		1,0,0,0,197,199,3,7,3,0,198,197,1,0,0,0,199,202,1,0,0,0,200,198,1,0,0,
		0,200,201,1,0,0,0,201,203,1,0,0,0,202,200,1,0,0,0,203,214,3,5,2,0,204,
		205,5,62,0,0,205,206,5,62,0,0,206,210,1,0,0,0,207,209,3,3,1,0,208,207,
		1,0,0,0,209,212,1,0,0,0,210,208,1,0,0,0,210,211,1,0,0,0,211,214,1,0,0,
		0,212,210,1,0,0,0,213,170,1,0,0,0,213,190,1,0,0,0,213,204,1,0,0,0,214,
		20,1,0,0,0,215,219,5,44,0,0,216,218,3,1,0,0,217,216,1,0,0,0,218,221,1,
		0,0,0,219,217,1,0,0,0,219,220,1,0,0,0,220,225,1,0,0,0,221,219,1,0,0,0,
		222,224,3,7,3,0,223,222,1,0,0,0,224,227,1,0,0,0,225,223,1,0,0,0,225,226,
		1,0,0,0,226,228,1,0,0,0,227,225,1,0,0,0,228,232,5,10,0,0,229,231,3,3,1,
		0,230,229,1,0,0,0,231,234,1,0,0,0,232,230,1,0,0,0,232,233,1,0,0,0,233,
		259,1,0,0,0,234,232,1,0,0,0,235,239,5,44,0,0,236,238,3,1,0,0,237,236,1,
		0,0,0,238,241,1,0,0,0,239,237,1,0,0,0,239,240,1,0,0,0,240,245,1,0,0,0,
		241,239,1,0,0,0,242,244,3,7,3,0,243,242,1,0,0,0,244,247,1,0,0,0,245,243,
		1,0,0,0,245,246,1,0,0,0,246,248,1,0,0,0,247,245,1,0,0,0,248,259,3,5,2,
		0,249,250,5,44,0,0,250,251,5,44,0,0,251,255,1,0,0,0,252,254,3,3,1,0,253,
		252,1,0,0,0,254,257,1,0,0,0,255,253,1,0,0,0,255,256,1,0,0,0,256,259,1,
		0,0,0,257,255,1,0,0,0,258,215,1,0,0,0,258,235,1,0,0,0,258,249,1,0,0,0,
		259,22,1,0,0,0,260,264,5,59,0,0,261,263,3,1,0,0,262,261,1,0,0,0,263,266,
		1,0,0,0,264,262,1,0,0,0,264,265,1,0,0,0,265,270,1,0,0,0,266,264,1,0,0,
		0,267,269,3,7,3,0,268,267,1,0,0,0,269,272,1,0,0,0,270,268,1,0,0,0,270,
		271,1,0,0,0,271,274,1,0,0,0,272,270,1,0,0,0,273,275,7,2,0,0,274,273,1,
		0,0,0,275,279,1,0,0,0,276,278,3,3,1,0,277,276,1,0,0,0,278,281,1,0,0,0,
		279,277,1,0,0,0,279,280,1,0,0,0,280,306,1,0,0,0,281,279,1,0,0,0,282,286,
		5,59,0,0,283,285,3,1,0,0,284,283,1,0,0,0,285,288,1,0,0,0,286,284,1,0,0,
		0,286,287,1,0,0,0,287,292,1,0,0,0,288,286,1,0,0,0,289,291,3,7,3,0,290,
		289,1,0,0,0,291,294,1,0,0,0,292,290,1,0,0,0,292,293,1,0,0,0,293,295,1,
		0,0,0,294,292,1,0,0,0,295,306,3,5,2,0,296,297,5,59,0,0,297,298,5,59,0,
		0,298,302,1,0,0,0,299,301,3,3,1,0,300,299,1,0,0,0,301,304,1,0,0,0,302,
		300,1,0,0,0,302,303,1,0,0,0,303,306,1,0,0,0,304,302,1,0,0,0,305,260,1,
		0,0,0,305,282,1,0,0,0,305,296,1,0,0,0,306,24,1,0,0,0,307,308,5,47,0,0,
		308,309,5,47,0,0,309,313,1,0,0,0,310,312,3,3,1,0,311,310,1,0,0,0,312,315,
		1,0,0,0,313,311,1,0,0,0,313,314,1,0,0,0,314,26,1,0,0,0,315,313,1,0,0,0,
		316,320,5,47,0,0,317,319,3,3,1,0,318,317,1,0,0,0,319,322,1,0,0,0,320,318,
		1,0,0,0,320,321,1,0,0,0,321,28,1,0,0,0,322,320,1,0,0,0,323,327,5,44,0,
		0,324,326,3,3,1,0,325,324,1,0,0,0,326,329,1,0,0,0,327,325,1,0,0,0,327,
		328,1,0,0,0,328,30,1,0,0,0,329,327,1,0,0,0,330,334,5,59,0,0,331,333,3,
		3,1,0,332,331,1,0,0,0,333,336,1,0,0,0,334,332,1,0,0,0,334,335,1,0,0,0,
		335,32,1,0,0,0,336,334,1,0,0,0,337,341,5,62,0,0,338,340,3,3,1,0,339,338,
		1,0,0,0,340,343,1,0,0,0,341,339,1,0,0,0,341,342,1,0,0,0,342,34,1,0,0,0,
		343,341,1,0,0,0,344,348,5,93,0,0,345,347,3,3,1,0,346,345,1,0,0,0,347,350,
		1,0,0,0,348,346,1,0,0,0,348,349,1,0,0,0,349,36,1,0,0,0,350,348,1,0,0,0,
		351,355,5,125,0,0,352,354,3,3,1,0,353,352,1,0,0,0,354,357,1,0,0,0,355,
		353,1,0,0,0,355,356,1,0,0,0,356,38,1,0,0,0,357,355,1,0,0,0,358,362,5,42,
		0,0,359,361,3,3,1,0,360,359,1,0,0,0,361,364,1,0,0,0,362,360,1,0,0,0,362,
		363,1,0,0,0,363,40,1,0,0,0,364,362,1,0,0,0,365,366,5,92,0,0,366,367,5,
		92,0,0,367,371,1,0,0,0,368,370,3,3,1,0,369,368,1,0,0,0,370,373,1,0,0,0,
		371,369,1,0,0,0,371,372,1,0,0,0,372,42,1,0,0,0,373,371,1,0,0,0,374,375,
		5,92,0,0,375,376,5,45,0,0,376,380,1,0,0,0,377,379,3,3,1,0,378,377,1,0,
		0,0,379,382,1,0,0,0,380,378,1,0,0,0,380,381,1,0,0,0,381,44,1,0,0,0,382,
		380,1,0,0,0,383,384,5,92,0,0,384,385,5,126,0,0,385,389,1,0,0,0,386,388,
		3,3,1,0,387,386,1,0,0,0,388,391,1,0,0,0,389,387,1,0,0,0,389,390,1,0,0,
		0,390,46,1,0,0,0,391,389,1,0,0,0,392,393,5,92,0,0,393,394,5,62,0,0,394,
		398,1,0,0,0,395,397,3,3,1,0,396,395,1,0,0,0,397,400,1,0,0,0,398,396,1,
		0,0,0,398,399,1,0,0,0,399,48,1,0,0,0,400,398,1,0,0,0,401,402,5,92,0,0,
		402,403,5,60,0,0,403,407,1,0,0,0,404,406,3,3,1,0,405,404,1,0,0,0,406,409,
		1,0,0,0,407,405,1,0,0,0,407,408,1,0,0,0,408,50,1,0,0,0,409,407,1,0,0,0,
		410,411,5,92,0,0,411,412,5,93,0,0,412,416,1,0,0,0,413,415,3,3,1,0,414,
		413,1,0,0,0,415,418,1,0,0,0,416,414,1,0,0,0,416,417,1,0,0,0,417,52,1,0,
		0,0,418,416,1,0,0,0,419,420,5,92,0,0,420,421,5,91,0,0,421,425,1,0,0,0,
		422,424,3,3,1,0,423,422,1,0,0,0,424,427,1,0,0,0,425,423,1,0,0,0,425,426,
		1,0,0,0,426,54,1,0,0,0,427,425,1,0,0,0,428,429,5,92,0,0,429,430,5,125,
		0,0,430,434,1,0,0,0,431,433,3,3,1,0,432,431,1,0,0,0,433,436,1,0,0,0,434,
		432,1,0,0,0,434,435,1,0,0,0,435,56,1,0,0,0,436,434,1,0,0,0,437,438,5,92,
		0,0,438,439,5,123,0,0,439,443,1,0,0,0,440,442,3,3,1,0,441,440,1,0,0,0,
		442,445,1,0,0,0,443,441,1,0,0,0,443,444,1,0,0,0,444,58,1,0,0,0,445,443,
		1,0,0,0,446,447,5,92,0,0,447,448,5,44,0,0,448,452,1,0,0,0,449,451,3,3,
		1,0,450,449,1,0,0,0,451,454,1,0,0,0,452,450,1,0,0,0,452,453,1,0,0,0,453,
		60,1,0,0,0,454,452,1,0,0,0,455,456,5,92,0,0,456,457,5,59,0,0,457,461,1,
		0,0,0,458,460,3,3,1,0,459,458,1,0,0,0,460,463,1,0,0,0,461,459,1,0,0,0,
		461,462,1,0,0,0,462,62,1,0,0,0,463,461,1,0,0,0,464,465,5,92,0,0,465,466,
		5,47,0,0,466,467,5,47,0,0,467,471,1,0,0,0,468,470,3,3,1,0,469,468,1,0,
		0,0,470,473,1,0,0,0,471,469,1,0,0,0,471,472,1,0,0,0,472,64,1,0,0,0,473,
		471,1,0,0,0,474,475,5,92,0,0,475,476,5,47,0,0,476,477,5,42,0,0,477,481,
		1,0,0,0,478,480,3,3,1,0,479,478,1,0,0,0,480,483,1,0,0,0,481,479,1,0,0,
		0,481,482,1,0,0,0,482,66,1,0,0,0,483,481,1,0,0,0,484,488,5,92,0,0,485,
		487,3,3,1,0,486,485,1,0,0,0,487,490,1,0,0,0,488,486,1,0,0,0,488,489,1,
		0,0,0,489,68,1,0,0,0,490,488,1,0,0,0,491,492,8,3,0,0,492,70,1,0,0,0,493,
		495,3,69,34,0,494,493,1,0,0,0,495,496,1,0,0,0,496,494,1,0,0,0,496,497,
		1,0,0,0,497,72,1,0,0,0,59,0,84,88,94,98,108,117,121,129,135,142,149,156,
		163,174,180,187,194,200,210,213,219,225,232,239,245,255,258,264,270,274,
		279,286,292,302,305,313,320,327,334,341,348,355,362,371,380,389,398,407,
		416,425,434,443,452,461,471,481,488,496,1,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
