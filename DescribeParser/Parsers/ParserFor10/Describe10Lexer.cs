//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Describe10.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class Describe10Lexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		PROTO_SLASHES=1, LINE_COMMENT=2, BLOCK_COMMENT=3, TAG=4, LINK=5, DECORATOR=6, 
		HYPHEN=7, TILDE=8, PRODUCTION_ARROW=9, SEPARATOR=10, TERMINATOR=11, FORWARD_SLASH=12, 
		COMMA=13, SEMICOLON=14, COLON=15, RIGHT_ARROW=16, RIGHT_SQUARE=17, RIGHT_CURL=18, 
		STAR=19, ESCAPE_ESCAPE=20, ESCAPE_HYPHEN=21, ESCAPE_RIGHT_ARROW=22, ESCAPE_LEFT_ARROW=23, 
		ESCAPE_RIGHT_SQUARE=24, ESCAPE_LEFT_SQUARE=25, ESCAPE_RIGHT_CURL=26, ESCAPE_LEFT_CURL=27, 
		ESCAPE_SEPARATOR=28, ESCAPE_TERMINATOR=29, ESCAPE_COLON=30, ESCAPE_LCOMMENT=31, 
		ESCAPE_BCOMMENT=32, ESCAPE=33, DATA=34;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"WHITESPACE", "LINESPACE", "PROTO_SLASHES", "LINE_COMMENT", "BLOCK_COMMENT", 
		"TAG", "LINK", "DECORATOR", "HYPHEN", "TILDE", "PRODUCTION_ARROW", "SEPARATOR", 
		"TERMINATOR", "FORWARD_SLASH", "COMMA", "SEMICOLON", "COLON", "RIGHT_ARROW", 
		"RIGHT_SQUARE", "RIGHT_CURL", "STAR", "ESCAPE_ESCAPE", "ESCAPE_HYPHEN", 
		"ESCAPE_RIGHT_ARROW", "ESCAPE_LEFT_ARROW", "ESCAPE_RIGHT_SQUARE", "ESCAPE_LEFT_SQUARE", 
		"ESCAPE_RIGHT_CURL", "ESCAPE_LEFT_CURL", "ESCAPE_SEPARATOR", "ESCAPE_TERMINATOR", 
		"ESCAPE_COLON", "ESCAPE_LCOMMENT", "ESCAPE_BCOMMENT", "ESCAPE", "DATA_CHAR", 
		"DATA"
	};


	public Describe10Lexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public Describe10Lexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'://'", null, null, null, null, null, "'-'", "'~'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "PROTO_SLASHES", "LINE_COMMENT", "BLOCK_COMMENT", "TAG", "LINK", 
		"DECORATOR", "HYPHEN", "TILDE", "PRODUCTION_ARROW", "SEPARATOR", "TERMINATOR", 
		"FORWARD_SLASH", "COMMA", "SEMICOLON", "COLON", "RIGHT_ARROW", "RIGHT_SQUARE", 
		"RIGHT_CURL", "STAR", "ESCAPE_ESCAPE", "ESCAPE_HYPHEN", "ESCAPE_RIGHT_ARROW", 
		"ESCAPE_LEFT_ARROW", "ESCAPE_RIGHT_SQUARE", "ESCAPE_LEFT_SQUARE", "ESCAPE_RIGHT_CURL", 
		"ESCAPE_LEFT_CURL", "ESCAPE_SEPARATOR", "ESCAPE_TERMINATOR", "ESCAPE_COLON", 
		"ESCAPE_LCOMMENT", "ESCAPE_BCOMMENT", "ESCAPE", "DATA"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Describe10.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static Describe10Lexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,34,501,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,1,0,1,0,1,1,1,1,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,5,3,88,
		8,3,10,3,12,3,91,9,3,1,3,3,3,94,8,3,1,3,1,3,5,3,98,8,3,10,3,12,3,101,9,
		3,1,3,3,3,104,8,3,1,3,1,3,1,4,1,4,1,4,1,4,5,4,112,8,4,10,4,12,4,115,9,
		4,1,4,1,4,1,4,1,4,5,4,121,8,4,10,4,12,4,124,9,4,1,4,3,4,127,8,4,1,4,1,
		4,1,5,1,5,4,5,133,8,5,11,5,12,5,134,1,5,1,5,5,5,139,8,5,10,5,12,5,142,
		9,5,1,6,1,6,5,6,146,8,6,10,6,12,6,149,9,6,1,6,1,6,5,6,153,8,6,10,6,12,
		6,156,9,6,1,7,1,7,5,7,160,8,7,10,7,12,7,163,9,7,1,7,1,7,5,7,167,8,7,10,
		7,12,7,170,9,7,1,8,1,8,1,9,1,9,1,10,1,10,5,10,178,8,10,10,10,12,10,181,
		9,10,1,10,5,10,184,8,10,10,10,12,10,187,9,10,1,10,1,10,5,10,191,8,10,10,
		10,12,10,194,9,10,1,10,1,10,5,10,198,8,10,10,10,12,10,201,9,10,1,10,5,
		10,204,8,10,10,10,12,10,207,9,10,1,10,1,10,1,10,1,10,1,10,5,10,214,8,10,
		10,10,12,10,217,9,10,3,10,219,8,10,1,11,1,11,5,11,223,8,11,10,11,12,11,
		226,9,11,1,11,5,11,229,8,11,10,11,12,11,232,9,11,1,11,1,11,5,11,236,8,
		11,10,11,12,11,239,9,11,1,11,1,11,5,11,243,8,11,10,11,12,11,246,9,11,1,
		11,5,11,249,8,11,10,11,12,11,252,9,11,1,11,1,11,1,11,1,11,1,11,5,11,259,
		8,11,10,11,12,11,262,9,11,3,11,264,8,11,1,12,1,12,5,12,268,8,12,10,12,
		12,12,271,9,12,1,12,5,12,274,8,12,10,12,12,12,277,9,12,1,12,3,12,280,8,
		12,1,12,5,12,283,8,12,10,12,12,12,286,9,12,1,12,1,12,5,12,290,8,12,10,
		12,12,12,293,9,12,1,12,5,12,296,8,12,10,12,12,12,299,9,12,1,12,1,12,1,
		12,1,12,1,12,5,12,306,8,12,10,12,12,12,309,9,12,3,12,311,8,12,1,13,1,13,
		5,13,315,8,13,10,13,12,13,318,9,13,1,14,1,14,5,14,322,8,14,10,14,12,14,
		325,9,14,1,15,1,15,5,15,329,8,15,10,15,12,15,332,9,15,1,16,1,16,5,16,336,
		8,16,10,16,12,16,339,9,16,1,17,1,17,5,17,343,8,17,10,17,12,17,346,9,17,
		1,18,1,18,5,18,350,8,18,10,18,12,18,353,9,18,1,19,1,19,5,19,357,8,19,10,
		19,12,19,360,9,19,1,20,1,20,5,20,364,8,20,10,20,12,20,367,9,20,1,21,1,
		21,1,21,1,21,5,21,373,8,21,10,21,12,21,376,9,21,1,22,1,22,1,22,1,22,5,
		22,382,8,22,10,22,12,22,385,9,22,1,23,1,23,1,23,1,23,5,23,391,8,23,10,
		23,12,23,394,9,23,1,24,1,24,1,24,1,24,5,24,400,8,24,10,24,12,24,403,9,
		24,1,25,1,25,1,25,1,25,5,25,409,8,25,10,25,12,25,412,9,25,1,26,1,26,1,
		26,1,26,5,26,418,8,26,10,26,12,26,421,9,26,1,27,1,27,1,27,1,27,5,27,427,
		8,27,10,27,12,27,430,9,27,1,28,1,28,1,28,1,28,5,28,436,8,28,10,28,12,28,
		439,9,28,1,29,1,29,1,29,1,29,5,29,445,8,29,10,29,12,29,448,9,29,1,30,1,
		30,1,30,1,30,5,30,454,8,30,10,30,12,30,457,9,30,1,31,1,31,1,31,1,31,5,
		31,463,8,31,10,31,12,31,466,9,31,1,32,1,32,1,32,1,32,1,32,5,32,473,8,32,
		10,32,12,32,476,9,32,1,33,1,33,1,33,1,33,1,33,5,33,483,8,33,10,33,12,33,
		486,9,33,1,34,1,34,5,34,490,8,34,10,34,12,34,493,9,34,1,35,1,35,1,36,4,
		36,498,8,36,11,36,12,36,499,5,89,113,134,147,161,0,37,1,0,3,0,5,1,7,2,
		9,3,11,4,13,5,15,6,17,7,19,8,21,9,23,10,25,11,27,12,29,13,31,14,33,15,
		35,16,37,17,39,18,41,19,43,20,45,21,47,22,49,23,51,24,53,25,55,26,57,27,
		59,28,61,29,63,30,65,31,67,32,69,33,71,0,73,34,1,0,4,11,0,9,9,11,13,32,
		32,133,133,160,160,5760,5760,8192,8202,8232,8233,8239,8239,8287,8287,12288,
		12288,10,0,9,13,32,32,133,133,160,160,5760,5760,8192,8202,8232,8233,8239,
		8239,8287,8287,12288,12288,1,1,10,10,8,0,42,42,44,45,47,47,58,60,62,62,
		91,93,123,123,125,126,557,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,
		0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,
		23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,
		0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,
		0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,
		1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,
		0,0,67,1,0,0,0,0,69,1,0,0,0,0,73,1,0,0,0,1,75,1,0,0,0,3,77,1,0,0,0,5,79,
		1,0,0,0,7,83,1,0,0,0,9,107,1,0,0,0,11,130,1,0,0,0,13,143,1,0,0,0,15,157,
		1,0,0,0,17,171,1,0,0,0,19,173,1,0,0,0,21,218,1,0,0,0,23,263,1,0,0,0,25,
		310,1,0,0,0,27,312,1,0,0,0,29,319,1,0,0,0,31,326,1,0,0,0,33,333,1,0,0,
		0,35,340,1,0,0,0,37,347,1,0,0,0,39,354,1,0,0,0,41,361,1,0,0,0,43,368,1,
		0,0,0,45,377,1,0,0,0,47,386,1,0,0,0,49,395,1,0,0,0,51,404,1,0,0,0,53,413,
		1,0,0,0,55,422,1,0,0,0,57,431,1,0,0,0,59,440,1,0,0,0,61,449,1,0,0,0,63,
		458,1,0,0,0,65,467,1,0,0,0,67,477,1,0,0,0,69,487,1,0,0,0,71,494,1,0,0,
		0,73,497,1,0,0,0,75,76,7,0,0,0,76,2,1,0,0,0,77,78,7,1,0,0,78,4,1,0,0,0,
		79,80,5,58,0,0,80,81,5,47,0,0,81,82,5,47,0,0,82,6,1,0,0,0,83,84,5,47,0,
		0,84,85,5,47,0,0,85,89,1,0,0,0,86,88,9,0,0,0,87,86,1,0,0,0,88,91,1,0,0,
		0,89,90,1,0,0,0,89,87,1,0,0,0,90,103,1,0,0,0,91,89,1,0,0,0,92,94,5,13,
		0,0,93,92,1,0,0,0,93,94,1,0,0,0,94,95,1,0,0,0,95,99,5,10,0,0,96,98,3,3,
		1,0,97,96,1,0,0,0,98,101,1,0,0,0,99,97,1,0,0,0,99,100,1,0,0,0,100,104,
		1,0,0,0,101,99,1,0,0,0,102,104,5,0,0,1,103,93,1,0,0,0,103,102,1,0,0,0,
		104,105,1,0,0,0,105,106,6,3,0,0,106,8,1,0,0,0,107,108,5,47,0,0,108,109,
		5,42,0,0,109,113,1,0,0,0,110,112,9,0,0,0,111,110,1,0,0,0,112,115,1,0,0,
		0,113,114,1,0,0,0,113,111,1,0,0,0,114,126,1,0,0,0,115,113,1,0,0,0,116,
		117,5,42,0,0,117,118,5,47,0,0,118,122,1,0,0,0,119,121,3,3,1,0,120,119,
		1,0,0,0,121,124,1,0,0,0,122,120,1,0,0,0,122,123,1,0,0,0,123,127,1,0,0,
		0,124,122,1,0,0,0,125,127,5,0,0,1,126,116,1,0,0,0,126,125,1,0,0,0,127,
		128,1,0,0,0,128,129,6,4,0,0,129,10,1,0,0,0,130,132,5,60,0,0,131,133,9,
		0,0,0,132,131,1,0,0,0,133,134,1,0,0,0,134,135,1,0,0,0,134,132,1,0,0,0,
		135,136,1,0,0,0,136,140,5,62,0,0,137,139,3,3,1,0,138,137,1,0,0,0,139,142,
		1,0,0,0,140,138,1,0,0,0,140,141,1,0,0,0,141,12,1,0,0,0,142,140,1,0,0,0,
		143,147,5,91,0,0,144,146,9,0,0,0,145,144,1,0,0,0,146,149,1,0,0,0,147,148,
		1,0,0,0,147,145,1,0,0,0,148,150,1,0,0,0,149,147,1,0,0,0,150,154,5,93,0,
		0,151,153,3,3,1,0,152,151,1,0,0,0,153,156,1,0,0,0,154,152,1,0,0,0,154,
		155,1,0,0,0,155,14,1,0,0,0,156,154,1,0,0,0,157,161,5,123,0,0,158,160,9,
		0,0,0,159,158,1,0,0,0,160,163,1,0,0,0,161,162,1,0,0,0,161,159,1,0,0,0,
		162,164,1,0,0,0,163,161,1,0,0,0,164,168,5,125,0,0,165,167,3,3,1,0,166,
		165,1,0,0,0,167,170,1,0,0,0,168,166,1,0,0,0,168,169,1,0,0,0,169,16,1,0,
		0,0,170,168,1,0,0,0,171,172,5,45,0,0,172,18,1,0,0,0,173,174,5,126,0,0,
		174,20,1,0,0,0,175,179,5,62,0,0,176,178,3,1,0,0,177,176,1,0,0,0,178,181,
		1,0,0,0,179,177,1,0,0,0,179,180,1,0,0,0,180,185,1,0,0,0,181,179,1,0,0,
		0,182,184,3,9,4,0,183,182,1,0,0,0,184,187,1,0,0,0,185,183,1,0,0,0,185,
		186,1,0,0,0,186,188,1,0,0,0,187,185,1,0,0,0,188,192,5,10,0,0,189,191,3,
		3,1,0,190,189,1,0,0,0,191,194,1,0,0,0,192,190,1,0,0,0,192,193,1,0,0,0,
		193,219,1,0,0,0,194,192,1,0,0,0,195,199,5,62,0,0,196,198,3,1,0,0,197,196,
		1,0,0,0,198,201,1,0,0,0,199,197,1,0,0,0,199,200,1,0,0,0,200,205,1,0,0,
		0,201,199,1,0,0,0,202,204,3,9,4,0,203,202,1,0,0,0,204,207,1,0,0,0,205,
		203,1,0,0,0,205,206,1,0,0,0,206,208,1,0,0,0,207,205,1,0,0,0,208,219,3,
		7,3,0,209,210,5,62,0,0,210,211,5,62,0,0,211,215,1,0,0,0,212,214,3,3,1,
		0,213,212,1,0,0,0,214,217,1,0,0,0,215,213,1,0,0,0,215,216,1,0,0,0,216,
		219,1,0,0,0,217,215,1,0,0,0,218,175,1,0,0,0,218,195,1,0,0,0,218,209,1,
		0,0,0,219,22,1,0,0,0,220,224,5,44,0,0,221,223,3,1,0,0,222,221,1,0,0,0,
		223,226,1,0,0,0,224,222,1,0,0,0,224,225,1,0,0,0,225,230,1,0,0,0,226,224,
		1,0,0,0,227,229,3,9,4,0,228,227,1,0,0,0,229,232,1,0,0,0,230,228,1,0,0,
		0,230,231,1,0,0,0,231,233,1,0,0,0,232,230,1,0,0,0,233,237,5,10,0,0,234,
		236,3,3,1,0,235,234,1,0,0,0,236,239,1,0,0,0,237,235,1,0,0,0,237,238,1,
		0,0,0,238,264,1,0,0,0,239,237,1,0,0,0,240,244,5,44,0,0,241,243,3,1,0,0,
		242,241,1,0,0,0,243,246,1,0,0,0,244,242,1,0,0,0,244,245,1,0,0,0,245,250,
		1,0,0,0,246,244,1,0,0,0,247,249,3,9,4,0,248,247,1,0,0,0,249,252,1,0,0,
		0,250,248,1,0,0,0,250,251,1,0,0,0,251,253,1,0,0,0,252,250,1,0,0,0,253,
		264,3,7,3,0,254,255,5,44,0,0,255,256,5,44,0,0,256,260,1,0,0,0,257,259,
		3,3,1,0,258,257,1,0,0,0,259,262,1,0,0,0,260,258,1,0,0,0,260,261,1,0,0,
		0,261,264,1,0,0,0,262,260,1,0,0,0,263,220,1,0,0,0,263,240,1,0,0,0,263,
		254,1,0,0,0,264,24,1,0,0,0,265,269,5,59,0,0,266,268,3,1,0,0,267,266,1,
		0,0,0,268,271,1,0,0,0,269,267,1,0,0,0,269,270,1,0,0,0,270,275,1,0,0,0,
		271,269,1,0,0,0,272,274,3,9,4,0,273,272,1,0,0,0,274,277,1,0,0,0,275,273,
		1,0,0,0,275,276,1,0,0,0,276,279,1,0,0,0,277,275,1,0,0,0,278,280,7,2,0,
		0,279,278,1,0,0,0,280,284,1,0,0,0,281,283,3,3,1,0,282,281,1,0,0,0,283,
		286,1,0,0,0,284,282,1,0,0,0,284,285,1,0,0,0,285,311,1,0,0,0,286,284,1,
		0,0,0,287,291,5,59,0,0,288,290,3,1,0,0,289,288,1,0,0,0,290,293,1,0,0,0,
		291,289,1,0,0,0,291,292,1,0,0,0,292,297,1,0,0,0,293,291,1,0,0,0,294,296,
		3,9,4,0,295,294,1,0,0,0,296,299,1,0,0,0,297,295,1,0,0,0,297,298,1,0,0,
		0,298,300,1,0,0,0,299,297,1,0,0,0,300,311,3,7,3,0,301,302,5,59,0,0,302,
		303,5,59,0,0,303,307,1,0,0,0,304,306,3,3,1,0,305,304,1,0,0,0,306,309,1,
		0,0,0,307,305,1,0,0,0,307,308,1,0,0,0,308,311,1,0,0,0,309,307,1,0,0,0,
		310,265,1,0,0,0,310,287,1,0,0,0,310,301,1,0,0,0,311,26,1,0,0,0,312,316,
		5,47,0,0,313,315,3,3,1,0,314,313,1,0,0,0,315,318,1,0,0,0,316,314,1,0,0,
		0,316,317,1,0,0,0,317,28,1,0,0,0,318,316,1,0,0,0,319,323,5,44,0,0,320,
		322,3,3,1,0,321,320,1,0,0,0,322,325,1,0,0,0,323,321,1,0,0,0,323,324,1,
		0,0,0,324,30,1,0,0,0,325,323,1,0,0,0,326,330,5,59,0,0,327,329,3,3,1,0,
		328,327,1,0,0,0,329,332,1,0,0,0,330,328,1,0,0,0,330,331,1,0,0,0,331,32,
		1,0,0,0,332,330,1,0,0,0,333,337,5,58,0,0,334,336,3,3,1,0,335,334,1,0,0,
		0,336,339,1,0,0,0,337,335,1,0,0,0,337,338,1,0,0,0,338,34,1,0,0,0,339,337,
		1,0,0,0,340,344,5,62,0,0,341,343,3,3,1,0,342,341,1,0,0,0,343,346,1,0,0,
		0,344,342,1,0,0,0,344,345,1,0,0,0,345,36,1,0,0,0,346,344,1,0,0,0,347,351,
		5,93,0,0,348,350,3,3,1,0,349,348,1,0,0,0,350,353,1,0,0,0,351,349,1,0,0,
		0,351,352,1,0,0,0,352,38,1,0,0,0,353,351,1,0,0,0,354,358,5,125,0,0,355,
		357,3,3,1,0,356,355,1,0,0,0,357,360,1,0,0,0,358,356,1,0,0,0,358,359,1,
		0,0,0,359,40,1,0,0,0,360,358,1,0,0,0,361,365,5,42,0,0,362,364,3,3,1,0,
		363,362,1,0,0,0,364,367,1,0,0,0,365,363,1,0,0,0,365,366,1,0,0,0,366,42,
		1,0,0,0,367,365,1,0,0,0,368,369,5,92,0,0,369,370,5,92,0,0,370,374,1,0,
		0,0,371,373,3,3,1,0,372,371,1,0,0,0,373,376,1,0,0,0,374,372,1,0,0,0,374,
		375,1,0,0,0,375,44,1,0,0,0,376,374,1,0,0,0,377,378,5,92,0,0,378,379,5,
		45,0,0,379,383,1,0,0,0,380,382,3,3,1,0,381,380,1,0,0,0,382,385,1,0,0,0,
		383,381,1,0,0,0,383,384,1,0,0,0,384,46,1,0,0,0,385,383,1,0,0,0,386,387,
		5,92,0,0,387,388,5,62,0,0,388,392,1,0,0,0,389,391,3,3,1,0,390,389,1,0,
		0,0,391,394,1,0,0,0,392,390,1,0,0,0,392,393,1,0,0,0,393,48,1,0,0,0,394,
		392,1,0,0,0,395,396,5,92,0,0,396,397,5,60,0,0,397,401,1,0,0,0,398,400,
		3,3,1,0,399,398,1,0,0,0,400,403,1,0,0,0,401,399,1,0,0,0,401,402,1,0,0,
		0,402,50,1,0,0,0,403,401,1,0,0,0,404,405,5,92,0,0,405,406,5,93,0,0,406,
		410,1,0,0,0,407,409,3,3,1,0,408,407,1,0,0,0,409,412,1,0,0,0,410,408,1,
		0,0,0,410,411,1,0,0,0,411,52,1,0,0,0,412,410,1,0,0,0,413,414,5,92,0,0,
		414,415,5,91,0,0,415,419,1,0,0,0,416,418,3,3,1,0,417,416,1,0,0,0,418,421,
		1,0,0,0,419,417,1,0,0,0,419,420,1,0,0,0,420,54,1,0,0,0,421,419,1,0,0,0,
		422,423,5,92,0,0,423,424,5,125,0,0,424,428,1,0,0,0,425,427,3,3,1,0,426,
		425,1,0,0,0,427,430,1,0,0,0,428,426,1,0,0,0,428,429,1,0,0,0,429,56,1,0,
		0,0,430,428,1,0,0,0,431,432,5,92,0,0,432,433,5,123,0,0,433,437,1,0,0,0,
		434,436,3,3,1,0,435,434,1,0,0,0,436,439,1,0,0,0,437,435,1,0,0,0,437,438,
		1,0,0,0,438,58,1,0,0,0,439,437,1,0,0,0,440,441,5,92,0,0,441,442,5,44,0,
		0,442,446,1,0,0,0,443,445,3,3,1,0,444,443,1,0,0,0,445,448,1,0,0,0,446,
		444,1,0,0,0,446,447,1,0,0,0,447,60,1,0,0,0,448,446,1,0,0,0,449,450,5,92,
		0,0,450,451,5,59,0,0,451,455,1,0,0,0,452,454,3,3,1,0,453,452,1,0,0,0,454,
		457,1,0,0,0,455,453,1,0,0,0,455,456,1,0,0,0,456,62,1,0,0,0,457,455,1,0,
		0,0,458,459,5,92,0,0,459,460,5,58,0,0,460,464,1,0,0,0,461,463,3,3,1,0,
		462,461,1,0,0,0,463,466,1,0,0,0,464,462,1,0,0,0,464,465,1,0,0,0,465,64,
		1,0,0,0,466,464,1,0,0,0,467,468,5,92,0,0,468,469,5,47,0,0,469,470,5,47,
		0,0,470,474,1,0,0,0,471,473,3,3,1,0,472,471,1,0,0,0,473,476,1,0,0,0,474,
		472,1,0,0,0,474,475,1,0,0,0,475,66,1,0,0,0,476,474,1,0,0,0,477,478,5,92,
		0,0,478,479,5,47,0,0,479,480,5,42,0,0,480,484,1,0,0,0,481,483,3,3,1,0,
		482,481,1,0,0,0,483,486,1,0,0,0,484,482,1,0,0,0,484,485,1,0,0,0,485,68,
		1,0,0,0,486,484,1,0,0,0,487,491,5,92,0,0,488,490,3,3,1,0,489,488,1,0,0,
		0,490,493,1,0,0,0,491,489,1,0,0,0,491,492,1,0,0,0,492,70,1,0,0,0,493,491,
		1,0,0,0,494,495,8,3,0,0,495,72,1,0,0,0,496,498,3,71,35,0,497,496,1,0,0,
		0,498,499,1,0,0,0,499,497,1,0,0,0,499,500,1,0,0,0,500,74,1,0,0,0,59,0,
		89,93,99,103,113,122,126,134,140,147,154,161,168,179,185,192,199,205,215,
		218,224,230,237,244,250,260,263,269,275,279,284,291,297,307,310,316,323,
		330,337,344,351,358,365,374,383,392,401,410,419,428,437,446,455,464,474,
		484,491,499,1,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
