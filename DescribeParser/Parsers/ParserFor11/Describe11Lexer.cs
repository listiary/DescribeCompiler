//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Describe11.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class Describe11Lexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		PROTO_SLASHES=1, LINE_COMMENT=2, BLOCK_COMMENT=3, TAG=4, LINK=5, DECORATOR=6, 
		HYPHEN=7, TILDE=8, PRODUCTION_ARROW=9, SEPARATOR=10, TERMINATOR=11, FORWARD_SLASH=12, 
		COMMA=13, SEMICOLON=14, COLON=15, RIGHT_ARROW=16, LEFT_ARROW=17, RIGHT_SQUARE=18, 
		LEFT_SQUARE=19, RIGHT_CURL=20, LEFT_CURL=21, STAR=22, ESCAPE_ESCAPE=23, 
		ESCAPE_HYPHEN=24, ESCAPE_RIGHT_ARROW=25, ESCAPE_LEFT_ARROW=26, ESCAPE_RIGHT_SQUARE=27, 
		ESCAPE_LEFT_SQUARE=28, ESCAPE_RIGHT_CURL=29, ESCAPE_LEFT_CURL=30, ESCAPE_SEPARATOR=31, 
		ESCAPE_TERMINATOR=32, ESCAPE_COLON=33, ESCAPE_LCOMMENT=34, ESCAPE_BCOMMENT=35, 
		ESCAPE=36, DATA=37;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"WHITESPACE", "LINESPACE", "PROTO_SLASHES", "LINE_COMMENT", "BLOCK_COMMENT", 
		"TAG", "LINK", "DECORATOR", "HYPHEN", "TILDE", "PRODUCTION_ARROW", "SEPARATOR", 
		"TERMINATOR", "FORWARD_SLASH", "COMMA", "SEMICOLON", "COLON", "RIGHT_ARROW", 
		"LEFT_ARROW", "RIGHT_SQUARE", "LEFT_SQUARE", "RIGHT_CURL", "LEFT_CURL", 
		"STAR", "ESCAPE_ESCAPE", "ESCAPE_HYPHEN", "ESCAPE_RIGHT_ARROW", "ESCAPE_LEFT_ARROW", 
		"ESCAPE_RIGHT_SQUARE", "ESCAPE_LEFT_SQUARE", "ESCAPE_RIGHT_CURL", "ESCAPE_LEFT_CURL", 
		"ESCAPE_SEPARATOR", "ESCAPE_TERMINATOR", "ESCAPE_COLON", "ESCAPE_LCOMMENT", 
		"ESCAPE_BCOMMENT", "ESCAPE", "DATA_CHAR", "DATA"
	};


	public Describe11Lexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public Describe11Lexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'://'", null, null, null, null, null, "'-'", "'~'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "PROTO_SLASHES", "LINE_COMMENT", "BLOCK_COMMENT", "TAG", "LINK", 
		"DECORATOR", "HYPHEN", "TILDE", "PRODUCTION_ARROW", "SEPARATOR", "TERMINATOR", 
		"FORWARD_SLASH", "COMMA", "SEMICOLON", "COLON", "RIGHT_ARROW", "LEFT_ARROW", 
		"RIGHT_SQUARE", "LEFT_SQUARE", "RIGHT_CURL", "LEFT_CURL", "STAR", "ESCAPE_ESCAPE", 
		"ESCAPE_HYPHEN", "ESCAPE_RIGHT_ARROW", "ESCAPE_LEFT_ARROW", "ESCAPE_RIGHT_SQUARE", 
		"ESCAPE_LEFT_SQUARE", "ESCAPE_RIGHT_CURL", "ESCAPE_LEFT_CURL", "ESCAPE_SEPARATOR", 
		"ESCAPE_TERMINATOR", "ESCAPE_COLON", "ESCAPE_LCOMMENT", "ESCAPE_BCOMMENT", 
		"ESCAPE", "DATA"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Describe11.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static Describe11Lexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,37,540,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,1,0,1,0,1,1,1,1,1,2,1,2,1,
		2,1,2,1,3,1,3,1,3,1,3,5,3,94,8,3,10,3,12,3,97,9,3,1,3,3,3,100,8,3,1,3,
		1,3,5,3,104,8,3,10,3,12,3,107,9,3,1,3,3,3,110,8,3,1,3,1,3,1,4,1,4,1,4,
		1,4,5,4,118,8,4,10,4,12,4,121,9,4,1,4,1,4,1,4,1,4,5,4,127,8,4,10,4,12,
		4,130,9,4,1,4,3,4,133,8,4,1,4,1,4,1,5,1,5,1,5,1,5,4,5,141,8,5,11,5,12,
		5,142,1,5,1,5,1,5,1,5,5,5,149,8,5,10,5,12,5,152,9,5,1,6,1,6,1,6,1,6,5,
		6,158,8,6,10,6,12,6,161,9,6,1,6,1,6,1,6,1,6,5,6,167,8,6,10,6,12,6,170,
		9,6,1,7,1,7,1,7,1,7,5,7,176,8,7,10,7,12,7,179,9,7,1,7,1,7,1,7,1,7,5,7,
		185,8,7,10,7,12,7,188,9,7,1,8,1,8,1,9,1,9,1,10,1,10,5,10,196,8,10,10,10,
		12,10,199,9,10,1,10,5,10,202,8,10,10,10,12,10,205,9,10,1,10,1,10,5,10,
		209,8,10,10,10,12,10,212,9,10,1,10,1,10,5,10,216,8,10,10,10,12,10,219,
		9,10,1,10,5,10,222,8,10,10,10,12,10,225,9,10,1,10,1,10,1,10,1,10,1,10,
		5,10,232,8,10,10,10,12,10,235,9,10,3,10,237,8,10,1,11,1,11,5,11,241,8,
		11,10,11,12,11,244,9,11,1,11,5,11,247,8,11,10,11,12,11,250,9,11,1,11,1,
		11,5,11,254,8,11,10,11,12,11,257,9,11,1,11,1,11,5,11,261,8,11,10,11,12,
		11,264,9,11,1,11,5,11,267,8,11,10,11,12,11,270,9,11,1,11,1,11,1,11,1,11,
		1,11,5,11,277,8,11,10,11,12,11,280,9,11,3,11,282,8,11,1,12,1,12,5,12,286,
		8,12,10,12,12,12,289,9,12,1,12,5,12,292,8,12,10,12,12,12,295,9,12,1,12,
		3,12,298,8,12,1,12,5,12,301,8,12,10,12,12,12,304,9,12,1,12,1,12,5,12,308,
		8,12,10,12,12,12,311,9,12,1,12,5,12,314,8,12,10,12,12,12,317,9,12,1,12,
		1,12,1,12,1,12,1,12,5,12,324,8,12,10,12,12,12,327,9,12,3,12,329,8,12,1,
		13,1,13,5,13,333,8,13,10,13,12,13,336,9,13,1,14,1,14,5,14,340,8,14,10,
		14,12,14,343,9,14,1,15,1,15,5,15,347,8,15,10,15,12,15,350,9,15,1,16,1,
		16,5,16,354,8,16,10,16,12,16,357,9,16,1,17,1,17,5,17,361,8,17,10,17,12,
		17,364,9,17,1,18,1,18,5,18,368,8,18,10,18,12,18,371,9,18,1,19,1,19,5,19,
		375,8,19,10,19,12,19,378,9,19,1,20,1,20,5,20,382,8,20,10,20,12,20,385,
		9,20,1,21,1,21,5,21,389,8,21,10,21,12,21,392,9,21,1,22,1,22,5,22,396,8,
		22,10,22,12,22,399,9,22,1,23,1,23,5,23,403,8,23,10,23,12,23,406,9,23,1,
		24,1,24,1,24,1,24,5,24,412,8,24,10,24,12,24,415,9,24,1,25,1,25,1,25,1,
		25,5,25,421,8,25,10,25,12,25,424,9,25,1,26,1,26,1,26,1,26,5,26,430,8,26,
		10,26,12,26,433,9,26,1,27,1,27,1,27,1,27,5,27,439,8,27,10,27,12,27,442,
		9,27,1,28,1,28,1,28,1,28,5,28,448,8,28,10,28,12,28,451,9,28,1,29,1,29,
		1,29,1,29,5,29,457,8,29,10,29,12,29,460,9,29,1,30,1,30,1,30,1,30,5,30,
		466,8,30,10,30,12,30,469,9,30,1,31,1,31,1,31,1,31,5,31,475,8,31,10,31,
		12,31,478,9,31,1,32,1,32,1,32,1,32,5,32,484,8,32,10,32,12,32,487,9,32,
		1,33,1,33,1,33,1,33,5,33,493,8,33,10,33,12,33,496,9,33,1,34,1,34,1,34,
		1,34,5,34,502,8,34,10,34,12,34,505,9,34,1,35,1,35,1,35,1,35,1,35,5,35,
		512,8,35,10,35,12,35,515,9,35,1,36,1,36,1,36,1,36,1,36,5,36,522,8,36,10,
		36,12,36,525,9,36,1,37,1,37,5,37,529,8,37,10,37,12,37,532,9,37,1,38,1,
		38,1,39,4,39,537,8,39,11,39,12,39,538,5,95,119,142,159,177,0,40,1,0,3,
		0,5,1,7,2,9,3,11,4,13,5,15,6,17,7,19,8,21,9,23,10,25,11,27,12,29,13,31,
		14,33,15,35,16,37,17,39,18,41,19,43,20,45,21,47,22,49,23,51,24,53,25,55,
		26,57,27,59,28,61,29,63,30,65,31,67,32,69,33,71,34,73,35,75,36,77,0,79,
		37,1,0,4,11,0,9,9,11,13,32,32,133,133,160,160,5760,5760,8192,8202,8232,
		8233,8239,8239,8287,8287,12288,12288,10,0,9,13,32,32,133,133,160,160,5760,
		5760,8192,8202,8232,8233,8239,8239,8287,8287,12288,12288,1,1,10,10,8,0,
		42,42,44,45,47,47,58,60,62,62,91,93,123,123,125,126,599,0,5,1,0,0,0,0,
		7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,
		0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,
		29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,
		0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,
		0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,
		1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,
		0,0,73,1,0,0,0,0,75,1,0,0,0,0,79,1,0,0,0,1,81,1,0,0,0,3,83,1,0,0,0,5,85,
		1,0,0,0,7,89,1,0,0,0,9,113,1,0,0,0,11,136,1,0,0,0,13,153,1,0,0,0,15,171,
		1,0,0,0,17,189,1,0,0,0,19,191,1,0,0,0,21,236,1,0,0,0,23,281,1,0,0,0,25,
		328,1,0,0,0,27,330,1,0,0,0,29,337,1,0,0,0,31,344,1,0,0,0,33,351,1,0,0,
		0,35,358,1,0,0,0,37,365,1,0,0,0,39,372,1,0,0,0,41,379,1,0,0,0,43,386,1,
		0,0,0,45,393,1,0,0,0,47,400,1,0,0,0,49,407,1,0,0,0,51,416,1,0,0,0,53,425,
		1,0,0,0,55,434,1,0,0,0,57,443,1,0,0,0,59,452,1,0,0,0,61,461,1,0,0,0,63,
		470,1,0,0,0,65,479,1,0,0,0,67,488,1,0,0,0,69,497,1,0,0,0,71,506,1,0,0,
		0,73,516,1,0,0,0,75,526,1,0,0,0,77,533,1,0,0,0,79,536,1,0,0,0,81,82,7,
		0,0,0,82,2,1,0,0,0,83,84,7,1,0,0,84,4,1,0,0,0,85,86,5,58,0,0,86,87,5,47,
		0,0,87,88,5,47,0,0,88,6,1,0,0,0,89,90,5,47,0,0,90,91,5,47,0,0,91,95,1,
		0,0,0,92,94,9,0,0,0,93,92,1,0,0,0,94,97,1,0,0,0,95,96,1,0,0,0,95,93,1,
		0,0,0,96,109,1,0,0,0,97,95,1,0,0,0,98,100,5,13,0,0,99,98,1,0,0,0,99,100,
		1,0,0,0,100,101,1,0,0,0,101,105,5,10,0,0,102,104,3,3,1,0,103,102,1,0,0,
		0,104,107,1,0,0,0,105,103,1,0,0,0,105,106,1,0,0,0,106,110,1,0,0,0,107,
		105,1,0,0,0,108,110,5,0,0,1,109,99,1,0,0,0,109,108,1,0,0,0,110,111,1,0,
		0,0,111,112,6,3,0,0,112,8,1,0,0,0,113,114,5,47,0,0,114,115,5,42,0,0,115,
		119,1,0,0,0,116,118,9,0,0,0,117,116,1,0,0,0,118,121,1,0,0,0,119,120,1,
		0,0,0,119,117,1,0,0,0,120,132,1,0,0,0,121,119,1,0,0,0,122,123,5,42,0,0,
		123,124,5,47,0,0,124,128,1,0,0,0,125,127,3,3,1,0,126,125,1,0,0,0,127,130,
		1,0,0,0,128,126,1,0,0,0,128,129,1,0,0,0,129,133,1,0,0,0,130,128,1,0,0,
		0,131,133,5,0,0,1,132,122,1,0,0,0,132,131,1,0,0,0,133,134,1,0,0,0,134,
		135,6,4,0,0,135,10,1,0,0,0,136,137,5,60,0,0,137,138,5,60,0,0,138,140,1,
		0,0,0,139,141,9,0,0,0,140,139,1,0,0,0,141,142,1,0,0,0,142,143,1,0,0,0,
		142,140,1,0,0,0,143,144,1,0,0,0,144,145,5,62,0,0,145,146,5,62,0,0,146,
		150,1,0,0,0,147,149,3,3,1,0,148,147,1,0,0,0,149,152,1,0,0,0,150,148,1,
		0,0,0,150,151,1,0,0,0,151,12,1,0,0,0,152,150,1,0,0,0,153,154,5,91,0,0,
		154,155,5,91,0,0,155,159,1,0,0,0,156,158,9,0,0,0,157,156,1,0,0,0,158,161,
		1,0,0,0,159,160,1,0,0,0,159,157,1,0,0,0,160,162,1,0,0,0,161,159,1,0,0,
		0,162,163,5,93,0,0,163,164,5,93,0,0,164,168,1,0,0,0,165,167,3,3,1,0,166,
		165,1,0,0,0,167,170,1,0,0,0,168,166,1,0,0,0,168,169,1,0,0,0,169,14,1,0,
		0,0,170,168,1,0,0,0,171,172,5,123,0,0,172,173,5,123,0,0,173,177,1,0,0,
		0,174,176,9,0,0,0,175,174,1,0,0,0,176,179,1,0,0,0,177,178,1,0,0,0,177,
		175,1,0,0,0,178,180,1,0,0,0,179,177,1,0,0,0,180,181,5,125,0,0,181,182,
		5,125,0,0,182,186,1,0,0,0,183,185,3,3,1,0,184,183,1,0,0,0,185,188,1,0,
		0,0,186,184,1,0,0,0,186,187,1,0,0,0,187,16,1,0,0,0,188,186,1,0,0,0,189,
		190,5,45,0,0,190,18,1,0,0,0,191,192,5,126,0,0,192,20,1,0,0,0,193,197,5,
		62,0,0,194,196,3,1,0,0,195,194,1,0,0,0,196,199,1,0,0,0,197,195,1,0,0,0,
		197,198,1,0,0,0,198,203,1,0,0,0,199,197,1,0,0,0,200,202,3,9,4,0,201,200,
		1,0,0,0,202,205,1,0,0,0,203,201,1,0,0,0,203,204,1,0,0,0,204,206,1,0,0,
		0,205,203,1,0,0,0,206,210,5,10,0,0,207,209,3,3,1,0,208,207,1,0,0,0,209,
		212,1,0,0,0,210,208,1,0,0,0,210,211,1,0,0,0,211,237,1,0,0,0,212,210,1,
		0,0,0,213,217,5,62,0,0,214,216,3,1,0,0,215,214,1,0,0,0,216,219,1,0,0,0,
		217,215,1,0,0,0,217,218,1,0,0,0,218,223,1,0,0,0,219,217,1,0,0,0,220,222,
		3,9,4,0,221,220,1,0,0,0,222,225,1,0,0,0,223,221,1,0,0,0,223,224,1,0,0,
		0,224,226,1,0,0,0,225,223,1,0,0,0,226,237,3,7,3,0,227,228,5,62,0,0,228,
		229,5,62,0,0,229,233,1,0,0,0,230,232,3,3,1,0,231,230,1,0,0,0,232,235,1,
		0,0,0,233,231,1,0,0,0,233,234,1,0,0,0,234,237,1,0,0,0,235,233,1,0,0,0,
		236,193,1,0,0,0,236,213,1,0,0,0,236,227,1,0,0,0,237,22,1,0,0,0,238,242,
		5,44,0,0,239,241,3,1,0,0,240,239,1,0,0,0,241,244,1,0,0,0,242,240,1,0,0,
		0,242,243,1,0,0,0,243,248,1,0,0,0,244,242,1,0,0,0,245,247,3,9,4,0,246,
		245,1,0,0,0,247,250,1,0,0,0,248,246,1,0,0,0,248,249,1,0,0,0,249,251,1,
		0,0,0,250,248,1,0,0,0,251,255,5,10,0,0,252,254,3,3,1,0,253,252,1,0,0,0,
		254,257,1,0,0,0,255,253,1,0,0,0,255,256,1,0,0,0,256,282,1,0,0,0,257,255,
		1,0,0,0,258,262,5,44,0,0,259,261,3,1,0,0,260,259,1,0,0,0,261,264,1,0,0,
		0,262,260,1,0,0,0,262,263,1,0,0,0,263,268,1,0,0,0,264,262,1,0,0,0,265,
		267,3,9,4,0,266,265,1,0,0,0,267,270,1,0,0,0,268,266,1,0,0,0,268,269,1,
		0,0,0,269,271,1,0,0,0,270,268,1,0,0,0,271,282,3,7,3,0,272,273,5,44,0,0,
		273,274,5,44,0,0,274,278,1,0,0,0,275,277,3,3,1,0,276,275,1,0,0,0,277,280,
		1,0,0,0,278,276,1,0,0,0,278,279,1,0,0,0,279,282,1,0,0,0,280,278,1,0,0,
		0,281,238,1,0,0,0,281,258,1,0,0,0,281,272,1,0,0,0,282,24,1,0,0,0,283,287,
		5,59,0,0,284,286,3,1,0,0,285,284,1,0,0,0,286,289,1,0,0,0,287,285,1,0,0,
		0,287,288,1,0,0,0,288,293,1,0,0,0,289,287,1,0,0,0,290,292,3,9,4,0,291,
		290,1,0,0,0,292,295,1,0,0,0,293,291,1,0,0,0,293,294,1,0,0,0,294,297,1,
		0,0,0,295,293,1,0,0,0,296,298,7,2,0,0,297,296,1,0,0,0,298,302,1,0,0,0,
		299,301,3,3,1,0,300,299,1,0,0,0,301,304,1,0,0,0,302,300,1,0,0,0,302,303,
		1,0,0,0,303,329,1,0,0,0,304,302,1,0,0,0,305,309,5,59,0,0,306,308,3,1,0,
		0,307,306,1,0,0,0,308,311,1,0,0,0,309,307,1,0,0,0,309,310,1,0,0,0,310,
		315,1,0,0,0,311,309,1,0,0,0,312,314,3,9,4,0,313,312,1,0,0,0,314,317,1,
		0,0,0,315,313,1,0,0,0,315,316,1,0,0,0,316,318,1,0,0,0,317,315,1,0,0,0,
		318,329,3,7,3,0,319,320,5,59,0,0,320,321,5,59,0,0,321,325,1,0,0,0,322,
		324,3,3,1,0,323,322,1,0,0,0,324,327,1,0,0,0,325,323,1,0,0,0,325,326,1,
		0,0,0,326,329,1,0,0,0,327,325,1,0,0,0,328,283,1,0,0,0,328,305,1,0,0,0,
		328,319,1,0,0,0,329,26,1,0,0,0,330,334,5,47,0,0,331,333,3,3,1,0,332,331,
		1,0,0,0,333,336,1,0,0,0,334,332,1,0,0,0,334,335,1,0,0,0,335,28,1,0,0,0,
		336,334,1,0,0,0,337,341,5,44,0,0,338,340,3,3,1,0,339,338,1,0,0,0,340,343,
		1,0,0,0,341,339,1,0,0,0,341,342,1,0,0,0,342,30,1,0,0,0,343,341,1,0,0,0,
		344,348,5,59,0,0,345,347,3,3,1,0,346,345,1,0,0,0,347,350,1,0,0,0,348,346,
		1,0,0,0,348,349,1,0,0,0,349,32,1,0,0,0,350,348,1,0,0,0,351,355,5,58,0,
		0,352,354,3,3,1,0,353,352,1,0,0,0,354,357,1,0,0,0,355,353,1,0,0,0,355,
		356,1,0,0,0,356,34,1,0,0,0,357,355,1,0,0,0,358,362,5,62,0,0,359,361,3,
		3,1,0,360,359,1,0,0,0,361,364,1,0,0,0,362,360,1,0,0,0,362,363,1,0,0,0,
		363,36,1,0,0,0,364,362,1,0,0,0,365,369,5,60,0,0,366,368,3,3,1,0,367,366,
		1,0,0,0,368,371,1,0,0,0,369,367,1,0,0,0,369,370,1,0,0,0,370,38,1,0,0,0,
		371,369,1,0,0,0,372,376,5,93,0,0,373,375,3,3,1,0,374,373,1,0,0,0,375,378,
		1,0,0,0,376,374,1,0,0,0,376,377,1,0,0,0,377,40,1,0,0,0,378,376,1,0,0,0,
		379,383,5,91,0,0,380,382,3,3,1,0,381,380,1,0,0,0,382,385,1,0,0,0,383,381,
		1,0,0,0,383,384,1,0,0,0,384,42,1,0,0,0,385,383,1,0,0,0,386,390,5,125,0,
		0,387,389,3,3,1,0,388,387,1,0,0,0,389,392,1,0,0,0,390,388,1,0,0,0,390,
		391,1,0,0,0,391,44,1,0,0,0,392,390,1,0,0,0,393,397,5,123,0,0,394,396,3,
		3,1,0,395,394,1,0,0,0,396,399,1,0,0,0,397,395,1,0,0,0,397,398,1,0,0,0,
		398,46,1,0,0,0,399,397,1,0,0,0,400,404,5,42,0,0,401,403,3,3,1,0,402,401,
		1,0,0,0,403,406,1,0,0,0,404,402,1,0,0,0,404,405,1,0,0,0,405,48,1,0,0,0,
		406,404,1,0,0,0,407,408,5,92,0,0,408,409,5,92,0,0,409,413,1,0,0,0,410,
		412,3,3,1,0,411,410,1,0,0,0,412,415,1,0,0,0,413,411,1,0,0,0,413,414,1,
		0,0,0,414,50,1,0,0,0,415,413,1,0,0,0,416,417,5,92,0,0,417,418,5,45,0,0,
		418,422,1,0,0,0,419,421,3,3,1,0,420,419,1,0,0,0,421,424,1,0,0,0,422,420,
		1,0,0,0,422,423,1,0,0,0,423,52,1,0,0,0,424,422,1,0,0,0,425,426,5,92,0,
		0,426,427,5,62,0,0,427,431,1,0,0,0,428,430,3,3,1,0,429,428,1,0,0,0,430,
		433,1,0,0,0,431,429,1,0,0,0,431,432,1,0,0,0,432,54,1,0,0,0,433,431,1,0,
		0,0,434,435,5,92,0,0,435,436,5,60,0,0,436,440,1,0,0,0,437,439,3,3,1,0,
		438,437,1,0,0,0,439,442,1,0,0,0,440,438,1,0,0,0,440,441,1,0,0,0,441,56,
		1,0,0,0,442,440,1,0,0,0,443,444,5,92,0,0,444,445,5,93,0,0,445,449,1,0,
		0,0,446,448,3,3,1,0,447,446,1,0,0,0,448,451,1,0,0,0,449,447,1,0,0,0,449,
		450,1,0,0,0,450,58,1,0,0,0,451,449,1,0,0,0,452,453,5,92,0,0,453,454,5,
		91,0,0,454,458,1,0,0,0,455,457,3,3,1,0,456,455,1,0,0,0,457,460,1,0,0,0,
		458,456,1,0,0,0,458,459,1,0,0,0,459,60,1,0,0,0,460,458,1,0,0,0,461,462,
		5,92,0,0,462,463,5,125,0,0,463,467,1,0,0,0,464,466,3,3,1,0,465,464,1,0,
		0,0,466,469,1,0,0,0,467,465,1,0,0,0,467,468,1,0,0,0,468,62,1,0,0,0,469,
		467,1,0,0,0,470,471,5,92,0,0,471,472,5,123,0,0,472,476,1,0,0,0,473,475,
		3,3,1,0,474,473,1,0,0,0,475,478,1,0,0,0,476,474,1,0,0,0,476,477,1,0,0,
		0,477,64,1,0,0,0,478,476,1,0,0,0,479,480,5,92,0,0,480,481,5,44,0,0,481,
		485,1,0,0,0,482,484,3,3,1,0,483,482,1,0,0,0,484,487,1,0,0,0,485,483,1,
		0,0,0,485,486,1,0,0,0,486,66,1,0,0,0,487,485,1,0,0,0,488,489,5,92,0,0,
		489,490,5,59,0,0,490,494,1,0,0,0,491,493,3,3,1,0,492,491,1,0,0,0,493,496,
		1,0,0,0,494,492,1,0,0,0,494,495,1,0,0,0,495,68,1,0,0,0,496,494,1,0,0,0,
		497,498,5,92,0,0,498,499,5,58,0,0,499,503,1,0,0,0,500,502,3,3,1,0,501,
		500,1,0,0,0,502,505,1,0,0,0,503,501,1,0,0,0,503,504,1,0,0,0,504,70,1,0,
		0,0,505,503,1,0,0,0,506,507,5,92,0,0,507,508,5,47,0,0,508,509,5,47,0,0,
		509,513,1,0,0,0,510,512,3,3,1,0,511,510,1,0,0,0,512,515,1,0,0,0,513,511,
		1,0,0,0,513,514,1,0,0,0,514,72,1,0,0,0,515,513,1,0,0,0,516,517,5,92,0,
		0,517,518,5,47,0,0,518,519,5,42,0,0,519,523,1,0,0,0,520,522,3,3,1,0,521,
		520,1,0,0,0,522,525,1,0,0,0,523,521,1,0,0,0,523,524,1,0,0,0,524,74,1,0,
		0,0,525,523,1,0,0,0,526,530,5,92,0,0,527,529,3,3,1,0,528,527,1,0,0,0,529,
		532,1,0,0,0,530,528,1,0,0,0,530,531,1,0,0,0,531,76,1,0,0,0,532,530,1,0,
		0,0,533,534,8,3,0,0,534,78,1,0,0,0,535,537,3,77,38,0,536,535,1,0,0,0,537,
		538,1,0,0,0,538,536,1,0,0,0,538,539,1,0,0,0,539,80,1,0,0,0,62,0,95,99,
		105,109,119,128,132,142,150,159,168,177,186,197,203,210,217,223,233,236,
		242,248,255,262,268,278,281,287,293,297,302,309,315,325,328,334,341,348,
		355,362,369,376,383,390,397,404,413,422,431,440,449,458,467,476,485,494,
		503,513,523,530,538,1,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
