//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Describe11.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class Describe11Lexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		PROTO_SLASHES=1, LINE_COMMENT=2, BLOCK_COMMENT=3, TAG=4, LINK=5, DECORATOR=6, 
		HYPHEN=7, TILDE=8, PRODUCTION_ARROW=9, SEPARATOR=10, TERMINATOR=11, FORWARD_SLASH=12, 
		COMMA=13, SEMICOLON=14, COLON=15, RIGHT_ARROW=16, LEFT_ARROW=17, RIGHT_SQUARE=18, 
		LEFT_SQUARE=19, RIGHT_CURL=20, LEFT_CURL=21, STAR=22, ESCAPE_ESCAPE=23, 
		ESCAPE_HYPHEN=24, ESCAPE_TILDE=25, ESCAPE_RIGHT_ARROW=26, ESCAPE_LEFT_ARROW=27, 
		ESCAPE_RIGHT_SQUARE=28, ESCAPE_LEFT_SQUARE=29, ESCAPE_RIGHT_CURL=30, ESCAPE_LEFT_CURL=31, 
		ESCAPE_SEPARATOR=32, ESCAPE_TERMINATOR=33, ESCAPE_COLON=34, ESCAPE_LCOMMENT=35, 
		ESCAPE_BCOMMENT=36, ESCAPE=37, DATA=38;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"WHITESPACE", "LINESPACE", "PROTO_SLASHES", "LINE_COMMENT", "BLOCK_COMMENT", 
		"TAG", "LINK", "DECORATOR", "HYPHEN", "TILDE", "PRODUCTION_ARROW", "SEPARATOR", 
		"TERMINATOR", "FORWARD_SLASH", "COMMA", "SEMICOLON", "COLON", "RIGHT_ARROW", 
		"LEFT_ARROW", "RIGHT_SQUARE", "LEFT_SQUARE", "RIGHT_CURL", "LEFT_CURL", 
		"STAR", "ESCAPE_ESCAPE", "ESCAPE_HYPHEN", "ESCAPE_TILDE", "ESCAPE_RIGHT_ARROW", 
		"ESCAPE_LEFT_ARROW", "ESCAPE_RIGHT_SQUARE", "ESCAPE_LEFT_SQUARE", "ESCAPE_RIGHT_CURL", 
		"ESCAPE_LEFT_CURL", "ESCAPE_SEPARATOR", "ESCAPE_TERMINATOR", "ESCAPE_COLON", 
		"ESCAPE_LCOMMENT", "ESCAPE_BCOMMENT", "ESCAPE", "DATA_CHAR", "DATA"
	};


	public Describe11Lexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public Describe11Lexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'://'", null, null, null, null, null, "'-'", "'~'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "PROTO_SLASHES", "LINE_COMMENT", "BLOCK_COMMENT", "TAG", "LINK", 
		"DECORATOR", "HYPHEN", "TILDE", "PRODUCTION_ARROW", "SEPARATOR", "TERMINATOR", 
		"FORWARD_SLASH", "COMMA", "SEMICOLON", "COLON", "RIGHT_ARROW", "LEFT_ARROW", 
		"RIGHT_SQUARE", "LEFT_SQUARE", "RIGHT_CURL", "LEFT_CURL", "STAR", "ESCAPE_ESCAPE", 
		"ESCAPE_HYPHEN", "ESCAPE_TILDE", "ESCAPE_RIGHT_ARROW", "ESCAPE_LEFT_ARROW", 
		"ESCAPE_RIGHT_SQUARE", "ESCAPE_LEFT_SQUARE", "ESCAPE_RIGHT_CURL", "ESCAPE_LEFT_CURL", 
		"ESCAPE_SEPARATOR", "ESCAPE_TERMINATOR", "ESCAPE_COLON", "ESCAPE_LCOMMENT", 
		"ESCAPE_BCOMMENT", "ESCAPE", "DATA"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Describe11.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static Describe11Lexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,38,551,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,1,0,1,0,1,1,1,1,
		1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,5,3,96,8,3,10,3,12,3,99,9,3,1,3,3,3,102,
		8,3,1,3,1,3,5,3,106,8,3,10,3,12,3,109,9,3,1,3,3,3,112,8,3,1,3,1,3,1,4,
		1,4,1,4,1,4,5,4,120,8,4,10,4,12,4,123,9,4,1,4,1,4,1,4,1,4,5,4,129,8,4,
		10,4,12,4,132,9,4,1,4,3,4,135,8,4,1,4,1,4,1,5,1,5,1,5,1,5,4,5,143,8,5,
		11,5,12,5,144,1,5,1,5,1,5,1,5,5,5,151,8,5,10,5,12,5,154,9,5,1,6,1,6,1,
		6,1,6,5,6,160,8,6,10,6,12,6,163,9,6,1,6,1,6,1,6,1,6,5,6,169,8,6,10,6,12,
		6,172,9,6,1,7,1,7,1,7,1,7,5,7,178,8,7,10,7,12,7,181,9,7,1,7,1,7,1,7,1,
		7,5,7,187,8,7,10,7,12,7,190,9,7,1,8,1,8,1,9,1,9,1,10,1,10,5,10,198,8,10,
		10,10,12,10,201,9,10,1,10,5,10,204,8,10,10,10,12,10,207,9,10,1,10,1,10,
		5,10,211,8,10,10,10,12,10,214,9,10,1,10,1,10,5,10,218,8,10,10,10,12,10,
		221,9,10,1,10,5,10,224,8,10,10,10,12,10,227,9,10,1,10,1,10,1,10,1,10,1,
		10,5,10,234,8,10,10,10,12,10,237,9,10,3,10,239,8,10,1,11,1,11,5,11,243,
		8,11,10,11,12,11,246,9,11,1,11,5,11,249,8,11,10,11,12,11,252,9,11,1,11,
		1,11,5,11,256,8,11,10,11,12,11,259,9,11,1,11,1,11,5,11,263,8,11,10,11,
		12,11,266,9,11,1,11,5,11,269,8,11,10,11,12,11,272,9,11,1,11,1,11,1,11,
		1,11,1,11,5,11,279,8,11,10,11,12,11,282,9,11,3,11,284,8,11,1,12,1,12,5,
		12,288,8,12,10,12,12,12,291,9,12,1,12,5,12,294,8,12,10,12,12,12,297,9,
		12,1,12,3,12,300,8,12,1,12,5,12,303,8,12,10,12,12,12,306,9,12,1,12,1,12,
		5,12,310,8,12,10,12,12,12,313,9,12,1,12,5,12,316,8,12,10,12,12,12,319,
		9,12,1,12,1,12,1,12,1,12,1,12,5,12,326,8,12,10,12,12,12,329,9,12,3,12,
		331,8,12,1,13,1,13,5,13,335,8,13,10,13,12,13,338,9,13,1,14,1,14,5,14,342,
		8,14,10,14,12,14,345,9,14,1,15,1,15,5,15,349,8,15,10,15,12,15,352,9,15,
		1,16,1,16,5,16,356,8,16,10,16,12,16,359,9,16,1,17,1,17,5,17,363,8,17,10,
		17,12,17,366,9,17,1,18,1,18,5,18,370,8,18,10,18,12,18,373,9,18,1,19,1,
		19,5,19,377,8,19,10,19,12,19,380,9,19,1,20,1,20,5,20,384,8,20,10,20,12,
		20,387,9,20,1,21,1,21,5,21,391,8,21,10,21,12,21,394,9,21,1,22,1,22,5,22,
		398,8,22,10,22,12,22,401,9,22,1,23,1,23,5,23,405,8,23,10,23,12,23,408,
		9,23,1,24,1,24,1,24,1,24,5,24,414,8,24,10,24,12,24,417,9,24,1,25,1,25,
		1,25,1,25,5,25,423,8,25,10,25,12,25,426,9,25,1,26,1,26,1,26,1,26,5,26,
		432,8,26,10,26,12,26,435,9,26,1,27,1,27,1,27,1,27,5,27,441,8,27,10,27,
		12,27,444,9,27,1,28,1,28,1,28,1,28,5,28,450,8,28,10,28,12,28,453,9,28,
		1,29,1,29,1,29,1,29,5,29,459,8,29,10,29,12,29,462,9,29,1,30,1,30,1,30,
		1,30,5,30,468,8,30,10,30,12,30,471,9,30,1,31,1,31,1,31,1,31,5,31,477,8,
		31,10,31,12,31,480,9,31,1,32,1,32,1,32,1,32,5,32,486,8,32,10,32,12,32,
		489,9,32,1,33,1,33,1,33,1,33,5,33,495,8,33,10,33,12,33,498,9,33,1,34,1,
		34,1,34,1,34,5,34,504,8,34,10,34,12,34,507,9,34,1,35,1,35,1,35,1,35,5,
		35,513,8,35,10,35,12,35,516,9,35,1,36,1,36,1,36,1,36,1,36,5,36,523,8,36,
		10,36,12,36,526,9,36,1,37,1,37,1,37,1,37,1,37,5,37,533,8,37,10,37,12,37,
		536,9,37,1,38,1,38,5,38,540,8,38,10,38,12,38,543,9,38,1,39,1,39,1,40,4,
		40,548,8,40,11,40,12,40,549,5,97,121,144,161,179,0,41,1,0,3,0,5,1,7,2,
		9,3,11,4,13,5,15,6,17,7,19,8,21,9,23,10,25,11,27,12,29,13,31,14,33,15,
		35,16,37,17,39,18,41,19,43,20,45,21,47,22,49,23,51,24,53,25,55,26,57,27,
		59,28,61,29,63,30,65,31,67,32,69,33,71,34,73,35,75,36,77,37,79,0,81,38,
		1,0,4,11,0,9,9,11,13,32,32,133,133,160,160,5760,5760,8192,8202,8232,8233,
		8239,8239,8287,8287,12288,12288,10,0,9,13,32,32,133,133,160,160,5760,5760,
		8192,8202,8232,8233,8239,8239,8287,8287,12288,12288,1,1,10,10,8,0,42,42,
		44,45,47,47,58,60,62,62,91,93,123,123,125,126,611,0,5,1,0,0,0,0,7,1,0,
		0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,
		19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,
		0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,
		0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,
		1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,
		0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,
		1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,81,1,0,0,0,1,83,1,0,0,0,3,85,1,0,0,
		0,5,87,1,0,0,0,7,91,1,0,0,0,9,115,1,0,0,0,11,138,1,0,0,0,13,155,1,0,0,
		0,15,173,1,0,0,0,17,191,1,0,0,0,19,193,1,0,0,0,21,238,1,0,0,0,23,283,1,
		0,0,0,25,330,1,0,0,0,27,332,1,0,0,0,29,339,1,0,0,0,31,346,1,0,0,0,33,353,
		1,0,0,0,35,360,1,0,0,0,37,367,1,0,0,0,39,374,1,0,0,0,41,381,1,0,0,0,43,
		388,1,0,0,0,45,395,1,0,0,0,47,402,1,0,0,0,49,409,1,0,0,0,51,418,1,0,0,
		0,53,427,1,0,0,0,55,436,1,0,0,0,57,445,1,0,0,0,59,454,1,0,0,0,61,463,1,
		0,0,0,63,472,1,0,0,0,65,481,1,0,0,0,67,490,1,0,0,0,69,499,1,0,0,0,71,508,
		1,0,0,0,73,517,1,0,0,0,75,527,1,0,0,0,77,537,1,0,0,0,79,544,1,0,0,0,81,
		547,1,0,0,0,83,84,7,0,0,0,84,2,1,0,0,0,85,86,7,1,0,0,86,4,1,0,0,0,87,88,
		5,58,0,0,88,89,5,47,0,0,89,90,5,47,0,0,90,6,1,0,0,0,91,92,5,47,0,0,92,
		93,5,47,0,0,93,97,1,0,0,0,94,96,9,0,0,0,95,94,1,0,0,0,96,99,1,0,0,0,97,
		98,1,0,0,0,97,95,1,0,0,0,98,111,1,0,0,0,99,97,1,0,0,0,100,102,5,13,0,0,
		101,100,1,0,0,0,101,102,1,0,0,0,102,103,1,0,0,0,103,107,5,10,0,0,104,106,
		3,3,1,0,105,104,1,0,0,0,106,109,1,0,0,0,107,105,1,0,0,0,107,108,1,0,0,
		0,108,112,1,0,0,0,109,107,1,0,0,0,110,112,5,0,0,1,111,101,1,0,0,0,111,
		110,1,0,0,0,112,113,1,0,0,0,113,114,6,3,0,0,114,8,1,0,0,0,115,116,5,47,
		0,0,116,117,5,42,0,0,117,121,1,0,0,0,118,120,9,0,0,0,119,118,1,0,0,0,120,
		123,1,0,0,0,121,122,1,0,0,0,121,119,1,0,0,0,122,134,1,0,0,0,123,121,1,
		0,0,0,124,125,5,42,0,0,125,126,5,47,0,0,126,130,1,0,0,0,127,129,3,3,1,
		0,128,127,1,0,0,0,129,132,1,0,0,0,130,128,1,0,0,0,130,131,1,0,0,0,131,
		135,1,0,0,0,132,130,1,0,0,0,133,135,5,0,0,1,134,124,1,0,0,0,134,133,1,
		0,0,0,135,136,1,0,0,0,136,137,6,4,0,0,137,10,1,0,0,0,138,139,5,60,0,0,
		139,140,5,60,0,0,140,142,1,0,0,0,141,143,9,0,0,0,142,141,1,0,0,0,143,144,
		1,0,0,0,144,145,1,0,0,0,144,142,1,0,0,0,145,146,1,0,0,0,146,147,5,62,0,
		0,147,148,5,62,0,0,148,152,1,0,0,0,149,151,3,3,1,0,150,149,1,0,0,0,151,
		154,1,0,0,0,152,150,1,0,0,0,152,153,1,0,0,0,153,12,1,0,0,0,154,152,1,0,
		0,0,155,156,5,91,0,0,156,157,5,91,0,0,157,161,1,0,0,0,158,160,9,0,0,0,
		159,158,1,0,0,0,160,163,1,0,0,0,161,162,1,0,0,0,161,159,1,0,0,0,162,164,
		1,0,0,0,163,161,1,0,0,0,164,165,5,93,0,0,165,166,5,93,0,0,166,170,1,0,
		0,0,167,169,3,3,1,0,168,167,1,0,0,0,169,172,1,0,0,0,170,168,1,0,0,0,170,
		171,1,0,0,0,171,14,1,0,0,0,172,170,1,0,0,0,173,174,5,123,0,0,174,175,5,
		123,0,0,175,179,1,0,0,0,176,178,9,0,0,0,177,176,1,0,0,0,178,181,1,0,0,
		0,179,180,1,0,0,0,179,177,1,0,0,0,180,182,1,0,0,0,181,179,1,0,0,0,182,
		183,5,125,0,0,183,184,5,125,0,0,184,188,1,0,0,0,185,187,3,3,1,0,186,185,
		1,0,0,0,187,190,1,0,0,0,188,186,1,0,0,0,188,189,1,0,0,0,189,16,1,0,0,0,
		190,188,1,0,0,0,191,192,5,45,0,0,192,18,1,0,0,0,193,194,5,126,0,0,194,
		20,1,0,0,0,195,199,5,62,0,0,196,198,3,1,0,0,197,196,1,0,0,0,198,201,1,
		0,0,0,199,197,1,0,0,0,199,200,1,0,0,0,200,205,1,0,0,0,201,199,1,0,0,0,
		202,204,3,9,4,0,203,202,1,0,0,0,204,207,1,0,0,0,205,203,1,0,0,0,205,206,
		1,0,0,0,206,208,1,0,0,0,207,205,1,0,0,0,208,212,5,10,0,0,209,211,3,3,1,
		0,210,209,1,0,0,0,211,214,1,0,0,0,212,210,1,0,0,0,212,213,1,0,0,0,213,
		239,1,0,0,0,214,212,1,0,0,0,215,219,5,62,0,0,216,218,3,1,0,0,217,216,1,
		0,0,0,218,221,1,0,0,0,219,217,1,0,0,0,219,220,1,0,0,0,220,225,1,0,0,0,
		221,219,1,0,0,0,222,224,3,9,4,0,223,222,1,0,0,0,224,227,1,0,0,0,225,223,
		1,0,0,0,225,226,1,0,0,0,226,228,1,0,0,0,227,225,1,0,0,0,228,239,3,7,3,
		0,229,230,5,62,0,0,230,231,5,62,0,0,231,235,1,0,0,0,232,234,3,3,1,0,233,
		232,1,0,0,0,234,237,1,0,0,0,235,233,1,0,0,0,235,236,1,0,0,0,236,239,1,
		0,0,0,237,235,1,0,0,0,238,195,1,0,0,0,238,215,1,0,0,0,238,229,1,0,0,0,
		239,22,1,0,0,0,240,244,5,44,0,0,241,243,3,1,0,0,242,241,1,0,0,0,243,246,
		1,0,0,0,244,242,1,0,0,0,244,245,1,0,0,0,245,250,1,0,0,0,246,244,1,0,0,
		0,247,249,3,9,4,0,248,247,1,0,0,0,249,252,1,0,0,0,250,248,1,0,0,0,250,
		251,1,0,0,0,251,253,1,0,0,0,252,250,1,0,0,0,253,257,5,10,0,0,254,256,3,
		3,1,0,255,254,1,0,0,0,256,259,1,0,0,0,257,255,1,0,0,0,257,258,1,0,0,0,
		258,284,1,0,0,0,259,257,1,0,0,0,260,264,5,44,0,0,261,263,3,1,0,0,262,261,
		1,0,0,0,263,266,1,0,0,0,264,262,1,0,0,0,264,265,1,0,0,0,265,270,1,0,0,
		0,266,264,1,0,0,0,267,269,3,9,4,0,268,267,1,0,0,0,269,272,1,0,0,0,270,
		268,1,0,0,0,270,271,1,0,0,0,271,273,1,0,0,0,272,270,1,0,0,0,273,284,3,
		7,3,0,274,275,5,44,0,0,275,276,5,44,0,0,276,280,1,0,0,0,277,279,3,3,1,
		0,278,277,1,0,0,0,279,282,1,0,0,0,280,278,1,0,0,0,280,281,1,0,0,0,281,
		284,1,0,0,0,282,280,1,0,0,0,283,240,1,0,0,0,283,260,1,0,0,0,283,274,1,
		0,0,0,284,24,1,0,0,0,285,289,5,59,0,0,286,288,3,1,0,0,287,286,1,0,0,0,
		288,291,1,0,0,0,289,287,1,0,0,0,289,290,1,0,0,0,290,295,1,0,0,0,291,289,
		1,0,0,0,292,294,3,9,4,0,293,292,1,0,0,0,294,297,1,0,0,0,295,293,1,0,0,
		0,295,296,1,0,0,0,296,299,1,0,0,0,297,295,1,0,0,0,298,300,7,2,0,0,299,
		298,1,0,0,0,300,304,1,0,0,0,301,303,3,3,1,0,302,301,1,0,0,0,303,306,1,
		0,0,0,304,302,1,0,0,0,304,305,1,0,0,0,305,331,1,0,0,0,306,304,1,0,0,0,
		307,311,5,59,0,0,308,310,3,1,0,0,309,308,1,0,0,0,310,313,1,0,0,0,311,309,
		1,0,0,0,311,312,1,0,0,0,312,317,1,0,0,0,313,311,1,0,0,0,314,316,3,9,4,
		0,315,314,1,0,0,0,316,319,1,0,0,0,317,315,1,0,0,0,317,318,1,0,0,0,318,
		320,1,0,0,0,319,317,1,0,0,0,320,331,3,7,3,0,321,322,5,59,0,0,322,323,5,
		59,0,0,323,327,1,0,0,0,324,326,3,3,1,0,325,324,1,0,0,0,326,329,1,0,0,0,
		327,325,1,0,0,0,327,328,1,0,0,0,328,331,1,0,0,0,329,327,1,0,0,0,330,285,
		1,0,0,0,330,307,1,0,0,0,330,321,1,0,0,0,331,26,1,0,0,0,332,336,5,47,0,
		0,333,335,3,3,1,0,334,333,1,0,0,0,335,338,1,0,0,0,336,334,1,0,0,0,336,
		337,1,0,0,0,337,28,1,0,0,0,338,336,1,0,0,0,339,343,5,44,0,0,340,342,3,
		3,1,0,341,340,1,0,0,0,342,345,1,0,0,0,343,341,1,0,0,0,343,344,1,0,0,0,
		344,30,1,0,0,0,345,343,1,0,0,0,346,350,5,59,0,0,347,349,3,3,1,0,348,347,
		1,0,0,0,349,352,1,0,0,0,350,348,1,0,0,0,350,351,1,0,0,0,351,32,1,0,0,0,
		352,350,1,0,0,0,353,357,5,58,0,0,354,356,3,3,1,0,355,354,1,0,0,0,356,359,
		1,0,0,0,357,355,1,0,0,0,357,358,1,0,0,0,358,34,1,0,0,0,359,357,1,0,0,0,
		360,364,5,62,0,0,361,363,3,3,1,0,362,361,1,0,0,0,363,366,1,0,0,0,364,362,
		1,0,0,0,364,365,1,0,0,0,365,36,1,0,0,0,366,364,1,0,0,0,367,371,5,60,0,
		0,368,370,3,3,1,0,369,368,1,0,0,0,370,373,1,0,0,0,371,369,1,0,0,0,371,
		372,1,0,0,0,372,38,1,0,0,0,373,371,1,0,0,0,374,378,5,93,0,0,375,377,3,
		3,1,0,376,375,1,0,0,0,377,380,1,0,0,0,378,376,1,0,0,0,378,379,1,0,0,0,
		379,40,1,0,0,0,380,378,1,0,0,0,381,385,5,91,0,0,382,384,3,3,1,0,383,382,
		1,0,0,0,384,387,1,0,0,0,385,383,1,0,0,0,385,386,1,0,0,0,386,42,1,0,0,0,
		387,385,1,0,0,0,388,392,5,125,0,0,389,391,3,3,1,0,390,389,1,0,0,0,391,
		394,1,0,0,0,392,390,1,0,0,0,392,393,1,0,0,0,393,44,1,0,0,0,394,392,1,0,
		0,0,395,399,5,123,0,0,396,398,3,3,1,0,397,396,1,0,0,0,398,401,1,0,0,0,
		399,397,1,0,0,0,399,400,1,0,0,0,400,46,1,0,0,0,401,399,1,0,0,0,402,406,
		5,42,0,0,403,405,3,3,1,0,404,403,1,0,0,0,405,408,1,0,0,0,406,404,1,0,0,
		0,406,407,1,0,0,0,407,48,1,0,0,0,408,406,1,0,0,0,409,410,5,92,0,0,410,
		411,5,92,0,0,411,415,1,0,0,0,412,414,3,3,1,0,413,412,1,0,0,0,414,417,1,
		0,0,0,415,413,1,0,0,0,415,416,1,0,0,0,416,50,1,0,0,0,417,415,1,0,0,0,418,
		419,5,92,0,0,419,420,5,45,0,0,420,424,1,0,0,0,421,423,3,3,1,0,422,421,
		1,0,0,0,423,426,1,0,0,0,424,422,1,0,0,0,424,425,1,0,0,0,425,52,1,0,0,0,
		426,424,1,0,0,0,427,428,5,92,0,0,428,429,5,126,0,0,429,433,1,0,0,0,430,
		432,3,3,1,0,431,430,1,0,0,0,432,435,1,0,0,0,433,431,1,0,0,0,433,434,1,
		0,0,0,434,54,1,0,0,0,435,433,1,0,0,0,436,437,5,92,0,0,437,438,5,62,0,0,
		438,442,1,0,0,0,439,441,3,3,1,0,440,439,1,0,0,0,441,444,1,0,0,0,442,440,
		1,0,0,0,442,443,1,0,0,0,443,56,1,0,0,0,444,442,1,0,0,0,445,446,5,92,0,
		0,446,447,5,60,0,0,447,451,1,0,0,0,448,450,3,3,1,0,449,448,1,0,0,0,450,
		453,1,0,0,0,451,449,1,0,0,0,451,452,1,0,0,0,452,58,1,0,0,0,453,451,1,0,
		0,0,454,455,5,92,0,0,455,456,5,93,0,0,456,460,1,0,0,0,457,459,3,3,1,0,
		458,457,1,0,0,0,459,462,1,0,0,0,460,458,1,0,0,0,460,461,1,0,0,0,461,60,
		1,0,0,0,462,460,1,0,0,0,463,464,5,92,0,0,464,465,5,91,0,0,465,469,1,0,
		0,0,466,468,3,3,1,0,467,466,1,0,0,0,468,471,1,0,0,0,469,467,1,0,0,0,469,
		470,1,0,0,0,470,62,1,0,0,0,471,469,1,0,0,0,472,473,5,92,0,0,473,474,5,
		125,0,0,474,478,1,0,0,0,475,477,3,3,1,0,476,475,1,0,0,0,477,480,1,0,0,
		0,478,476,1,0,0,0,478,479,1,0,0,0,479,64,1,0,0,0,480,478,1,0,0,0,481,482,
		5,92,0,0,482,483,5,123,0,0,483,487,1,0,0,0,484,486,3,3,1,0,485,484,1,0,
		0,0,486,489,1,0,0,0,487,485,1,0,0,0,487,488,1,0,0,0,488,66,1,0,0,0,489,
		487,1,0,0,0,490,491,5,92,0,0,491,492,5,44,0,0,492,496,1,0,0,0,493,495,
		3,3,1,0,494,493,1,0,0,0,495,498,1,0,0,0,496,494,1,0,0,0,496,497,1,0,0,
		0,497,68,1,0,0,0,498,496,1,0,0,0,499,500,5,92,0,0,500,501,5,59,0,0,501,
		505,1,0,0,0,502,504,3,3,1,0,503,502,1,0,0,0,504,507,1,0,0,0,505,503,1,
		0,0,0,505,506,1,0,0,0,506,70,1,0,0,0,507,505,1,0,0,0,508,509,5,92,0,0,
		509,510,5,58,0,0,510,514,1,0,0,0,511,513,3,3,1,0,512,511,1,0,0,0,513,516,
		1,0,0,0,514,512,1,0,0,0,514,515,1,0,0,0,515,72,1,0,0,0,516,514,1,0,0,0,
		517,518,5,92,0,0,518,519,5,47,0,0,519,520,5,47,0,0,520,524,1,0,0,0,521,
		523,3,3,1,0,522,521,1,0,0,0,523,526,1,0,0,0,524,522,1,0,0,0,524,525,1,
		0,0,0,525,74,1,0,0,0,526,524,1,0,0,0,527,528,5,92,0,0,528,529,5,47,0,0,
		529,530,5,42,0,0,530,534,1,0,0,0,531,533,3,3,1,0,532,531,1,0,0,0,533,536,
		1,0,0,0,534,532,1,0,0,0,534,535,1,0,0,0,535,76,1,0,0,0,536,534,1,0,0,0,
		537,541,5,92,0,0,538,540,3,3,1,0,539,538,1,0,0,0,540,543,1,0,0,0,541,539,
		1,0,0,0,541,542,1,0,0,0,542,78,1,0,0,0,543,541,1,0,0,0,544,545,8,3,0,0,
		545,80,1,0,0,0,546,548,3,79,39,0,547,546,1,0,0,0,548,549,1,0,0,0,549,547,
		1,0,0,0,549,550,1,0,0,0,550,82,1,0,0,0,63,0,97,101,107,111,121,130,134,
		144,152,161,170,179,188,199,205,212,219,225,235,238,244,250,257,264,270,
		280,283,289,295,299,304,311,317,327,330,336,343,350,357,364,371,378,385,
		392,399,406,415,424,433,442,451,460,469,478,487,496,505,514,524,534,541,
		549,1,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
