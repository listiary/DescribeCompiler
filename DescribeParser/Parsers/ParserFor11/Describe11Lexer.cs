//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Describe11.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class Describe11Lexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		LINE_COMMENT=1, BLOCK_COMMENT=2, TAG=3, LINK=4, DECORATOR=5, HYPHEN=6, 
		TILDE=7, PRODUCTION_ARROW=8, SEPARATOR=9, TERMINATOR=10, FORWARD_SLASHES=11, 
		FORWARD_SLASH=12, COMMA=13, SEMICOLON=14, RIGHT_ARROW=15, LEFT_ARROW=16, 
		RIGHT_SQUARE=17, LEFT_SQUARE=18, RIGHT_CURL=19, LEFT_CURL=20, STAR=21, 
		ESCAPE_ESCAPE=22, ESCAPE_HYPHEN=23, ESCAPE_TILDE=24, ESCAPE_RIGHT_ARROW=25, 
		ESCAPE_LEFT_ARROW=26, ESCAPE_RIGHT_SQUARE=27, ESCAPE_LEFT_SQUARE=28, ESCAPE_RIGHT_CURL=29, 
		ESCAPE_LEFT_CURL=30, ESCAPE_SEPARATOR=31, ESCAPE_TERMINATOR=32, ESCAPE_LCOMMENT=33, 
		ESCAPE_BCOMMENT=34, ESCAPE=35, DATA=36;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"WHITESPACE", "LINESPACE", "LINE_COMMENT", "BLOCK_COMMENT", "TAG", "LINK", 
		"DECORATOR", "HYPHEN", "TILDE", "PRODUCTION_ARROW", "SEPARATOR", "TERMINATOR", 
		"FORWARD_SLASHES", "FORWARD_SLASH", "COMMA", "SEMICOLON", "RIGHT_ARROW", 
		"LEFT_ARROW", "RIGHT_SQUARE", "LEFT_SQUARE", "RIGHT_CURL", "LEFT_CURL", 
		"STAR", "ESCAPE_ESCAPE", "ESCAPE_HYPHEN", "ESCAPE_TILDE", "ESCAPE_RIGHT_ARROW", 
		"ESCAPE_LEFT_ARROW", "ESCAPE_RIGHT_SQUARE", "ESCAPE_LEFT_SQUARE", "ESCAPE_RIGHT_CURL", 
		"ESCAPE_LEFT_CURL", "ESCAPE_SEPARATOR", "ESCAPE_TERMINATOR", "ESCAPE_LCOMMENT", 
		"ESCAPE_BCOMMENT", "ESCAPE", "DATA_CHAR", "DATA"
	};


	public Describe11Lexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public Describe11Lexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, null, "'-'", "'~'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "LINE_COMMENT", "BLOCK_COMMENT", "TAG", "LINK", "DECORATOR", "HYPHEN", 
		"TILDE", "PRODUCTION_ARROW", "SEPARATOR", "TERMINATOR", "FORWARD_SLASHES", 
		"FORWARD_SLASH", "COMMA", "SEMICOLON", "RIGHT_ARROW", "LEFT_ARROW", "RIGHT_SQUARE", 
		"LEFT_SQUARE", "RIGHT_CURL", "LEFT_CURL", "STAR", "ESCAPE_ESCAPE", "ESCAPE_HYPHEN", 
		"ESCAPE_TILDE", "ESCAPE_RIGHT_ARROW", "ESCAPE_LEFT_ARROW", "ESCAPE_RIGHT_SQUARE", 
		"ESCAPE_LEFT_SQUARE", "ESCAPE_RIGHT_CURL", "ESCAPE_LEFT_CURL", "ESCAPE_SEPARATOR", 
		"ESCAPE_TERMINATOR", "ESCAPE_LCOMMENT", "ESCAPE_BCOMMENT", "ESCAPE", "DATA"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Describe11.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static Describe11Lexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,36,537,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,1,0,1,0,1,1,1,1,1,2,1,2,1,2,1,2,1,2,
		5,2,89,8,2,10,2,12,2,92,9,2,1,2,3,2,95,8,2,1,2,1,2,5,2,99,8,2,10,2,12,
		2,102,9,2,1,2,3,2,105,8,2,1,2,1,2,1,3,1,3,1,3,1,3,5,3,113,8,3,10,3,12,
		3,116,9,3,1,3,1,3,1,3,1,3,5,3,122,8,3,10,3,12,3,125,9,3,1,3,3,3,128,8,
		3,1,3,1,3,1,4,1,4,1,4,1,4,4,4,136,8,4,11,4,12,4,137,1,4,1,4,1,4,1,4,5,
		4,144,8,4,10,4,12,4,147,9,4,1,5,1,5,1,5,1,5,5,5,153,8,5,10,5,12,5,156,
		9,5,1,5,1,5,1,5,1,5,5,5,162,8,5,10,5,12,5,165,9,5,1,6,1,6,1,6,1,6,5,6,
		171,8,6,10,6,12,6,174,9,6,1,6,1,6,1,6,1,6,5,6,180,8,6,10,6,12,6,183,9,
		6,1,7,1,7,1,8,1,8,1,9,1,9,5,9,191,8,9,10,9,12,9,194,9,9,1,9,5,9,197,8,
		9,10,9,12,9,200,9,9,1,9,1,9,5,9,204,8,9,10,9,12,9,207,9,9,1,9,1,9,5,9,
		211,8,9,10,9,12,9,214,9,9,1,9,5,9,217,8,9,10,9,12,9,220,9,9,1,9,1,9,1,
		9,1,9,1,9,5,9,227,8,9,10,9,12,9,230,9,9,3,9,232,8,9,1,10,1,10,5,10,236,
		8,10,10,10,12,10,239,9,10,1,10,5,10,242,8,10,10,10,12,10,245,9,10,1,10,
		1,10,5,10,249,8,10,10,10,12,10,252,9,10,1,10,1,10,5,10,256,8,10,10,10,
		12,10,259,9,10,1,10,5,10,262,8,10,10,10,12,10,265,9,10,1,10,1,10,1,10,
		1,10,1,10,5,10,272,8,10,10,10,12,10,275,9,10,3,10,277,8,10,1,11,1,11,5,
		11,281,8,11,10,11,12,11,284,9,11,1,11,5,11,287,8,11,10,11,12,11,290,9,
		11,1,11,3,11,293,8,11,1,11,5,11,296,8,11,10,11,12,11,299,9,11,1,11,1,11,
		5,11,303,8,11,10,11,12,11,306,9,11,1,11,5,11,309,8,11,10,11,12,11,312,
		9,11,1,11,1,11,1,11,1,11,1,11,5,11,319,8,11,10,11,12,11,322,9,11,3,11,
		324,8,11,1,12,1,12,1,12,1,12,5,12,330,8,12,10,12,12,12,333,9,12,1,13,1,
		13,5,13,337,8,13,10,13,12,13,340,9,13,1,14,1,14,5,14,344,8,14,10,14,12,
		14,347,9,14,1,15,1,15,5,15,351,8,15,10,15,12,15,354,9,15,1,16,1,16,5,16,
		358,8,16,10,16,12,16,361,9,16,1,17,1,17,5,17,365,8,17,10,17,12,17,368,
		9,17,1,18,1,18,5,18,372,8,18,10,18,12,18,375,9,18,1,19,1,19,5,19,379,8,
		19,10,19,12,19,382,9,19,1,20,1,20,5,20,386,8,20,10,20,12,20,389,9,20,1,
		21,1,21,5,21,393,8,21,10,21,12,21,396,9,21,1,22,1,22,5,22,400,8,22,10,
		22,12,22,403,9,22,1,23,1,23,1,23,1,23,5,23,409,8,23,10,23,12,23,412,9,
		23,1,24,1,24,1,24,1,24,5,24,418,8,24,10,24,12,24,421,9,24,1,25,1,25,1,
		25,1,25,5,25,427,8,25,10,25,12,25,430,9,25,1,26,1,26,1,26,1,26,5,26,436,
		8,26,10,26,12,26,439,9,26,1,27,1,27,1,27,1,27,5,27,445,8,27,10,27,12,27,
		448,9,27,1,28,1,28,1,28,1,28,5,28,454,8,28,10,28,12,28,457,9,28,1,29,1,
		29,1,29,1,29,5,29,463,8,29,10,29,12,29,466,9,29,1,30,1,30,1,30,1,30,5,
		30,472,8,30,10,30,12,30,475,9,30,1,31,1,31,1,31,1,31,5,31,481,8,31,10,
		31,12,31,484,9,31,1,32,1,32,1,32,1,32,5,32,490,8,32,10,32,12,32,493,9,
		32,1,33,1,33,1,33,1,33,5,33,499,8,33,10,33,12,33,502,9,33,1,34,1,34,1,
		34,1,34,1,34,5,34,509,8,34,10,34,12,34,512,9,34,1,35,1,35,1,35,1,35,1,
		35,5,35,519,8,35,10,35,12,35,522,9,35,1,36,1,36,5,36,526,8,36,10,36,12,
		36,529,9,36,1,37,1,37,1,38,4,38,534,8,38,11,38,12,38,535,5,90,114,137,
		154,172,0,39,1,0,3,0,5,1,7,2,9,3,11,4,13,5,15,6,17,7,19,8,21,9,23,10,25,
		11,27,12,29,13,31,14,33,15,35,16,37,17,39,18,41,19,43,20,45,21,47,22,49,
		23,51,24,53,25,55,26,57,27,59,28,61,29,63,30,65,31,67,32,69,33,71,34,73,
		35,75,0,77,36,1,0,4,11,0,9,9,11,13,32,32,133,133,160,160,5760,5760,8192,
		8202,8232,8233,8239,8239,8287,8287,12288,12288,10,0,9,13,32,32,133,133,
		160,160,5760,5760,8192,8202,8232,8233,8239,8239,8287,8287,12288,12288,
		1,1,10,10,8,0,42,42,44,45,47,47,59,60,62,62,91,93,123,123,125,126,596,
		0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,
		0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,
		27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,
		0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,
		0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,
		1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,
		0,0,71,1,0,0,0,0,73,1,0,0,0,0,77,1,0,0,0,1,79,1,0,0,0,3,81,1,0,0,0,5,83,
		1,0,0,0,7,108,1,0,0,0,9,131,1,0,0,0,11,148,1,0,0,0,13,166,1,0,0,0,15,184,
		1,0,0,0,17,186,1,0,0,0,19,231,1,0,0,0,21,276,1,0,0,0,23,323,1,0,0,0,25,
		325,1,0,0,0,27,334,1,0,0,0,29,341,1,0,0,0,31,348,1,0,0,0,33,355,1,0,0,
		0,35,362,1,0,0,0,37,369,1,0,0,0,39,376,1,0,0,0,41,383,1,0,0,0,43,390,1,
		0,0,0,45,397,1,0,0,0,47,404,1,0,0,0,49,413,1,0,0,0,51,422,1,0,0,0,53,431,
		1,0,0,0,55,440,1,0,0,0,57,449,1,0,0,0,59,458,1,0,0,0,61,467,1,0,0,0,63,
		476,1,0,0,0,65,485,1,0,0,0,67,494,1,0,0,0,69,503,1,0,0,0,71,513,1,0,0,
		0,73,523,1,0,0,0,75,530,1,0,0,0,77,533,1,0,0,0,79,80,7,0,0,0,80,2,1,0,
		0,0,81,82,7,1,0,0,82,4,1,0,0,0,83,84,5,47,0,0,84,85,5,47,0,0,85,86,5,32,
		0,0,86,90,1,0,0,0,87,89,9,0,0,0,88,87,1,0,0,0,89,92,1,0,0,0,90,91,1,0,
		0,0,90,88,1,0,0,0,91,104,1,0,0,0,92,90,1,0,0,0,93,95,5,13,0,0,94,93,1,
		0,0,0,94,95,1,0,0,0,95,96,1,0,0,0,96,100,5,10,0,0,97,99,3,3,1,0,98,97,
		1,0,0,0,99,102,1,0,0,0,100,98,1,0,0,0,100,101,1,0,0,0,101,105,1,0,0,0,
		102,100,1,0,0,0,103,105,5,0,0,1,104,94,1,0,0,0,104,103,1,0,0,0,105,106,
		1,0,0,0,106,107,6,2,0,0,107,6,1,0,0,0,108,109,5,47,0,0,109,110,5,42,0,
		0,110,114,1,0,0,0,111,113,9,0,0,0,112,111,1,0,0,0,113,116,1,0,0,0,114,
		115,1,0,0,0,114,112,1,0,0,0,115,127,1,0,0,0,116,114,1,0,0,0,117,118,5,
		42,0,0,118,119,5,47,0,0,119,123,1,0,0,0,120,122,3,3,1,0,121,120,1,0,0,
		0,122,125,1,0,0,0,123,121,1,0,0,0,123,124,1,0,0,0,124,128,1,0,0,0,125,
		123,1,0,0,0,126,128,5,0,0,1,127,117,1,0,0,0,127,126,1,0,0,0,128,129,1,
		0,0,0,129,130,6,3,0,0,130,8,1,0,0,0,131,132,5,60,0,0,132,133,5,60,0,0,
		133,135,1,0,0,0,134,136,9,0,0,0,135,134,1,0,0,0,136,137,1,0,0,0,137,138,
		1,0,0,0,137,135,1,0,0,0,138,139,1,0,0,0,139,140,5,62,0,0,140,141,5,62,
		0,0,141,145,1,0,0,0,142,144,3,3,1,0,143,142,1,0,0,0,144,147,1,0,0,0,145,
		143,1,0,0,0,145,146,1,0,0,0,146,10,1,0,0,0,147,145,1,0,0,0,148,149,5,91,
		0,0,149,150,5,91,0,0,150,154,1,0,0,0,151,153,9,0,0,0,152,151,1,0,0,0,153,
		156,1,0,0,0,154,155,1,0,0,0,154,152,1,0,0,0,155,157,1,0,0,0,156,154,1,
		0,0,0,157,158,5,93,0,0,158,159,5,93,0,0,159,163,1,0,0,0,160,162,3,3,1,
		0,161,160,1,0,0,0,162,165,1,0,0,0,163,161,1,0,0,0,163,164,1,0,0,0,164,
		12,1,0,0,0,165,163,1,0,0,0,166,167,5,123,0,0,167,168,5,123,0,0,168,172,
		1,0,0,0,169,171,9,0,0,0,170,169,1,0,0,0,171,174,1,0,0,0,172,173,1,0,0,
		0,172,170,1,0,0,0,173,175,1,0,0,0,174,172,1,0,0,0,175,176,5,125,0,0,176,
		177,5,125,0,0,177,181,1,0,0,0,178,180,3,3,1,0,179,178,1,0,0,0,180,183,
		1,0,0,0,181,179,1,0,0,0,181,182,1,0,0,0,182,14,1,0,0,0,183,181,1,0,0,0,
		184,185,5,45,0,0,185,16,1,0,0,0,186,187,5,126,0,0,187,18,1,0,0,0,188,192,
		5,62,0,0,189,191,3,1,0,0,190,189,1,0,0,0,191,194,1,0,0,0,192,190,1,0,0,
		0,192,193,1,0,0,0,193,198,1,0,0,0,194,192,1,0,0,0,195,197,3,7,3,0,196,
		195,1,0,0,0,197,200,1,0,0,0,198,196,1,0,0,0,198,199,1,0,0,0,199,201,1,
		0,0,0,200,198,1,0,0,0,201,205,5,10,0,0,202,204,3,3,1,0,203,202,1,0,0,0,
		204,207,1,0,0,0,205,203,1,0,0,0,205,206,1,0,0,0,206,232,1,0,0,0,207,205,
		1,0,0,0,208,212,5,62,0,0,209,211,3,1,0,0,210,209,1,0,0,0,211,214,1,0,0,
		0,212,210,1,0,0,0,212,213,1,0,0,0,213,218,1,0,0,0,214,212,1,0,0,0,215,
		217,3,7,3,0,216,215,1,0,0,0,217,220,1,0,0,0,218,216,1,0,0,0,218,219,1,
		0,0,0,219,221,1,0,0,0,220,218,1,0,0,0,221,232,3,5,2,0,222,223,5,62,0,0,
		223,224,5,62,0,0,224,228,1,0,0,0,225,227,3,3,1,0,226,225,1,0,0,0,227,230,
		1,0,0,0,228,226,1,0,0,0,228,229,1,0,0,0,229,232,1,0,0,0,230,228,1,0,0,
		0,231,188,1,0,0,0,231,208,1,0,0,0,231,222,1,0,0,0,232,20,1,0,0,0,233,237,
		5,44,0,0,234,236,3,1,0,0,235,234,1,0,0,0,236,239,1,0,0,0,237,235,1,0,0,
		0,237,238,1,0,0,0,238,243,1,0,0,0,239,237,1,0,0,0,240,242,3,7,3,0,241,
		240,1,0,0,0,242,245,1,0,0,0,243,241,1,0,0,0,243,244,1,0,0,0,244,246,1,
		0,0,0,245,243,1,0,0,0,246,250,5,10,0,0,247,249,3,3,1,0,248,247,1,0,0,0,
		249,252,1,0,0,0,250,248,1,0,0,0,250,251,1,0,0,0,251,277,1,0,0,0,252,250,
		1,0,0,0,253,257,5,44,0,0,254,256,3,1,0,0,255,254,1,0,0,0,256,259,1,0,0,
		0,257,255,1,0,0,0,257,258,1,0,0,0,258,263,1,0,0,0,259,257,1,0,0,0,260,
		262,3,7,3,0,261,260,1,0,0,0,262,265,1,0,0,0,263,261,1,0,0,0,263,264,1,
		0,0,0,264,266,1,0,0,0,265,263,1,0,0,0,266,277,3,5,2,0,267,268,5,44,0,0,
		268,269,5,44,0,0,269,273,1,0,0,0,270,272,3,3,1,0,271,270,1,0,0,0,272,275,
		1,0,0,0,273,271,1,0,0,0,273,274,1,0,0,0,274,277,1,0,0,0,275,273,1,0,0,
		0,276,233,1,0,0,0,276,253,1,0,0,0,276,267,1,0,0,0,277,22,1,0,0,0,278,282,
		5,59,0,0,279,281,3,1,0,0,280,279,1,0,0,0,281,284,1,0,0,0,282,280,1,0,0,
		0,282,283,1,0,0,0,283,288,1,0,0,0,284,282,1,0,0,0,285,287,3,7,3,0,286,
		285,1,0,0,0,287,290,1,0,0,0,288,286,1,0,0,0,288,289,1,0,0,0,289,292,1,
		0,0,0,290,288,1,0,0,0,291,293,7,2,0,0,292,291,1,0,0,0,293,297,1,0,0,0,
		294,296,3,3,1,0,295,294,1,0,0,0,296,299,1,0,0,0,297,295,1,0,0,0,297,298,
		1,0,0,0,298,324,1,0,0,0,299,297,1,0,0,0,300,304,5,59,0,0,301,303,3,1,0,
		0,302,301,1,0,0,0,303,306,1,0,0,0,304,302,1,0,0,0,304,305,1,0,0,0,305,
		310,1,0,0,0,306,304,1,0,0,0,307,309,3,7,3,0,308,307,1,0,0,0,309,312,1,
		0,0,0,310,308,1,0,0,0,310,311,1,0,0,0,311,313,1,0,0,0,312,310,1,0,0,0,
		313,324,3,5,2,0,314,315,5,59,0,0,315,316,5,59,0,0,316,320,1,0,0,0,317,
		319,3,3,1,0,318,317,1,0,0,0,319,322,1,0,0,0,320,318,1,0,0,0,320,321,1,
		0,0,0,321,324,1,0,0,0,322,320,1,0,0,0,323,278,1,0,0,0,323,300,1,0,0,0,
		323,314,1,0,0,0,324,24,1,0,0,0,325,326,5,47,0,0,326,327,5,47,0,0,327,331,
		1,0,0,0,328,330,3,3,1,0,329,328,1,0,0,0,330,333,1,0,0,0,331,329,1,0,0,
		0,331,332,1,0,0,0,332,26,1,0,0,0,333,331,1,0,0,0,334,338,5,47,0,0,335,
		337,3,3,1,0,336,335,1,0,0,0,337,340,1,0,0,0,338,336,1,0,0,0,338,339,1,
		0,0,0,339,28,1,0,0,0,340,338,1,0,0,0,341,345,5,44,0,0,342,344,3,3,1,0,
		343,342,1,0,0,0,344,347,1,0,0,0,345,343,1,0,0,0,345,346,1,0,0,0,346,30,
		1,0,0,0,347,345,1,0,0,0,348,352,5,59,0,0,349,351,3,3,1,0,350,349,1,0,0,
		0,351,354,1,0,0,0,352,350,1,0,0,0,352,353,1,0,0,0,353,32,1,0,0,0,354,352,
		1,0,0,0,355,359,5,62,0,0,356,358,3,3,1,0,357,356,1,0,0,0,358,361,1,0,0,
		0,359,357,1,0,0,0,359,360,1,0,0,0,360,34,1,0,0,0,361,359,1,0,0,0,362,366,
		5,60,0,0,363,365,3,3,1,0,364,363,1,0,0,0,365,368,1,0,0,0,366,364,1,0,0,
		0,366,367,1,0,0,0,367,36,1,0,0,0,368,366,1,0,0,0,369,373,5,93,0,0,370,
		372,3,3,1,0,371,370,1,0,0,0,372,375,1,0,0,0,373,371,1,0,0,0,373,374,1,
		0,0,0,374,38,1,0,0,0,375,373,1,0,0,0,376,380,5,91,0,0,377,379,3,3,1,0,
		378,377,1,0,0,0,379,382,1,0,0,0,380,378,1,0,0,0,380,381,1,0,0,0,381,40,
		1,0,0,0,382,380,1,0,0,0,383,387,5,125,0,0,384,386,3,3,1,0,385,384,1,0,
		0,0,386,389,1,0,0,0,387,385,1,0,0,0,387,388,1,0,0,0,388,42,1,0,0,0,389,
		387,1,0,0,0,390,394,5,123,0,0,391,393,3,3,1,0,392,391,1,0,0,0,393,396,
		1,0,0,0,394,392,1,0,0,0,394,395,1,0,0,0,395,44,1,0,0,0,396,394,1,0,0,0,
		397,401,5,42,0,0,398,400,3,3,1,0,399,398,1,0,0,0,400,403,1,0,0,0,401,399,
		1,0,0,0,401,402,1,0,0,0,402,46,1,0,0,0,403,401,1,0,0,0,404,405,5,92,0,
		0,405,406,5,92,0,0,406,410,1,0,0,0,407,409,3,3,1,0,408,407,1,0,0,0,409,
		412,1,0,0,0,410,408,1,0,0,0,410,411,1,0,0,0,411,48,1,0,0,0,412,410,1,0,
		0,0,413,414,5,92,0,0,414,415,5,45,0,0,415,419,1,0,0,0,416,418,3,3,1,0,
		417,416,1,0,0,0,418,421,1,0,0,0,419,417,1,0,0,0,419,420,1,0,0,0,420,50,
		1,0,0,0,421,419,1,0,0,0,422,423,5,92,0,0,423,424,5,126,0,0,424,428,1,0,
		0,0,425,427,3,3,1,0,426,425,1,0,0,0,427,430,1,0,0,0,428,426,1,0,0,0,428,
		429,1,0,0,0,429,52,1,0,0,0,430,428,1,0,0,0,431,432,5,92,0,0,432,433,5,
		62,0,0,433,437,1,0,0,0,434,436,3,3,1,0,435,434,1,0,0,0,436,439,1,0,0,0,
		437,435,1,0,0,0,437,438,1,0,0,0,438,54,1,0,0,0,439,437,1,0,0,0,440,441,
		5,92,0,0,441,442,5,60,0,0,442,446,1,0,0,0,443,445,3,3,1,0,444,443,1,0,
		0,0,445,448,1,0,0,0,446,444,1,0,0,0,446,447,1,0,0,0,447,56,1,0,0,0,448,
		446,1,0,0,0,449,450,5,92,0,0,450,451,5,93,0,0,451,455,1,0,0,0,452,454,
		3,3,1,0,453,452,1,0,0,0,454,457,1,0,0,0,455,453,1,0,0,0,455,456,1,0,0,
		0,456,58,1,0,0,0,457,455,1,0,0,0,458,459,5,92,0,0,459,460,5,91,0,0,460,
		464,1,0,0,0,461,463,3,3,1,0,462,461,1,0,0,0,463,466,1,0,0,0,464,462,1,
		0,0,0,464,465,1,0,0,0,465,60,1,0,0,0,466,464,1,0,0,0,467,468,5,92,0,0,
		468,469,5,125,0,0,469,473,1,0,0,0,470,472,3,3,1,0,471,470,1,0,0,0,472,
		475,1,0,0,0,473,471,1,0,0,0,473,474,1,0,0,0,474,62,1,0,0,0,475,473,1,0,
		0,0,476,477,5,92,0,0,477,478,5,123,0,0,478,482,1,0,0,0,479,481,3,3,1,0,
		480,479,1,0,0,0,481,484,1,0,0,0,482,480,1,0,0,0,482,483,1,0,0,0,483,64,
		1,0,0,0,484,482,1,0,0,0,485,486,5,92,0,0,486,487,5,44,0,0,487,491,1,0,
		0,0,488,490,3,3,1,0,489,488,1,0,0,0,490,493,1,0,0,0,491,489,1,0,0,0,491,
		492,1,0,0,0,492,66,1,0,0,0,493,491,1,0,0,0,494,495,5,92,0,0,495,496,5,
		59,0,0,496,500,1,0,0,0,497,499,3,3,1,0,498,497,1,0,0,0,499,502,1,0,0,0,
		500,498,1,0,0,0,500,501,1,0,0,0,501,68,1,0,0,0,502,500,1,0,0,0,503,504,
		5,92,0,0,504,505,5,47,0,0,505,506,5,47,0,0,506,510,1,0,0,0,507,509,3,3,
		1,0,508,507,1,0,0,0,509,512,1,0,0,0,510,508,1,0,0,0,510,511,1,0,0,0,511,
		70,1,0,0,0,512,510,1,0,0,0,513,514,5,92,0,0,514,515,5,47,0,0,515,516,5,
		42,0,0,516,520,1,0,0,0,517,519,3,3,1,0,518,517,1,0,0,0,519,522,1,0,0,0,
		520,518,1,0,0,0,520,521,1,0,0,0,521,72,1,0,0,0,522,520,1,0,0,0,523,527,
		5,92,0,0,524,526,3,3,1,0,525,524,1,0,0,0,526,529,1,0,0,0,527,525,1,0,0,
		0,527,528,1,0,0,0,528,74,1,0,0,0,529,527,1,0,0,0,530,531,8,3,0,0,531,76,
		1,0,0,0,532,534,3,75,37,0,533,532,1,0,0,0,534,535,1,0,0,0,535,533,1,0,
		0,0,535,536,1,0,0,0,536,78,1,0,0,0,62,0,90,94,100,104,114,123,127,137,
		145,154,163,172,181,192,198,205,212,218,228,231,237,243,250,257,263,273,
		276,282,288,292,297,304,310,320,323,331,338,345,352,359,366,373,380,387,
		394,401,410,419,428,437,446,455,464,473,482,491,500,510,520,527,535,1,
		6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
