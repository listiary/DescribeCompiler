2024-05-15 23:28:19:278 grammar LogManager.java:25 before: (COMBINED_GRAMMAR Describe06 (RULES (RULE LINE_COMMENT (BLOCK (LEXER_ALT_ACTION (ALT '//' (* (BLOCK (ALT .))) (BLOCK (ALT (? (BLOCK (ALT '\r'))) '\n') (ALT EOF))) skip))) (RULE BLOCK_COMMENT (BLOCK (LEXER_ALT_ACTION (ALT '/*' (* (BLOCK (ALT .))) '*/') skip))) (RULE NEWLINE (BLOCK (ALT (+ (BLOCK (ALT '\n')))) (ALT (+ (BLOCK (ALT '\r\n')))))) (RULE PRODUCER (BLOCK (ALT '->'))) (RULE SEPARATOR (BLOCK (ALT ','))) (RULE TERMINATOR (BLOCK (ALT ';'))) (RULE ESCAPE_ESCAPE (BLOCK (ALT '\\\\'))) (RULE ESCAPE_PRODUCER (BLOCK (ALT '\\->'))) (RULE ESCAPE_SEPARATOR (BLOCK (ALT '\\,'))) (RULE ESCAPE_TERMINATOR (BLOCK (ALT '\\;'))) (RULE ESCAPE_LCOMMENT (BLOCK (ALT '\\//'))) (RULE ESCAPE_BCOMMENT (BLOCK (ALT '\\/*'))) (RULE DATA (BLOCK (ALT . (* (BLOCK (ALT [a-zA-Z0-9 _(){}<>[\]@#$%^&*+=~`:"?!])))))) (RULE text_chunk (BLOCK (ALT ESCAPE_ESCAPE) (ALT ESCAPE_PRODUCER) (ALT ESCAPE_SEPARATOR) (ALT ESCAPE_TERMINATOR) (ALT ESCAPE_LCOMMENT) (ALT ESCAPE_BCOMMENT) (ALT NEWLINE) (ALT DATA))) (RULE item (BLOCK (ALT text_chunk (* (BLOCK (ALT text_chunk)))))) (RULE expression (BLOCK (ALT item PRODUCER TERMINATOR) (ALT item PRODUCER item_or_expression TERMINATOR) (ALT item PRODUCER item_or_expression_list TERMINATOR))) (RULE item_or_expression (BLOCK (ALT item) (ALT expression))) (RULE item_or_expression_list (BLOCK (ALT item SEPARATOR item_or_expression) (ALT expression (? (BLOCK (ALT SEPARATOR))) item_or_expression) (ALT item SEPARATOR item_or_expression_list) (ALT expression (? (BLOCK (ALT SEPARATOR))) item_or_expression_list))) (RULE expression_list (BLOCK (ALT expression (+ (BLOCK (ALT expression)))))) (RULE scripture (BLOCK (ALT expression_list EOF) (ALT expression EOF)))))
2024-05-15 23:28:19:294 grammar LogManager.java:25 after: (COMBINED_GRAMMAR Describe06 (RULES (RULE LINE_COMMENT (BLOCK (LEXER_ALT_ACTION (ALT '//' (* (BLOCK (ALT .))) (BLOCK (ALT (? (BLOCK (ALT '\r'))) '\n') (ALT EOF))) skip))) (RULE BLOCK_COMMENT (BLOCK (LEXER_ALT_ACTION (ALT '/*' (* (BLOCK (ALT .))) '*/') skip))) (RULE NEWLINE (BLOCK (ALT (+ (BLOCK (ALT '\n')))) (ALT (+ (BLOCK (ALT '\r\n')))))) (RULE PRODUCER (BLOCK (ALT '->'))) (RULE SEPARATOR (BLOCK (ALT ','))) (RULE TERMINATOR (BLOCK (ALT ';'))) (RULE ESCAPE_ESCAPE (BLOCK (ALT '\\\\'))) (RULE ESCAPE_PRODUCER (BLOCK (ALT '\\->'))) (RULE ESCAPE_SEPARATOR (BLOCK (ALT '\\,'))) (RULE ESCAPE_TERMINATOR (BLOCK (ALT '\\;'))) (RULE ESCAPE_LCOMMENT (BLOCK (ALT '\\//'))) (RULE ESCAPE_BCOMMENT (BLOCK (ALT '\\/*'))) (RULE DATA (BLOCK (ALT . (* (BLOCK (ALT [a-zA-Z0-9 _(){}<>[\]@#$%^&*+=~`:"?!])))))) (RULE text_chunk (BLOCK (ALT (SET ESCAPE_ESCAPE ESCAPE_PRODUCER ESCAPE_SEPARATOR ESCAPE_TERMINATOR ESCAPE_LCOMMENT ESCAPE_BCOMMENT NEWLINE DATA)))) (RULE item (BLOCK (ALT text_chunk (* (BLOCK (ALT text_chunk)))))) (RULE expression (BLOCK (ALT item PRODUCER TERMINATOR) (ALT item PRODUCER item_or_expression TERMINATOR) (ALT item PRODUCER item_or_expression_list TERMINATOR))) (RULE item_or_expression (BLOCK (ALT item) (ALT expression))) (RULE item_or_expression_list (BLOCK (ALT item SEPARATOR item_or_expression) (ALT expression (? (BLOCK (ALT SEPARATOR))) item_or_expression) (ALT item SEPARATOR item_or_expression_list) (ALT expression (? (BLOCK (ALT SEPARATOR))) item_or_expression_list))) (RULE expression_list (BLOCK (ALT expression (+ (BLOCK (ALT expression)))))) (RULE scripture (BLOCK (ALT expression_list EOF) (ALT expression EOF)))))
2024-05-15 23:28:19:341 grammar LogManager.java:25 after extract implicit lexer =(COMBINED_GRAMMAR Describe06 (RULES (RULE text_chunk (BLOCK (ALT (SET ESCAPE_ESCAPE ESCAPE_PRODUCER ESCAPE_SEPARATOR ESCAPE_TERMINATOR ESCAPE_LCOMMENT ESCAPE_BCOMMENT NEWLINE DATA)))) (RULE item (BLOCK (ALT text_chunk (* (BLOCK (ALT text_chunk)))))) (RULE expression (BLOCK (ALT item PRODUCER TERMINATOR) (ALT item PRODUCER item_or_expression TERMINATOR) (ALT item PRODUCER item_or_expression_list TERMINATOR))) (RULE item_or_expression (BLOCK (ALT item) (ALT expression))) (RULE item_or_expression_list (BLOCK (ALT item SEPARATOR item_or_expression) (ALT expression (? (BLOCK (ALT SEPARATOR))) item_or_expression) (ALT item SEPARATOR item_or_expression_list) (ALT expression (? (BLOCK (ALT SEPARATOR))) item_or_expression_list))) (RULE expression_list (BLOCK (ALT expression (+ (BLOCK (ALT expression)))))) (RULE scripture (BLOCK (ALT expression_list EOF) (ALT expression EOF)))))
2024-05-15 23:28:19:341 grammar LogManager.java:25 lexer =(LEXER_GRAMMAR Describe06Lexer (RULES (RULE LINE_COMMENT (BLOCK (LEXER_ALT_ACTION (ALT '//' (* (BLOCK (ALT .))) (BLOCK (ALT (? (BLOCK (ALT '\r'))) '\n') (ALT EOF))) skip))) (RULE BLOCK_COMMENT (BLOCK (LEXER_ALT_ACTION (ALT '/*' (* (BLOCK (ALT .))) '*/') skip))) (RULE NEWLINE (BLOCK (ALT (+ (BLOCK (ALT '\n')))) (ALT (+ (BLOCK (ALT '\r\n')))))) (RULE PRODUCER (BLOCK (ALT '->'))) (RULE SEPARATOR (BLOCK (ALT ','))) (RULE TERMINATOR (BLOCK (ALT ';'))) (RULE ESCAPE_ESCAPE (BLOCK (ALT '\\\\'))) (RULE ESCAPE_PRODUCER (BLOCK (ALT '\\->'))) (RULE ESCAPE_SEPARATOR (BLOCK (ALT '\\,'))) (RULE ESCAPE_TERMINATOR (BLOCK (ALT '\\;'))) (RULE ESCAPE_LCOMMENT (BLOCK (ALT '\\//'))) (RULE ESCAPE_BCOMMENT (BLOCK (ALT '\\/*'))) (RULE DATA (BLOCK (ALT . (* (BLOCK (ALT [a-zA-Z0-9 _(){}<>[\]@#$%^&*+=~`:"?!]))))))))
2024-05-15 23:28:19:895 semantics LogManager.java:25 tokens={EOF=-1, LINE_COMMENT=1, BLOCK_COMMENT=2, NEWLINE=3, PRODUCER=4, SEPARATOR=5, TERMINATOR=6, ESCAPE_ESCAPE=7, ESCAPE_PRODUCER=8, ESCAPE_SEPARATOR=9, ESCAPE_TERMINATOR=10, ESCAPE_LCOMMENT=11, ESCAPE_BCOMMENT=12, DATA=13}
2024-05-15 23:28:19:895 semantics LogManager.java:25 strings={'->'=4, ','=5, ';'=6, '\\\\'=7, '\\->'=8, '\\,'=9, '\\;'=10, '\\//'=11, '\\/*'=12}
2024-05-15 23:28:20:051 LL1 LogManager.java:25 
DECISION 0 in rule item
2024-05-15 23:28:20:051 LL1 LogManager.java:25 look=[{3, 7..13}, {4..6}]
2024-05-15 23:28:20:053 LL1 LogManager.java:25 LL(1)? true
2024-05-15 23:28:20:053 LL1 LogManager.java:25 
DECISION 1 in rule expression
2024-05-15 23:28:20:053 LL1 LogManager.java:25 look=[{3, 7..13}, {3, 7..13}, {3, 7..13}]
2024-05-15 23:28:20:053 LL1 LogManager.java:25 LL(1)? false
2024-05-15 23:28:20:053 LL1 LogManager.java:25 
DECISION 2 in rule item_or_expression
2024-05-15 23:28:20:053 LL1 LogManager.java:25 look=[{3, 7..13}, {3, 7..13}]
2024-05-15 23:28:20:053 LL1 LogManager.java:25 LL(1)? false
2024-05-15 23:28:20:053 LL1 LogManager.java:25 
DECISION 3 in rule item_or_expression_list
2024-05-15 23:28:20:053 LL1 LogManager.java:25 look=[5, {3, 7..13}]
2024-05-15 23:28:20:053 LL1 LogManager.java:25 LL(1)? true
2024-05-15 23:28:20:053 LL1 LogManager.java:25 
DECISION 4 in rule item_or_expression_list
2024-05-15 23:28:20:053 LL1 LogManager.java:25 look=[5, {3, 7..13}]
2024-05-15 23:28:20:053 LL1 LogManager.java:25 LL(1)? true
2024-05-15 23:28:20:053 LL1 LogManager.java:25 
DECISION 5 in rule item_or_expression_list
2024-05-15 23:28:20:053 LL1 LogManager.java:25 look=[{3, 7..13}, {3, 7..13}, {3, 7..13}, {3, 7..13}]
2024-05-15 23:28:20:053 LL1 LogManager.java:25 LL(1)? false
2024-05-15 23:28:20:053 LL1 LogManager.java:25 
DECISION 6 in rule expression_list
2024-05-15 23:28:20:053 LL1 LogManager.java:25 look=[{3, 7..13}, <EOF>]
2024-05-15 23:28:20:053 LL1 LogManager.java:25 LL(1)? true
2024-05-15 23:28:20:053 LL1 LogManager.java:25 
DECISION 7 in rule scripture
2024-05-15 23:28:20:053 LL1 LogManager.java:25 look=[{3, 7..13}, {3, 7..13}]
2024-05-15 23:28:20:073 LL1 LogManager.java:25 LL(1)? false
