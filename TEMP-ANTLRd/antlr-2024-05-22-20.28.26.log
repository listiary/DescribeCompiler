2024-05-22 20:28:25:922 grammar LogManager.java:25 before: (COMBINED_GRAMMAR Describe061 (RULES (RULE LINE_COMMENT (BLOCK (LEXER_ALT_ACTION (ALT '//' (* (BLOCK (ALT .))) (BLOCK (ALT (? (BLOCK (ALT '\r'))) '\n') (ALT EOF))) skip))) (RULE BLOCK_COMMENT (BLOCK (LEXER_ALT_ACTION (ALT '/*' (* (BLOCK (ALT .))) '*/') skip))) (RULE NEWLINE (BLOCK (ALT (+ (BLOCK (ALT '\n')))) (ALT (+ (BLOCK (ALT '\r\n')))))) (RULE HYPHEN (BLOCK (ALT '-'))) (RULE RIGHT_ARROW (BLOCK (ALT '>'))) (RULE SEPARATOR (BLOCK (ALT ','))) (RULE TERMINATOR (BLOCK (ALT ';'))) (RULE FIRWARD_SLASH (BLOCK (ALT '/'))) (RULE ESCAPE_ESCAPE (BLOCK (ALT '\\\\'))) (RULE ESCAPE_HYPHEN (BLOCK (ALT '\\-'))) (RULE ESCAPE_RIGHT_ARROW (BLOCK (ALT '\\>'))) (RULE ESCAPE_SEPARATOR (BLOCK (ALT '\\,'))) (RULE ESCAPE_TERMINATOR (BLOCK (ALT '\\;'))) (RULE ESCAPE_LCOMMENT (BLOCK (ALT '\\//'))) (RULE ESCAPE_BCOMMENT (BLOCK (ALT '\\/*'))) (RULE DATA_CHAR (RULEMODIFIERS fragment) (BLOCK (ALT (~ (SET [\-<>,;*/\\]))))) (RULE DATA (BLOCK (ALT (+ (BLOCK (ALT DATA_CHAR)))))) (RULE producer (BLOCK (ALT HYPHEN RIGHT_ARROW NEWLINE))) (RULE separator (BLOCK (ALT SEPARATOR NEWLINE))) (RULE terminator (BLOCK (ALT TERMINATOR NEWLINE))) (RULE text_chunk (BLOCK (ALT ESCAPE_ESCAPE) (ALT ESCAPE_HYPHEN) (ALT ESCAPE_RIGHT_ARROW) (ALT ESCAPE_SEPARATOR) (ALT ESCAPE_TERMINATOR) (ALT ESCAPE_LCOMMENT) (ALT ESCAPE_BCOMMENT) (ALT NEWLINE) (ALT HYPHEN) (ALT RIGHT_ARROW) (ALT FIRWARD_SLASH) (ALT DATA))) (RULE item (BLOCK (ALT text_chunk (* (BLOCK (ALT text_chunk)))))) (RULE expression (BLOCK (ALT item producer terminator) (ALT item producer item_or_expression terminator) (ALT item producer item_or_expression_list terminator))) (RULE item_or_expression (BLOCK (ALT item) (ALT expression))) (RULE item_or_expression_list (BLOCK (ALT item separator item_or_expression) (ALT expression (? (BLOCK (ALT separator))) item_or_expression) (ALT item separator item_or_expression_list) (ALT expression (? (BLOCK (ALT separator))) item_or_expression_list))) (RULE expression_list (BLOCK (ALT expression (+ (BLOCK (ALT expression)))))) (RULE scripture (BLOCK (ALT expression_list (* (BLOCK (ALT text_chunk))) EOF) (ALT expression (* (BLOCK (ALT text_chunk))) EOF)))))
2024-05-22 20:28:25:947 grammar LogManager.java:25 after: (COMBINED_GRAMMAR Describe061 (RULES (RULE LINE_COMMENT (BLOCK (LEXER_ALT_ACTION (ALT '//' (* (BLOCK (ALT .))) (BLOCK (ALT (? (BLOCK (ALT '\r'))) '\n') (ALT EOF))) skip))) (RULE BLOCK_COMMENT (BLOCK (LEXER_ALT_ACTION (ALT '/*' (* (BLOCK (ALT .))) '*/') skip))) (RULE NEWLINE (BLOCK (ALT (+ (BLOCK (ALT '\n')))) (ALT (+ (BLOCK (ALT '\r\n')))))) (RULE HYPHEN (BLOCK (ALT '-'))) (RULE RIGHT_ARROW (BLOCK (ALT '>'))) (RULE SEPARATOR (BLOCK (ALT ','))) (RULE TERMINATOR (BLOCK (ALT ';'))) (RULE FIRWARD_SLASH (BLOCK (ALT '/'))) (RULE ESCAPE_ESCAPE (BLOCK (ALT '\\\\'))) (RULE ESCAPE_HYPHEN (BLOCK (ALT '\\-'))) (RULE ESCAPE_RIGHT_ARROW (BLOCK (ALT '\\>'))) (RULE ESCAPE_SEPARATOR (BLOCK (ALT '\\,'))) (RULE ESCAPE_TERMINATOR (BLOCK (ALT '\\;'))) (RULE ESCAPE_LCOMMENT (BLOCK (ALT '\\//'))) (RULE ESCAPE_BCOMMENT (BLOCK (ALT '\\/*'))) (RULE DATA_CHAR (RULEMODIFIERS fragment) (BLOCK (ALT (~ (SET [\-<>,;*/\\]))))) (RULE DATA (BLOCK (ALT (+ (BLOCK (ALT DATA_CHAR)))))) (RULE producer (BLOCK (ALT HYPHEN RIGHT_ARROW NEWLINE))) (RULE separator (BLOCK (ALT SEPARATOR NEWLINE))) (RULE terminator (BLOCK (ALT TERMINATOR NEWLINE))) (RULE text_chunk (BLOCK (ALT (SET ESCAPE_ESCAPE ESCAPE_HYPHEN ESCAPE_RIGHT_ARROW ESCAPE_SEPARATOR ESCAPE_TERMINATOR ESCAPE_LCOMMENT ESCAPE_BCOMMENT NEWLINE HYPHEN RIGHT_ARROW FIRWARD_SLASH DATA)))) (RULE item (BLOCK (ALT text_chunk (* (BLOCK (ALT text_chunk)))))) (RULE expression (BLOCK (ALT item producer terminator) (ALT item producer item_or_expression terminator) (ALT item producer item_or_expression_list terminator))) (RULE item_or_expression (BLOCK (ALT item) (ALT expression))) (RULE item_or_expression_list (BLOCK (ALT item separator item_or_expression) (ALT expression (? (BLOCK (ALT separator))) item_or_expression) (ALT item separator item_or_expression_list) (ALT expression (? (BLOCK (ALT separator))) item_or_expression_list))) (RULE expression_list (BLOCK (ALT expression (+ (BLOCK (ALT expression)))))) (RULE scripture (BLOCK (ALT expression_list (* (BLOCK (ALT text_chunk))) EOF) (ALT expression (* (BLOCK (ALT text_chunk))) EOF)))))
2024-05-22 20:28:25:984 grammar LogManager.java:25 after extract implicit lexer =(COMBINED_GRAMMAR Describe061 (RULES (RULE producer (BLOCK (ALT HYPHEN RIGHT_ARROW NEWLINE))) (RULE separator (BLOCK (ALT SEPARATOR NEWLINE))) (RULE terminator (BLOCK (ALT TERMINATOR NEWLINE))) (RULE text_chunk (BLOCK (ALT (SET ESCAPE_ESCAPE ESCAPE_HYPHEN ESCAPE_RIGHT_ARROW ESCAPE_SEPARATOR ESCAPE_TERMINATOR ESCAPE_LCOMMENT ESCAPE_BCOMMENT NEWLINE HYPHEN RIGHT_ARROW FIRWARD_SLASH DATA)))) (RULE item (BLOCK (ALT text_chunk (* (BLOCK (ALT text_chunk)))))) (RULE expression (BLOCK (ALT item producer terminator) (ALT item producer item_or_expression terminator) (ALT item producer item_or_expression_list terminator))) (RULE item_or_expression (BLOCK (ALT item) (ALT expression))) (RULE item_or_expression_list (BLOCK (ALT item separator item_or_expression) (ALT expression (? (BLOCK (ALT separator))) item_or_expression) (ALT item separator item_or_expression_list) (ALT expression (? (BLOCK (ALT separator))) item_or_expression_list))) (RULE expression_list (BLOCK (ALT expression (+ (BLOCK (ALT expression)))))) (RULE scripture (BLOCK (ALT expression_list (* (BLOCK (ALT text_chunk))) EOF) (ALT expression (* (BLOCK (ALT text_chunk))) EOF)))))
2024-05-22 20:28:25:984 grammar LogManager.java:25 lexer =(LEXER_GRAMMAR Describe061Lexer (RULES (RULE LINE_COMMENT (BLOCK (LEXER_ALT_ACTION (ALT '//' (* (BLOCK (ALT .))) (BLOCK (ALT (? (BLOCK (ALT '\r'))) '\n') (ALT EOF))) skip))) (RULE BLOCK_COMMENT (BLOCK (LEXER_ALT_ACTION (ALT '/*' (* (BLOCK (ALT .))) '*/') skip))) (RULE NEWLINE (BLOCK (ALT (+ (BLOCK (ALT '\n')))) (ALT (+ (BLOCK (ALT '\r\n')))))) (RULE HYPHEN (BLOCK (ALT '-'))) (RULE RIGHT_ARROW (BLOCK (ALT '>'))) (RULE SEPARATOR (BLOCK (ALT ','))) (RULE TERMINATOR (BLOCK (ALT ';'))) (RULE FIRWARD_SLASH (BLOCK (ALT '/'))) (RULE ESCAPE_ESCAPE (BLOCK (ALT '\\\\'))) (RULE ESCAPE_HYPHEN (BLOCK (ALT '\\-'))) (RULE ESCAPE_RIGHT_ARROW (BLOCK (ALT '\\>'))) (RULE ESCAPE_SEPARATOR (BLOCK (ALT '\\,'))) (RULE ESCAPE_TERMINATOR (BLOCK (ALT '\\;'))) (RULE ESCAPE_LCOMMENT (BLOCK (ALT '\\//'))) (RULE ESCAPE_BCOMMENT (BLOCK (ALT '\\/*'))) (RULE DATA_CHAR (RULEMODIFIERS fragment) (BLOCK (ALT (~ (SET [\-<>,;*/\\]))))) (RULE DATA (BLOCK (ALT (+ (BLOCK (ALT DATA_CHAR))))))))
2024-05-22 20:28:26:510 semantics LogManager.java:25 tokens={EOF=-1, LINE_COMMENT=1, BLOCK_COMMENT=2, NEWLINE=3, HYPHEN=4, RIGHT_ARROW=5, SEPARATOR=6, TERMINATOR=7, FIRWARD_SLASH=8, ESCAPE_ESCAPE=9, ESCAPE_HYPHEN=10, ESCAPE_RIGHT_ARROW=11, ESCAPE_SEPARATOR=12, ESCAPE_TERMINATOR=13, ESCAPE_LCOMMENT=14, ESCAPE_BCOMMENT=15, DATA=16}
2024-05-22 20:28:26:510 semantics LogManager.java:25 strings={'-'=4, '>'=5, ','=6, ';'=7, '/'=8, '\\\\'=9, '\\-'=10, '\\>'=11, '\\,'=12, '\\;'=13, '\\//'=14, '\\/*'=15}
2024-05-22 20:28:26:555 LL1 LogManager.java:25 
DECISION 0 in rule item
2024-05-22 20:28:26:556 LL1 LogManager.java:25 look=[{3..5, 8..16}, {4, 6..7}]
2024-05-22 20:28:26:557 LL1 LogManager.java:25 LL(1)? false
2024-05-22 20:28:26:557 LL1 LogManager.java:25 
DECISION 1 in rule expression
2024-05-22 20:28:26:557 LL1 LogManager.java:25 look=[{3..5, 8..16}, {3..5, 8..16}, {3..5, 8..16}]
2024-05-22 20:28:26:557 LL1 LogManager.java:25 LL(1)? false
2024-05-22 20:28:26:557 LL1 LogManager.java:25 
DECISION 2 in rule item_or_expression
2024-05-22 20:28:26:557 LL1 LogManager.java:25 look=[{3..5, 8..16}, {3..5, 8..16}]
2024-05-22 20:28:26:557 LL1 LogManager.java:25 LL(1)? false
2024-05-22 20:28:26:558 LL1 LogManager.java:25 
DECISION 3 in rule item_or_expression_list
2024-05-22 20:28:26:558 LL1 LogManager.java:25 look=[6, {3..5, 8..16}]
2024-05-22 20:28:26:558 LL1 LogManager.java:25 LL(1)? true
2024-05-22 20:28:26:558 LL1 LogManager.java:25 
DECISION 4 in rule item_or_expression_list
2024-05-22 20:28:26:559 LL1 LogManager.java:25 look=[6, {3..5, 8..16}]
2024-05-22 20:28:26:559 LL1 LogManager.java:25 LL(1)? true
2024-05-22 20:28:26:559 LL1 LogManager.java:25 
DECISION 5 in rule item_or_expression_list
2024-05-22 20:28:26:559 LL1 LogManager.java:25 look=[{3..5, 8..16}, {3..5, 8..16}, {3..5, 8..16}, {3..5, 8..16}]
2024-05-22 20:28:26:561 LL1 LogManager.java:25 LL(1)? false
2024-05-22 20:28:26:561 LL1 LogManager.java:25 
DECISION 6 in rule expression_list
2024-05-22 20:28:26:561 LL1 LogManager.java:25 look=[{3..5, 8..16}, {<EOF>, 3..5, 8..16}]
2024-05-22 20:28:26:561 LL1 LogManager.java:25 LL(1)? false
2024-05-22 20:28:26:561 LL1 LogManager.java:25 
DECISION 7 in rule scripture
2024-05-22 20:28:26:561 LL1 LogManager.java:25 look=[{3..5, 8..16}, <EOF>]
2024-05-22 20:28:26:561 LL1 LogManager.java:25 LL(1)? true
2024-05-22 20:28:26:562 LL1 LogManager.java:25 
DECISION 8 in rule scripture
2024-05-22 20:28:26:562 LL1 LogManager.java:25 look=[{3..5, 8..16}, <EOF>]
2024-05-22 20:28:26:562 LL1 LogManager.java:25 LL(1)? true
2024-05-22 20:28:26:562 LL1 LogManager.java:25 
DECISION 9 in rule scripture
2024-05-22 20:28:26:562 LL1 LogManager.java:25 look=[{3..5, 8..16}, {3..5, 8..16}]
2024-05-22 20:28:26:562 LL1 LogManager.java:25 LL(1)? false
