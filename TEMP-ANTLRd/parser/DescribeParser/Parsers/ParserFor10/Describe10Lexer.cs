//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Describe10.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class Describe10Lexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		LINE_COMMENT=1, BLOCK_COMMENT=2, TAG=3, LINK=4, DECORATOR=5, HYPHEN=6, 
		PRODUCTION_ARROW=7, SEPARATOR=8, TERMINATOR=9, FORWARD_SLASHES=10, FORWARD_SLASH=11, 
		COMMA=12, SEMICOLON=13, RIGHT_ARROW=14, RIGHT_SQUARE=15, RIGHT_CURL=16, 
		STAR=17, ESCAPE_ESCAPE=18, ESCAPE_HYPHEN=19, ESCAPE_RIGHT_ARROW=20, ESCAPE_LEFT_ARROW=21, 
		ESCAPE_RIGHT_SQUARE=22, ESCAPE_LEFT_SQUARE=23, ESCAPE_RIGHT_CURL=24, ESCAPE_LEFT_CURL=25, 
		ESCAPE_SEPARATOR=26, ESCAPE_TERMINATOR=27, ESCAPE_LCOMMENT=28, ESCAPE_BCOMMENT=29, 
		ESCAPE=30, DATA=31;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"WHITESPACE", "LINESPACE", "LINE_COMMENT", "BLOCK_COMMENT", "TAG", "LINK", 
		"DECORATOR", "HYPHEN", "PRODUCTION_ARROW", "SEPARATOR", "TERMINATOR", 
		"FORWARD_SLASHES", "FORWARD_SLASH", "COMMA", "SEMICOLON", "RIGHT_ARROW", 
		"RIGHT_SQUARE", "RIGHT_CURL", "STAR", "ESCAPE_ESCAPE", "ESCAPE_HYPHEN", 
		"ESCAPE_RIGHT_ARROW", "ESCAPE_LEFT_ARROW", "ESCAPE_RIGHT_SQUARE", "ESCAPE_LEFT_SQUARE", 
		"ESCAPE_RIGHT_CURL", "ESCAPE_LEFT_CURL", "ESCAPE_SEPARATOR", "ESCAPE_TERMINATOR", 
		"ESCAPE_LCOMMENT", "ESCAPE_BCOMMENT", "ESCAPE", "DATA_CHAR", "DATA"
	};


	public Describe10Lexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public Describe10Lexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, null, "'-'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "LINE_COMMENT", "BLOCK_COMMENT", "TAG", "LINK", "DECORATOR", "HYPHEN", 
		"PRODUCTION_ARROW", "SEPARATOR", "TERMINATOR", "FORWARD_SLASHES", "FORWARD_SLASH", 
		"COMMA", "SEMICOLON", "RIGHT_ARROW", "RIGHT_SQUARE", "RIGHT_CURL", "STAR", 
		"ESCAPE_ESCAPE", "ESCAPE_HYPHEN", "ESCAPE_RIGHT_ARROW", "ESCAPE_LEFT_ARROW", 
		"ESCAPE_RIGHT_SQUARE", "ESCAPE_LEFT_SQUARE", "ESCAPE_RIGHT_CURL", "ESCAPE_LEFT_CURL", 
		"ESCAPE_SEPARATOR", "ESCAPE_TERMINATOR", "ESCAPE_LCOMMENT", "ESCAPE_BCOMMENT", 
		"ESCAPE", "DATA"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Describe10.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static Describe10Lexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,31,483,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,1,0,1,0,1,1,1,1,
		1,2,1,2,1,2,1,2,1,2,5,2,79,8,2,10,2,12,2,82,9,2,1,2,3,2,85,8,2,1,2,1,2,
		5,2,89,8,2,10,2,12,2,92,9,2,1,2,3,2,95,8,2,1,2,1,2,1,3,1,3,1,3,1,3,5,3,
		103,8,3,10,3,12,3,106,9,3,1,3,1,3,1,3,1,3,5,3,112,8,3,10,3,12,3,115,9,
		3,1,3,3,3,118,8,3,1,3,1,3,1,4,1,4,4,4,124,8,4,11,4,12,4,125,1,4,1,4,5,
		4,130,8,4,10,4,12,4,133,9,4,1,5,1,5,5,5,137,8,5,10,5,12,5,140,9,5,1,5,
		1,5,5,5,144,8,5,10,5,12,5,147,9,5,1,6,1,6,5,6,151,8,6,10,6,12,6,154,9,
		6,1,6,1,6,5,6,158,8,6,10,6,12,6,161,9,6,1,7,1,7,1,8,1,8,5,8,167,8,8,10,
		8,12,8,170,9,8,1,8,5,8,173,8,8,10,8,12,8,176,9,8,1,8,1,8,5,8,180,8,8,10,
		8,12,8,183,9,8,1,8,1,8,5,8,187,8,8,10,8,12,8,190,9,8,1,8,5,8,193,8,8,10,
		8,12,8,196,9,8,1,8,1,8,1,8,1,8,1,8,5,8,203,8,8,10,8,12,8,206,9,8,3,8,208,
		8,8,1,9,1,9,5,9,212,8,9,10,9,12,9,215,9,9,1,9,5,9,218,8,9,10,9,12,9,221,
		9,9,1,9,1,9,5,9,225,8,9,10,9,12,9,228,9,9,1,9,1,9,5,9,232,8,9,10,9,12,
		9,235,9,9,1,9,5,9,238,8,9,10,9,12,9,241,9,9,1,9,1,9,1,9,1,9,1,9,5,9,248,
		8,9,10,9,12,9,251,9,9,3,9,253,8,9,1,10,1,10,5,10,257,8,10,10,10,12,10,
		260,9,10,1,10,5,10,263,8,10,10,10,12,10,266,9,10,1,10,3,10,269,8,10,1,
		10,5,10,272,8,10,10,10,12,10,275,9,10,1,10,1,10,5,10,279,8,10,10,10,12,
		10,282,9,10,1,10,5,10,285,8,10,10,10,12,10,288,9,10,1,10,1,10,1,10,1,10,
		1,10,5,10,295,8,10,10,10,12,10,298,9,10,3,10,300,8,10,1,11,1,11,1,11,1,
		11,5,11,306,8,11,10,11,12,11,309,9,11,1,12,1,12,5,12,313,8,12,10,12,12,
		12,316,9,12,1,13,1,13,5,13,320,8,13,10,13,12,13,323,9,13,1,14,1,14,5,14,
		327,8,14,10,14,12,14,330,9,14,1,15,1,15,5,15,334,8,15,10,15,12,15,337,
		9,15,1,16,1,16,5,16,341,8,16,10,16,12,16,344,9,16,1,17,1,17,5,17,348,8,
		17,10,17,12,17,351,9,17,1,18,1,18,5,18,355,8,18,10,18,12,18,358,9,18,1,
		19,1,19,1,19,1,19,5,19,364,8,19,10,19,12,19,367,9,19,1,20,1,20,1,20,1,
		20,5,20,373,8,20,10,20,12,20,376,9,20,1,21,1,21,1,21,1,21,5,21,382,8,21,
		10,21,12,21,385,9,21,1,22,1,22,1,22,1,22,5,22,391,8,22,10,22,12,22,394,
		9,22,1,23,1,23,1,23,1,23,5,23,400,8,23,10,23,12,23,403,9,23,1,24,1,24,
		1,24,1,24,5,24,409,8,24,10,24,12,24,412,9,24,1,25,1,25,1,25,1,25,5,25,
		418,8,25,10,25,12,25,421,9,25,1,26,1,26,1,26,1,26,5,26,427,8,26,10,26,
		12,26,430,9,26,1,27,1,27,1,27,1,27,5,27,436,8,27,10,27,12,27,439,9,27,
		1,28,1,28,1,28,1,28,5,28,445,8,28,10,28,12,28,448,9,28,1,29,1,29,1,29,
		1,29,1,29,5,29,455,8,29,10,29,12,29,458,9,29,1,30,1,30,1,30,1,30,1,30,
		5,30,465,8,30,10,30,12,30,468,9,30,1,31,1,31,5,31,472,8,31,10,31,12,31,
		475,9,31,1,32,1,32,1,33,4,33,480,8,33,11,33,12,33,481,5,80,104,125,138,
		152,0,34,1,0,3,0,5,1,7,2,9,3,11,4,13,5,15,6,17,7,19,8,21,9,23,10,25,11,
		27,12,29,13,31,14,33,15,35,16,37,17,39,18,41,19,43,20,45,21,47,22,49,23,
		51,24,53,25,55,26,57,27,59,28,61,29,63,30,65,0,67,31,1,0,4,11,0,9,9,11,
		13,32,32,133,133,160,160,5760,5760,8192,8202,8232,8233,8239,8239,8287,
		8287,12288,12288,10,0,9,13,32,32,133,133,160,160,5760,5760,8192,8202,8232,
		8233,8239,8239,8287,8287,12288,12288,1,1,10,10,8,0,42,42,44,45,47,47,59,
		60,62,62,91,93,123,123,125,125,538,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,
		0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,
		1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,
		0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,
		1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,
		0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,67,
		1,0,0,0,1,69,1,0,0,0,3,71,1,0,0,0,5,73,1,0,0,0,7,98,1,0,0,0,9,121,1,0,
		0,0,11,134,1,0,0,0,13,148,1,0,0,0,15,162,1,0,0,0,17,207,1,0,0,0,19,252,
		1,0,0,0,21,299,1,0,0,0,23,301,1,0,0,0,25,310,1,0,0,0,27,317,1,0,0,0,29,
		324,1,0,0,0,31,331,1,0,0,0,33,338,1,0,0,0,35,345,1,0,0,0,37,352,1,0,0,
		0,39,359,1,0,0,0,41,368,1,0,0,0,43,377,1,0,0,0,45,386,1,0,0,0,47,395,1,
		0,0,0,49,404,1,0,0,0,51,413,1,0,0,0,53,422,1,0,0,0,55,431,1,0,0,0,57,440,
		1,0,0,0,59,449,1,0,0,0,61,459,1,0,0,0,63,469,1,0,0,0,65,476,1,0,0,0,67,
		479,1,0,0,0,69,70,7,0,0,0,70,2,1,0,0,0,71,72,7,1,0,0,72,4,1,0,0,0,73,74,
		5,47,0,0,74,75,5,47,0,0,75,76,5,32,0,0,76,80,1,0,0,0,77,79,9,0,0,0,78,
		77,1,0,0,0,79,82,1,0,0,0,80,81,1,0,0,0,80,78,1,0,0,0,81,94,1,0,0,0,82,
		80,1,0,0,0,83,85,5,13,0,0,84,83,1,0,0,0,84,85,1,0,0,0,85,86,1,0,0,0,86,
		90,5,10,0,0,87,89,3,3,1,0,88,87,1,0,0,0,89,92,1,0,0,0,90,88,1,0,0,0,90,
		91,1,0,0,0,91,95,1,0,0,0,92,90,1,0,0,0,93,95,5,0,0,1,94,84,1,0,0,0,94,
		93,1,0,0,0,95,96,1,0,0,0,96,97,6,2,0,0,97,6,1,0,0,0,98,99,5,47,0,0,99,
		100,5,42,0,0,100,104,1,0,0,0,101,103,9,0,0,0,102,101,1,0,0,0,103,106,1,
		0,0,0,104,105,1,0,0,0,104,102,1,0,0,0,105,117,1,0,0,0,106,104,1,0,0,0,
		107,108,5,42,0,0,108,109,5,47,0,0,109,113,1,0,0,0,110,112,3,3,1,0,111,
		110,1,0,0,0,112,115,1,0,0,0,113,111,1,0,0,0,113,114,1,0,0,0,114,118,1,
		0,0,0,115,113,1,0,0,0,116,118,5,0,0,1,117,107,1,0,0,0,117,116,1,0,0,0,
		118,119,1,0,0,0,119,120,6,3,0,0,120,8,1,0,0,0,121,123,5,60,0,0,122,124,
		9,0,0,0,123,122,1,0,0,0,124,125,1,0,0,0,125,126,1,0,0,0,125,123,1,0,0,
		0,126,127,1,0,0,0,127,131,5,62,0,0,128,130,3,3,1,0,129,128,1,0,0,0,130,
		133,1,0,0,0,131,129,1,0,0,0,131,132,1,0,0,0,132,10,1,0,0,0,133,131,1,0,
		0,0,134,138,5,91,0,0,135,137,9,0,0,0,136,135,1,0,0,0,137,140,1,0,0,0,138,
		139,1,0,0,0,138,136,1,0,0,0,139,141,1,0,0,0,140,138,1,0,0,0,141,145,5,
		93,0,0,142,144,3,3,1,0,143,142,1,0,0,0,144,147,1,0,0,0,145,143,1,0,0,0,
		145,146,1,0,0,0,146,12,1,0,0,0,147,145,1,0,0,0,148,152,5,123,0,0,149,151,
		9,0,0,0,150,149,1,0,0,0,151,154,1,0,0,0,152,153,1,0,0,0,152,150,1,0,0,
		0,153,155,1,0,0,0,154,152,1,0,0,0,155,159,5,125,0,0,156,158,3,3,1,0,157,
		156,1,0,0,0,158,161,1,0,0,0,159,157,1,0,0,0,159,160,1,0,0,0,160,14,1,0,
		0,0,161,159,1,0,0,0,162,163,5,45,0,0,163,16,1,0,0,0,164,168,5,62,0,0,165,
		167,3,1,0,0,166,165,1,0,0,0,167,170,1,0,0,0,168,166,1,0,0,0,168,169,1,
		0,0,0,169,174,1,0,0,0,170,168,1,0,0,0,171,173,3,7,3,0,172,171,1,0,0,0,
		173,176,1,0,0,0,174,172,1,0,0,0,174,175,1,0,0,0,175,177,1,0,0,0,176,174,
		1,0,0,0,177,181,5,10,0,0,178,180,3,3,1,0,179,178,1,0,0,0,180,183,1,0,0,
		0,181,179,1,0,0,0,181,182,1,0,0,0,182,208,1,0,0,0,183,181,1,0,0,0,184,
		188,5,62,0,0,185,187,3,1,0,0,186,185,1,0,0,0,187,190,1,0,0,0,188,186,1,
		0,0,0,188,189,1,0,0,0,189,194,1,0,0,0,190,188,1,0,0,0,191,193,3,7,3,0,
		192,191,1,0,0,0,193,196,1,0,0,0,194,192,1,0,0,0,194,195,1,0,0,0,195,197,
		1,0,0,0,196,194,1,0,0,0,197,208,3,5,2,0,198,199,5,62,0,0,199,200,5,62,
		0,0,200,204,1,0,0,0,201,203,3,3,1,0,202,201,1,0,0,0,203,206,1,0,0,0,204,
		202,1,0,0,0,204,205,1,0,0,0,205,208,1,0,0,0,206,204,1,0,0,0,207,164,1,
		0,0,0,207,184,1,0,0,0,207,198,1,0,0,0,208,18,1,0,0,0,209,213,5,44,0,0,
		210,212,3,1,0,0,211,210,1,0,0,0,212,215,1,0,0,0,213,211,1,0,0,0,213,214,
		1,0,0,0,214,219,1,0,0,0,215,213,1,0,0,0,216,218,3,7,3,0,217,216,1,0,0,
		0,218,221,1,0,0,0,219,217,1,0,0,0,219,220,1,0,0,0,220,222,1,0,0,0,221,
		219,1,0,0,0,222,226,5,10,0,0,223,225,3,3,1,0,224,223,1,0,0,0,225,228,1,
		0,0,0,226,224,1,0,0,0,226,227,1,0,0,0,227,253,1,0,0,0,228,226,1,0,0,0,
		229,233,5,44,0,0,230,232,3,1,0,0,231,230,1,0,0,0,232,235,1,0,0,0,233,231,
		1,0,0,0,233,234,1,0,0,0,234,239,1,0,0,0,235,233,1,0,0,0,236,238,3,7,3,
		0,237,236,1,0,0,0,238,241,1,0,0,0,239,237,1,0,0,0,239,240,1,0,0,0,240,
		242,1,0,0,0,241,239,1,0,0,0,242,253,3,5,2,0,243,244,5,44,0,0,244,245,5,
		44,0,0,245,249,1,0,0,0,246,248,3,3,1,0,247,246,1,0,0,0,248,251,1,0,0,0,
		249,247,1,0,0,0,249,250,1,0,0,0,250,253,1,0,0,0,251,249,1,0,0,0,252,209,
		1,0,0,0,252,229,1,0,0,0,252,243,1,0,0,0,253,20,1,0,0,0,254,258,5,59,0,
		0,255,257,3,1,0,0,256,255,1,0,0,0,257,260,1,0,0,0,258,256,1,0,0,0,258,
		259,1,0,0,0,259,264,1,0,0,0,260,258,1,0,0,0,261,263,3,7,3,0,262,261,1,
		0,0,0,263,266,1,0,0,0,264,262,1,0,0,0,264,265,1,0,0,0,265,268,1,0,0,0,
		266,264,1,0,0,0,267,269,7,2,0,0,268,267,1,0,0,0,269,273,1,0,0,0,270,272,
		3,3,1,0,271,270,1,0,0,0,272,275,1,0,0,0,273,271,1,0,0,0,273,274,1,0,0,
		0,274,300,1,0,0,0,275,273,1,0,0,0,276,280,5,59,0,0,277,279,3,1,0,0,278,
		277,1,0,0,0,279,282,1,0,0,0,280,278,1,0,0,0,280,281,1,0,0,0,281,286,1,
		0,0,0,282,280,1,0,0,0,283,285,3,7,3,0,284,283,1,0,0,0,285,288,1,0,0,0,
		286,284,1,0,0,0,286,287,1,0,0,0,287,289,1,0,0,0,288,286,1,0,0,0,289,300,
		3,5,2,0,290,291,5,59,0,0,291,292,5,59,0,0,292,296,1,0,0,0,293,295,3,3,
		1,0,294,293,1,0,0,0,295,298,1,0,0,0,296,294,1,0,0,0,296,297,1,0,0,0,297,
		300,1,0,0,0,298,296,1,0,0,0,299,254,1,0,0,0,299,276,1,0,0,0,299,290,1,
		0,0,0,300,22,1,0,0,0,301,302,5,47,0,0,302,303,5,47,0,0,303,307,1,0,0,0,
		304,306,3,3,1,0,305,304,1,0,0,0,306,309,1,0,0,0,307,305,1,0,0,0,307,308,
		1,0,0,0,308,24,1,0,0,0,309,307,1,0,0,0,310,314,5,47,0,0,311,313,3,3,1,
		0,312,311,1,0,0,0,313,316,1,0,0,0,314,312,1,0,0,0,314,315,1,0,0,0,315,
		26,1,0,0,0,316,314,1,0,0,0,317,321,5,44,0,0,318,320,3,3,1,0,319,318,1,
		0,0,0,320,323,1,0,0,0,321,319,1,0,0,0,321,322,1,0,0,0,322,28,1,0,0,0,323,
		321,1,0,0,0,324,328,5,59,0,0,325,327,3,3,1,0,326,325,1,0,0,0,327,330,1,
		0,0,0,328,326,1,0,0,0,328,329,1,0,0,0,329,30,1,0,0,0,330,328,1,0,0,0,331,
		335,5,62,0,0,332,334,3,3,1,0,333,332,1,0,0,0,334,337,1,0,0,0,335,333,1,
		0,0,0,335,336,1,0,0,0,336,32,1,0,0,0,337,335,1,0,0,0,338,342,5,93,0,0,
		339,341,3,3,1,0,340,339,1,0,0,0,341,344,1,0,0,0,342,340,1,0,0,0,342,343,
		1,0,0,0,343,34,1,0,0,0,344,342,1,0,0,0,345,349,5,125,0,0,346,348,3,3,1,
		0,347,346,1,0,0,0,348,351,1,0,0,0,349,347,1,0,0,0,349,350,1,0,0,0,350,
		36,1,0,0,0,351,349,1,0,0,0,352,356,5,42,0,0,353,355,3,3,1,0,354,353,1,
		0,0,0,355,358,1,0,0,0,356,354,1,0,0,0,356,357,1,0,0,0,357,38,1,0,0,0,358,
		356,1,0,0,0,359,360,5,92,0,0,360,361,5,92,0,0,361,365,1,0,0,0,362,364,
		3,3,1,0,363,362,1,0,0,0,364,367,1,0,0,0,365,363,1,0,0,0,365,366,1,0,0,
		0,366,40,1,0,0,0,367,365,1,0,0,0,368,369,5,92,0,0,369,370,5,45,0,0,370,
		374,1,0,0,0,371,373,3,3,1,0,372,371,1,0,0,0,373,376,1,0,0,0,374,372,1,
		0,0,0,374,375,1,0,0,0,375,42,1,0,0,0,376,374,1,0,0,0,377,378,5,92,0,0,
		378,379,5,62,0,0,379,383,1,0,0,0,380,382,3,3,1,0,381,380,1,0,0,0,382,385,
		1,0,0,0,383,381,1,0,0,0,383,384,1,0,0,0,384,44,1,0,0,0,385,383,1,0,0,0,
		386,387,5,92,0,0,387,388,5,60,0,0,388,392,1,0,0,0,389,391,3,3,1,0,390,
		389,1,0,0,0,391,394,1,0,0,0,392,390,1,0,0,0,392,393,1,0,0,0,393,46,1,0,
		0,0,394,392,1,0,0,0,395,396,5,92,0,0,396,397,5,93,0,0,397,401,1,0,0,0,
		398,400,3,3,1,0,399,398,1,0,0,0,400,403,1,0,0,0,401,399,1,0,0,0,401,402,
		1,0,0,0,402,48,1,0,0,0,403,401,1,0,0,0,404,405,5,92,0,0,405,406,5,91,0,
		0,406,410,1,0,0,0,407,409,3,3,1,0,408,407,1,0,0,0,409,412,1,0,0,0,410,
		408,1,0,0,0,410,411,1,0,0,0,411,50,1,0,0,0,412,410,1,0,0,0,413,414,5,92,
		0,0,414,415,5,125,0,0,415,419,1,0,0,0,416,418,3,3,1,0,417,416,1,0,0,0,
		418,421,1,0,0,0,419,417,1,0,0,0,419,420,1,0,0,0,420,52,1,0,0,0,421,419,
		1,0,0,0,422,423,5,92,0,0,423,424,5,123,0,0,424,428,1,0,0,0,425,427,3,3,
		1,0,426,425,1,0,0,0,427,430,1,0,0,0,428,426,1,0,0,0,428,429,1,0,0,0,429,
		54,1,0,0,0,430,428,1,0,0,0,431,432,5,92,0,0,432,433,5,44,0,0,433,437,1,
		0,0,0,434,436,3,3,1,0,435,434,1,0,0,0,436,439,1,0,0,0,437,435,1,0,0,0,
		437,438,1,0,0,0,438,56,1,0,0,0,439,437,1,0,0,0,440,441,5,92,0,0,441,442,
		5,59,0,0,442,446,1,0,0,0,443,445,3,3,1,0,444,443,1,0,0,0,445,448,1,0,0,
		0,446,444,1,0,0,0,446,447,1,0,0,0,447,58,1,0,0,0,448,446,1,0,0,0,449,450,
		5,92,0,0,450,451,5,47,0,0,451,452,5,47,0,0,452,456,1,0,0,0,453,455,3,3,
		1,0,454,453,1,0,0,0,455,458,1,0,0,0,456,454,1,0,0,0,456,457,1,0,0,0,457,
		60,1,0,0,0,458,456,1,0,0,0,459,460,5,92,0,0,460,461,5,47,0,0,461,462,5,
		42,0,0,462,466,1,0,0,0,463,465,3,3,1,0,464,463,1,0,0,0,465,468,1,0,0,0,
		466,464,1,0,0,0,466,467,1,0,0,0,467,62,1,0,0,0,468,466,1,0,0,0,469,473,
		5,92,0,0,470,472,3,3,1,0,471,470,1,0,0,0,472,475,1,0,0,0,473,471,1,0,0,
		0,473,474,1,0,0,0,474,64,1,0,0,0,475,473,1,0,0,0,476,477,8,3,0,0,477,66,
		1,0,0,0,478,480,3,65,32,0,479,478,1,0,0,0,480,481,1,0,0,0,481,479,1,0,
		0,0,481,482,1,0,0,0,482,68,1,0,0,0,58,0,80,84,90,94,104,113,117,125,131,
		138,145,152,159,168,174,181,188,194,204,207,213,219,226,233,239,249,252,
		258,264,268,273,280,286,296,299,307,314,321,328,335,342,349,356,365,374,
		383,392,401,410,419,428,437,446,456,466,473,481,1,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
